#!/dev/null




--<<== plots / view / jhu / generate
	#! {{}}
	
	<< plots / view / jhu / all
		test "${#}" -eq 0
		exec -- "${ZRUN[@]}" ':: plots / view / jhu / exec' __jhu_plots__all__all__png
	!!
	
	{{ range $_, $_filter := array "global" "europe-major" "europe-minor" "romania" "us" "continents" "subcontinents" }}
	
	<< plots / view / jhu / plots / {{ $_filter }} / all
		test "${#}" -eq 0
		exec -- "${ZRUN[@]}" ':: plots / view / jhu / exec' __jhu_plots__{{ $_filter }}__all__png -path '*/{{ $_filter }}/*'
	!!
	
	{{ range $_, $_method := array "absolute" "absolute_pop100k" "relative" "delta" "deltapct" }}
	<< plots / view / jhu / plots / {{ $_filter }} / {{ $_method }}
		test "${#}" -eq 0
		exec -- "${ZRUN[@]}" ':: plots / view / jhu / exec' __jhu_plots__{{ $_filter }}__{{ $_method }}__png -path '*/{{ $_filter }}/png/{{ $_method }}-*'
	!!
	{{ end }}
	
	{{ end }}
	
!!


--<< plots / view / jhu / exec
	
	test "${#}" -ge 1
	_target="${1}"
	shift -- 1
	
	"${ZRUN[@]}" ':: ninja' "${_target}"
	
	exec -- sxiv -i \
		< <(
			find ./plots/jhu/ \
					-type f \
					-name '*.png' \
					"${@}" \
					-print \
			| sort \
			#
		) \
	#
!!




--<<~~.. ninja / script / datasets / jhu / daily
	#! {{}}
	
	{{ $_days := array }}
	{{ range $_, $_day := array "01-22-2020" "01-23-2020" "01-24-2020" "01-25-2020" "01-26-2020" "01-27-2020" "01-28-2020" "01-29-2020" "01-30-2020" "01-31-2020" }}
	{{ $_days = append $_days $_day }} {{ end }}
	{{ range $_, $_day := array "02-01-2020" "02-02-2020" "02-03-2020" "02-04-2020" "02-05-2020" "02-06-2020" "02-07-2020" "02-08-2020" "02-09-2020" "02-10-2020" "02-11-2020" "02-12-2020" "02-13-2020" "02-14-2020" "02-15-2020" "02-16-2020" "02-17-2020" "02-18-2020" "02-19-2020" "02-20-2020" "02-21-2020" "02-22-2020" "02-23-2020" "02-24-2020" "02-25-2020" "02-26-2020" "02-27-2020" "02-28-2020" "02-29-2020" }}
	{{ $_days = append $_days $_day }} {{ end }}
	{{ range $_, $_day := array "03-01-2020" "03-02-2020" "03-03-2020" "03-04-2020" "03-05-2020" "03-06-2020" "03-07-2020" "03-08-2020" "03-09-2020" "03-10-2020" "03-11-2020" "03-12-2020" "03-13-2020" "03-14-2020" "03-15-2020" "03-16-2020" "03-17-2020" "03-18-2020" "03-19-2020" "03-20-2020" "03-21-2020" "03-22-2020" "03-23-2020" "03-24-2020" "03-25-2020" }}
	{{ $_days = append $_days $_day }} {{ end }}
	
	{{ range $_, $_day := $_days }}
	
	build ./imports/jhu/daily/raw-csv/{{ $_day }}.csv : fetch-curl $
	        | ${ninja_force}
	    url = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/{{ $_day }}.csv'
	
	build ./imports/jhu/daily/raw-json/{{ $_day }}.json : csv-to-json $
	        ./imports/jhu/daily/raw-csv/{{ $_day }}.csv $
	        | ./sources/csv-to-json.py ${zrun_library}
	    dataset = {{ $_day }}
	    format = csv
	    pool = cpu_moderate
	
	{{ end }}
	
	build ./imports/jhu/daily/raw-json/merged.json : z-run-out-in $
	        {{ range $_, $_day := $_days }} ./imports/jhu/daily/raw-json/{{ $_day }}.json {{ end }} $
	        | ./sources/jhu-imports-merge.jq ${zrun_library}
	    scriptlet = ':: tools / jq / filter / multi'
	    arguments_pre = ':: process / jhu / imports / merge / script'
	    pool = cpu_moderate
	
!!




--<<~~.. ninja / script / datasets / jhu / plots
	#! {{}}
	
	
	{{ range $_, $_format := array "pdf" "svg" "png" }}
	{{ $_all_format_charts := array }}
	
	{{ range $_, $_filter := array "global" "europe-major" "europe-minor" "romania" "us" "continents" "subcontinents" }}
	{{ $_all_filter_charts := array }}
	
	{{ range $_, $_method := array "absolute" "absolute_pop100k" "relative" "delta" "deltapct" }}
	{{ $_all_method_charts := array }}
	
	{{ range $_, $_metric := array "confirmed" "deaths" "infected" "recovered" }}
	{{ if or (and (eq $_filter "us") (or (eq $_method "absolute_pop100k") (eq $_metric "recovered") (eq $_metric "infected"))) (and (eq $_method "relative") (eq $_metric "confirmed")) | not }}
	
	
	{{ $_index := "day_index_100" }}
	{{ if or (eq $_filter "global") (eq $_filter "us") (eq $_filter "europe-major") }}
	{{ $_index = "day_index_1k" }}
	{{ else if or (eq $_filter "continents") (eq $_filter "subcontinents") }}
	{{ $_index = "day_index_10k" }}
	{{ end }}
	
	
	{{ if eq $_format "pdf" }}
	
	build ./plots/jhu/{{ $_filter }}/{{ $_format }}/{{ $_method }}-{{ $_metric }}.{{ $_format }} : z-run-in-out $
	        ./exports/jhu/v1/values.tsv $
	        | ./sources/jhu-plot.jl ${zrun_library}
	    scriptlet = ':: plots / jhu'
	    arguments = {{ $_format }} {{ $_filter }} {{ $_index }} {{ $_method }}_{{ $_metric }}
	    pool = cpu_heavy
	
	{{ else }}
	
	build ./plots/jhu/{{ $_filter }}/{{ $_format }}/{{ $_method }}-{{ $_metric }}.{{ $_format }} : z-run-in-out $
	        ./plots/jhu/{{ $_filter }}/pdf/{{ $_method }}-{{ $_metric }}.pdf $
	        | ${zrun_library}
	    scriptlet = ':: tools / inkscape / convert'
	    arguments = {{ $_format }}
	    pool = cpu_moderate
	
	{{ end }}
	
	
	build ./plots/jhu/{{ $_filter }}/all/{{ $_method }}-{{ $_metric }}.{{ $_format }} : symlink $
	        ./plots/jhu/{{ $_filter }}/{{ $_format }}/{{ $_method }}-{{ $_metric }}.{{ $_format }}
	
	
	{{ $_chart := (printf "./plots/jhu/%s/all/%s-%s.%s" $_filter $_method $_metric $_format) }}
	{{ $_all_format_charts = append $_all_format_charts $_chart }}
	{{ $_all_filter_charts = append $_all_filter_charts $_chart }}
	{{ $_all_method_charts = append $_all_method_charts $_chart }}
	
	
	{{ end }}
	{{ end }}
	
	build __jhu_plots__{{ $_filter }}__{{ $_method }}__{{ $_format }} : phony {{ $_all_method_charts | array_join " " }}
	
	{{ end }}
	
	build __jhu_plots__{{ $_filter }}__all__{{ $_format }} : phony {{ $_all_filter_charts | array_join " " }}
	
	{{ end }}
	
	build __jhu_plots__all__all__{{ $_format }} : phony {{ $_all_format_charts | array_join " " }}
	
	{{ end }}
!!




--<< plots / jhu
	
	test "${#}" -eq 6
	_dataset="${1}"
	_output="${2}"
	_format="${3}"
	_filter="${4}"
	_index="${5}"
	_metric="${6}"
	shift -- 6
	test "${#}" -eq 0
	
	if false test -e "${_output}" ; then
		exit -- 0
	fi
	
	export -- \
			FONTCONFIG_PATH=/etc/fonts \
	#
	
	rm -f -- "${_output}.tmp.pdf"
	
	if ! "${ZRUN[@]}" ':: tools / julia / exec' \
			./sources/jhu-plot.jl \
			"${_dataset}" \
			"${_output}.tmp.pdf" \
			pdf \
			"${_filter}" \
			"${_index}" \
			"${_metric}" \
	; then
		rm -f -- "${_output}.tmp.pdf"
		exit -- 1
	fi
	
	"${ZRUN[@]}" ':: tools / inkscape / convert' \
			"${_output}.tmp.pdf" \
			"${_output}" \
			"${_format}" \
	#
	
	rm -- "${_output}.tmp.pdf"
!!




--::&&.. process / jhu / imports / merge / script :: ../sources/jhu-imports-merge.jq
--::&&.. process / jhu / imports / locations / script :: ../sources/jhu-imports-locations.jq
--::&&.. process / jhu / imports / dates / script :: ../sources/jhu-imports-dates.jq
--::&&.. process / jhu / imports / values / daily / script :: ../sources/jhu-imports-values-daily.jq
--::&&.. process / jhu / imports / values / series / script :: ../sources/jhu-imports-values-series.jq
--::&&.. process / jhu / imports / values / script :: ../sources/jhu-imports-values.jq

--::&&.. process / jhu / exports / values / json / script :: ../sources/jhu-exports-values-json.jq
--::&&.. process / jhu / exports / values / tsv / script :: ../sources/jhu-exports-values-tsv.jq

