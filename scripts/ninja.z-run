#!/dev/null




--<<~~ ninja / script / exec
	#! {{}}
	#! <ninja>
	{{ ZRUN ":: ninja / script" }}
!!


--<< ninja / exec
	exec -- \
			cgexec -g "cpu:${USER}--covid19-datasets" -- \
			nice -n 19 -- \
	"${ZRUN[@]}" ':: ninja / script / exec' \
			"${@}" \
	#
!!


--<< ninja
	case "${__ninja_processor:-local}" in
		
		( local )
			exec -- "${ZRUN[@]}" ':: ninja / exec' "${@}"
		;;
		
		( remote )
			
			printf -- '[ii]  remote pushing...\n' >&2
			"${ZRUN[@]}" ':: remote / synchronize / push'
			printf -- '[--]\n' >&2
			
			printf -- '[ii]  remote executing...\n' >&2
			if "${ZRUN[@]}" ':: remote / ninja' "${@}" ; then
				_outcome=0
			else
				_outcome="${?}"
			fi
			printf -- '[--]\n' >&2
			
			printf -- '[ii]  remote pulling...\n' >&2
			"${ZRUN[@]}" ':: remote / synchronize / pull'
			printf -- '[--]\n' >&2
			
			exit -- "${_outcome}"
		;;
		
		( * )
			printf -- '[ee]  invalid target: `%s`;  aborting!\n' "${__ninja_processor}" >&2
			exit -- 1
		;;
	esac
!!

:: ninja / processor / local :: export -- __ninja_processor=local
:: ninja / processor / remote :: export -- __ninja_processor=remote
:: ninja / processor / fake :: export -- __ninja_fake=true




--<<~~.. ninja / script
	#! {{}}
	
	builddir = ./.outputs/ninja
	ninja_required_version = 1.8
	
	ninja_force = ./imports/.force
	
	{{ ZRUN ":: ninja / script / tools" }}
	
	{{ ZRUN ":: ninja / script / datasets / jhu" }}
	{{ ZRUN ":: ninja / script / datasets / jhu / daily" }}
	{{ ZRUN ":: ninja / script / datasets / jhu / series" }}
	{{ ZRUN ":: ninja / script / datasets / jhu / generated" }}
	
	{{ ZRUN ":: ninja / script / datasets / ecdc" }}
	
	{{ ZRUN ":: ninja / script / datasets / nytimes" }}
	{{ ZRUN ":: ninja / script / datasets / nytimes / us-states" }}
	{{ ZRUN ":: ninja / script / datasets / nytimes / us-counties" }}
	
	{{ ZRUN ":: ninja / script / datasets / generic" }}
	{{ ZRUN ":: ninja / script / datasets / plots" }}
	
	{{ ZRUN ":: ninja / script / datasets / facts" }}
	
	build ${ninja_force} : marker
	
	build __all__imports : phony __jhu__imports __ecdc__imports __nytimes__imports
	build __all__exports : phony __jhu__exports __ecdc__exports __nytimes__exports __combined__exports
	build __all__data : phony __all__imports __all__exports
	build __all__plots : phony __jhu__plots __ecdc__plots __nytimes__plots
	build __all : phony __all__data __all__plots
!!

--::&&.. ninja / script / tools :: ./tools.ninja
--::&&.. ninja / script / datasets / jhu :: ./datasets-jhu.ninja
--::&&.. ninja / script / datasets / jhu / daily :: ./datasets-jhu-daily.ninja
--::&&.. ninja / script / datasets / jhu / series :: ./datasets-jhu-series.ninja
--::&&.. ninja / script / datasets / ecdc :: ./datasets-ecdc.ninja
--::&&.. ninja / script / datasets / nytimes :: ./datasets-nytimes.ninja
--::&&.. ninja / script / datasets / nytimes / us-states :: ./datasets-nytimes-us-states.ninja
--::&&.. ninja / script / datasets / nytimes / us-counties :: ./datasets-nytimes-us-counties.ninja
--::&&.. ninja / script / datasets / generic :: ./datasets-generic.ninja
--::&&.. ninja / script / datasets / facts :: ./datasets-facts.ninja




--<<== ninja / generate
	#! {{}}
	{{ range $_, $_target := ZRUN ":: ninja / targets" | split_lines }}
	
	{{ if $_target | has_prefix ("__") }}
	
	<< ninja / targets / {{ $_target | replace_first "__" "" | replace_all "__" " / " }}
		test "${#}" -eq 0
		exec -- "${ZRUN[@]}" ':: ninja' -- {{ $_target | shell_quote }}
	!!
	
	<< remote / ninja / targets / {{ $_target | replace_first "__" "" | replace_all "__" " / " }}
		test "${#}" -eq 0
		exec -- "${ZRUN[@]}" ':: remote / ninja' -- {{ $_target | shell_quote }}
	!!
	
	{{ else if or ($_target | has_suffix (".json")) ($_target | has_suffix (".csv")) ($_target | has_suffix (".tsv")) ($_target | has_suffix (".txt")) ($_target | has_suffix (".sql")) ($_target | has_suffix (".sql-json")) }}
	
	<< ninja / files / build / {{ $_target }}
		test "${#}" -eq 0
		exec -- "${ZRUN[@]}" ':: ninja' -- {{ $_target | shell_quote }}
	!!
	
	<< ninja / files / view / {{ $_target }}
		test "${#}" -eq 0
		"${ZRUN[@]}" ':: ninja' -- {{ $_target | shell_quote }}
		exec -- less -- {{ $_target | shell_quote }}
	!!
	
	<< ninja / files / diff-lines / {{ $_target }}
		test "${#}" -eq 0
		"${ZRUN[@]}" ':: ninja' -- {{ $_target | shell_quote }}
		exec -- git diff \
				--inter-hunk-context=20 \
				--minimal \
				--no-prefix \
				--ignore-cr-at-eol \
				--ignore-space-at-eol \
				--ignore-space-change \
				--ignore-all-space \
				--ignore-blank-lines \
				--color-moved=plain \
				-- \
				{{ $_target | shell_quote }} \
		#
	!!
	
	<< ninja / files / diff-words / {{ $_target }}
		test "${#}" -eq 0
		"${ZRUN[@]}" ':: ninja' -- {{ $_target | shell_quote }}
		exec -- git diff \
				--inter-hunk-context=20 \
				--minimal \
				--no-prefix \
				--ignore-cr-at-eol \
				--ignore-space-at-eol \
				--ignore-space-change \
				--ignore-all-space \
				--ignore-blank-lines \
				--word-diff-regex '[a-zA-Z0-9_-]+|.' \
				--color-moved=plain \
				-- \
				{{ $_target | shell_quote }} \
		#
	!!
	
	{{ else if or ($_target | has_suffix (".pdf")) }}
	
	<< ninja / files / build / {{ $_target }}
		test "${#}" -eq 0
		exec -- "${ZRUN[@]}" ':: ninja' -- {{ $_target | shell_quote }}
	!!
	
	<< ninja / files / view / {{ $_target }}
		test "${#}" -eq 0
		"${ZRUN[@]}" ':: ninja' -- {{ $_target | shell_quote }}
		exec -- daemon zathura -- {{ $_target | shell_quote }} < /dev/null > /dev/null 2>&1
	!!
	
	{{ else if or ($_target | has_suffix (".png")) }}
	
	<< ninja / files / view / {{ $_target }}
		test "${#}" -eq 0
		"${ZRUN[@]}" ':: ninja' -- {{ $_target | shell_quote }}
		exec -- daemon sxiv -- {{ $_target | shell_quote }} < /dev/null > /dev/null 2>&1
	!!
	
	{{ else }}
	
	<< ninja / files / build / {{ $_target }}
		test "${#}" -eq 0
		exec -- "${ZRUN[@]}" ':: ninja' -- {{ $_target | shell_quote }}
	!!
	
	{{ end }}
	{{ end }}
!!




--<<~~.. ninja / targets
	test "${#}" -eq 0
	"${ZRUN[@]}" ':: ninja / script / exec' -t targets all \
	| sed -r \
			-e '\#^([^:]+): marker$# d' \
			-e 's#^([^:]+): .*$#\1#' \
	| LC_ALL=C sort
!!

--<<~~.. ninja / commands
	"${ZRUN[@]}" ':: ninja / script / exec' -t commands
!!




<< ninja / processor / force
	test "${#}" -eq 0
	touch -- ./imports/.force
!!

<< ninja / all / data / local + force
	test "${#}" -eq 0
	export -- __ninja_processor=local
	"${ZRUN[@]}" ':: ninja / processor / force'
	exec -- "${ZRUN[@]}" ':: ninja / targets / all / data'
!!

<< ninja / all / data / remote + force
	test "${#}" -eq 0
	export -- __ninja_processor=remote
	"${ZRUN[@]}" ':: ninja / processor / force'
	exec -- "${ZRUN[@]}" ':: ninja / targets / all / data'
!!


<< ninja / all / plots / local + fake
	test "${#}" -eq 0
	export -- __ninja_processor=local
	export -- __ninja_fake=true
	exec -- "${ZRUN[@]}" ':: ninja / targets / all / plots'
!!

<< ninja / all / plots / remote + fake
	test "${#}" -eq 0
	export -- __ninja_processor=remote
	export -- __ninja_fake=true
	exec -- "${ZRUN[@]}" ':: ninja / targets / all / plots'
!!


<< ninja / all / data / local
	test "${#}" -eq 0
	export -- __ninja_processor=local
	exec -- "${ZRUN[@]}" ':: ninja / targets / all / data'
!!

<< ninja / all / data / remote
	test "${#}" -eq 0
	export -- __ninja_processor=remote
	exec -- "${ZRUN[@]}" ':: ninja / targets / all / data'
!!


<< ninja / all / plots / local
	test "${#}" -eq 0
	export -- __ninja_processor=local
	exec -- "${ZRUN[@]}" ':: ninja / targets / all / plots'
!!

<< ninja / all / plots / remote
	test "${#}" -eq 0
	export -- __ninja_processor=remote
	exec -- "${ZRUN[@]}" ':: ninja / targets / all / plots'
!!




<< ninja / processor / cgroup / create
	test "${#}" -eq 0
	root-exec cgcreate -a root:root -t "${USER}:${USER}" -g "cpu:${USER}--covid19-datasets"
	root-exec cgset -r cpu.shares=128 -- "${USER}--covid19-datasets"
	root-exec cgset -r cpu.cfs_period_us=1000000 -- "${USER}--covid19-datasets"
!!

<< ninja / processor / cgroup / set / 10%
	test "${#}" -eq 0
	root-exec cgset -r cpu.cfs_quota_us=100000 -- "${USER}--covid19-datasets"
!!

<< ninja / processor / cgroup / set / 50%
	test "${#}" -eq 0
	root-exec cgset -r cpu.cfs_quota_us=500000 -- "${USER}--covid19-datasets"
!!

<< ninja / processor / cgroup / set / 100%
	test "${#}" -eq 0
	root-exec cgset -r cpu.cfs_quota_us=1000000 -- "${USER}--covid19-datasets"
!!

<< ninja / processor / cgroup / set / 200%
	test "${#}" -eq 0
	root-exec cgset -r cpu.cfs_quota_us=2000000 -- "${USER}--covid19-datasets"
!!

