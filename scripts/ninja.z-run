#!/dev/null




<<~~ ninja
	#! {{}}
	#! <ninja>
	
	builddir = ./.outputs/ninja
	ninja_required_version = 1.10
	
	zrun_library_0 = ${builddir}/markers/z-run.library.{{ ZRUN_FINGERPRINT }}
	zrun_library = ${zrun_library_0}
	zrun_library = ${builddir}/markers/z-run.library.dummy
	ninja_force = ${builddir}/markers/ninja.force
	
	{{ ZRUN ":: ninja / script / tools" }}
	{{ ZRUN ":: ninja / script / datasets / jhu" }}
	{{ ZRUN ":: ninja / script / datasets / jhu / plots" }}
	
	build ${zrun_library_0} : marker | ${ninja_force}
	build ${zrun_library} : marker | ${ninja_force}
	build ${ninja_force} : marker
!!




--::&&.. ninja / script / tools :: ./tools.ninja
--::&&.. ninja / script / datasets / jhu :: ./datasets-jhu.ninja




--<<== ninja / generate
	#! {{}}
	{{ range $_, $_target := ZRUN ":: ninja / targets" | split_lines }}
	
	<< ninja / build / {{ $_target }}
		test "${#}" -eq 0
		exec -- "${ZRUN[@]}" ':: ninja' -- {{ $_target | shell_quote }}
	!!
	
	<< ninja / view / {{ $_target }}
		test "${#}" -eq 0
		"${ZRUN[@]}" ':: ninja' -- {{ $_target | shell_quote }}
		{{ if or ($_target | has_suffix (".json")) ($_target | has_suffix (".tsv")) }}
		exec -- less -- {{ $_target | shell_quote }}
		{{ else if or ($_target | has_suffix (".pdf")) }}
		exec -- zathura -- {{ $_target | shell_quote }}
		{{ end }}
	!!
	
	{{ end }}
!!

<<~~.. ninja / targets
	test "${#}" -eq 0
	"${ZRUN[@]}" ':: ninja' -t targets all \
	| sed -r \
			-e '\#^([^:]+): marker$# d' \
			-e 's#^([^:]+): .*$#\1#' \
	| sort
!!

<<~~.. ninja / commands
	"${ZRUN[@]}" ':: ninja' -t commands
!!




<< ninja / force
	test "${#}" -eq 0
	if test -e ./.outputs/ninja/markers/ninja.force ; then
		rm -- ./.outputs/ninja/markers/ninja.force
	fi
!!

