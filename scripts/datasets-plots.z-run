#!/dev/null




--<<~~.. ninja / script / datasets / plots
	#! {{}}
	
	
	{{ $_datasets := array "jhu" "ecdc" "nytimes" }}
	{{ $_filters := array "global" "europe" "europe-major" "europe-medium" "europe-minor" "us" "us-major" "us-medium" "us-minor" "romania" "world" "continents" "subcontinents" "countries" }}
	{{ $_methods := array "absolute" "absolute_pop100k" "relative" "delta" "delta_pct" "delta_pop100k" "peak_pct" }}
	{{ $_metrics := array "confirmed" "deaths" "infected" "recovered" }}
	{{ $_formats := array "pdf" "svg" "png" }}
	
	
	{{ range $_, $_dataset := $_datasets }}
	{{ $_all_phony := array }}
	
	{{ range $_, $_format := $_formats }}
	{{ $_all_format_charts := array }}
	
	{{ range $_, $_filter := $_filters }}
	{{ $_all_filter_charts := array }}
	
	{{ range $_, $_method := $_methods }}
	{{ $_all_method_charts := array }}
	
	
	{{ $_should_skip := false }}
	{{ $_should_skip = or (and (eq $_dataset "ecdc") (or (eq $_filter "us") (eq $_filter "us-major") (eq $_filter "us-medium") (eq $_filter "us-minor"))) $_should_skip }}
	{{ $_should_skip = or (and (eq $_dataset "nytimes") (or (eq $_filter "us") (eq $_filter "us-major") (eq $_filter "us-medium") (eq $_filter "us-minor") | not)) $_should_skip }}
	
	
	{{ range $_, $_metric := $_metrics }}
	
	
	{{ $_should_skip := $_should_skip }}
	{{ $_should_skip = or (and (eq $_dataset "ecdc") (or (eq $_metric "recovered") (eq $_metric "infected"))) $_should_skip }}
	{{ $_should_skip = or (and (eq $_dataset "nytimes") (or (eq $_metric "recovered") (eq $_metric "infected"))) $_should_skip }}
	{{ $_should_skip = or (and (eq $_filter "us") (or (eq $_metric "recovered") (eq $_metric "infected"))) $_should_skip }}
	{{ $_should_skip = or (and (eq $_filter "us-major") (or (eq $_metric "recovered") (eq $_metric "infected"))) $_should_skip }}
	{{ $_should_skip = or (and (eq $_filter "us-medium") (or (eq $_metric "recovered") (eq $_metric "infected"))) $_should_skip }}
	{{ $_should_skip = or (and (eq $_filter "us-minor") (or (eq $_metric "recovered") (eq $_metric "infected"))) $_should_skip }}
	{{ $_should_skip = or (and (eq $_method "relative") (eq $_metric "confirmed")) $_should_skip }}
	
	
	{{ if $_should_skip | not }}
	
	
	{{ $_index := "day_index_1k" }}
	{{ if or (eq $_filter "world") }}
	{{ $_index = "day_index_1" }}
	{{ else if or (eq $_filter "continents") (eq $_filter "subcontinents") }}
	{{ $_index = "day_index_10k" }}
	{{ else if or (eq $_filter "romania") }}
	{{ $_index = "day_index_100" }}
	{{ end }}
	
	
	{{ if eq $_format "pdf" }}
	
	{{ $_source := "/dev/null/does-not-exist" }}
	{{ if eq $_dataset "jhu" }}
	{{ $_source = "./exports/jhu/v1/daily/values.tsv" }}
	{{ else if eq $_dataset "ecdc" }}
	{{ $_source = "./exports/ecdc/v1/worldwide/values.tsv" }}
	{{ else if eq $_dataset "nytimes" }}
	{{ $_source = "./exports/nytimes/v1/us-states/values.tsv" }}
	{{ end }}
	
	build ./plots/{{ $_dataset }}/{{ $_filter }}/{{ $_format }}/{{ $_method }}--{{ $_metric }}--lines.{{ $_format }} : z-run-in-out $
	        {{ $_source }} $
	        | ./sources/generic-plot.jl
	    scriptlet = ':: process / generic / plot'
	    arguments = {{ $_dataset }} {{ $_format }} lines {{ $_filter }} {{ $_index }} {{ $_method }}-{{ $_metric }}
	    pool = cpu_heavy
	
	build ./plots/{{ $_dataset }}/{{ $_filter }}/{{ $_format }}/{{ $_method }}--{{ $_metric }}--heatmap.{{ $_format }} : z-run-in-out $
	        {{ $_source }} $
	        | ./sources/generic-plot.jl
	    scriptlet = ':: process / generic / plot'
	    arguments = {{ $_dataset }} {{ $_format }} heatmap {{ $_filter }} {{ $_index }} {{ $_method }}-{{ $_metric }}
	    pool = cpu_heavy
	
	{{ else }}
	
	build ./plots/{{ $_dataset }}/{{ $_filter }}/{{ $_format }}/{{ $_method }}--{{ $_metric }}--lines.{{ $_format }} : z-run-in-out $
	        ./plots/{{ $_dataset }}/{{ $_filter }}/pdf/{{ $_method }}--{{ $_metric }}--lines.pdf
	    scriptlet = ':: tools / inkscape / convert'
	    arguments = {{ $_format }}
	    pool = cpu_moderate
	
	build ./plots/{{ $_dataset }}/{{ $_filter }}/{{ $_format }}/{{ $_method }}--{{ $_metric }}--heatmap.{{ $_format }} : z-run-in-out $
	        ./plots/{{ $_dataset }}/{{ $_filter }}/pdf/{{ $_method }}--{{ $_metric }}--heatmap.pdf
	    scriptlet = ':: tools / inkscape / convert'
	    arguments = {{ $_format }}
	    pool = cpu_moderate
	
	{{ end }}
	
	
	build ./plots/{{ $_dataset }}/{{ $_filter }}/all/{{ $_method }}--{{ $_metric }}--lines.{{ $_format }} : symlink $
	        ./plots/{{ $_dataset }}/{{ $_filter }}/{{ $_format }}/{{ $_method }}--{{ $_metric }}--lines.{{ $_format }}
	
	build ./plots/{{ $_dataset }}/{{ $_filter }}/all/{{ $_method }}--{{ $_metric }}--heatmap.{{ $_format }} : symlink $
	        ./plots/{{ $_dataset }}/{{ $_filter }}/{{ $_format }}/{{ $_method }}--{{ $_metric }}--heatmap.{{ $_format }}
	
	
	{{ $_chart := (printf "./plots/%s/%s/all/%s--%s--lines.%s" $_dataset $_filter $_method $_metric $_format) }}
	{{ $_all_format_charts = append $_all_format_charts $_chart }}
	{{ $_all_filter_charts = append $_all_filter_charts $_chart }}
	{{ $_all_method_charts = append $_all_method_charts $_chart }}
	
	{{ $_chart := (printf "./plots/%s/%s/all/%s--%s--heatmap.%s" $_dataset $_filter $_method $_metric $_format) }}
	{{ $_all_format_charts = append $_all_format_charts $_chart }}
	{{ $_all_filter_charts = append $_all_filter_charts $_chart }}
	{{ $_all_method_charts = append $_all_method_charts $_chart }}
	
	
	{{ end }}
	{{ end }}
	
	{{ if $_should_skip | not }}
	build __{{ $_dataset }}__plots__{{ $_filter }}__{{ $_method }}__{{ $_format }} : phony {{ $_all_method_charts | array_join " " }}
	{{ $_all_phony = append $_all_phony (printf "__%s__plots__%s__%s__%s" $_dataset $_filter $_method $_format) }}
	{{ end }}
	
	{{ end }}
	
	build __{{ $_dataset }}__plots__{{ $_filter }}__all__{{ $_format }} : phony {{ $_all_filter_charts | array_join " " }}
	{{ $_all_phony = append $_all_phony (printf "__%s__plots__%s__all__%s" $_dataset $_filter $_format ) }}
	
	{{ end }}
	
	build __{{ $_dataset }}__plots__all__all__{{ $_format }} : phony {{ $_all_format_charts | array_join " " }}
	{{ $_all_phony = append $_all_phony (printf "__%s__plots__all__all__%s" $_dataset $_format ) }}
	
	{{ end }}
	
	
	{{ range $_, $_filter := $_filters }}
	build __{{ $_dataset }}__plots__{{ $_filter }}__all__all : phony {{ range $_, $_format := $_formats }} __{{ $_dataset }}__plots__{{ $_filter }}__all__{{ $_format }} {{ end }}
	{{ end }}
	
	
	build __{{ $_dataset }}__plots : phony {{ $_all_phony | array_join " " }}
	
	{{ end }}
!!




--<<== plots / generate
	#! {{}}
	
	
	{{ $_datasets := array "jhu" "ecdc" "nytimes" }}
	
	
	{{ range $_, $_dataset := $_datasets }}
	
	<< plots / build / {{ $_dataset }} / all
		test "${#}" -eq 0
		exec -- "${ZRUN[@]}" ':: ninja' __{{ $_dataset }}__plots__all__all__png
	!!
	
	<< plots / view / {{ $_dataset }} / all
		test "${#}" -eq 0
		exec -- "${ZRUN[@]}" ':: plots / view / build + exec' __{{ $_dataset }}__plots__all__all__png -path '*/{{ $_dataset }}/*'
	!!
	
	<< plots / clean / {{ $_dataset }} / all
		test "${#}" -eq 0
		exec -- "${ZRUN[@]}" ':: plots / clean / exec' -path '*/{{ $_dataset }}/*'
	!!
	
	
	{{ range $_, $_filter := array "global" "europe" "europe-major" "europe-medium" "europe-minor" "us" "us-major" "us-medium" "us-minor" "romania" "world" "continents" "subcontinents" "countries" }}
	
	
	{{ $_should_skip := false }}
	{{ $_should_skip = or (and (eq $_dataset "ecdc") (or (eq $_filter "us") (eq $_filter "us-major") (eq $_filter "us-medium") (eq $_filter "us-minor"))) $_should_skip }}
	{{ $_should_skip = or (and (eq $_dataset "nytimes") (or (eq $_filter "us") (eq $_filter "us-major") (eq $_filter "us-medium") (eq $_filter "us-minor") | not)) $_should_skip }}
	
	
	{{ if $_should_skip | not }}
	
	<< plots / view / {{ $_dataset }} / {{ $_filter }} / all
		test "${#}" -eq 0
		exec -- "${ZRUN[@]}" ':: plots / view / build + exec' __{{ $_dataset }}__plots__{{ $_filter }}__all__png -path '*/{{ $_dataset }}/*' -path '*/{{ $_filter }}/*'
	!!
	
	{{ range $_, $_method := array "absolute" "absolute_pop100k" "relative" "delta" "delta_pct" "delta_pop100k" "peak_pct" }}
	
	<< plots / view / {{ $_dataset }} / {{ $_filter }} / {{ $_method }}
		test "${#}" -eq 0
		exec -- "${ZRUN[@]}" ':: plots / view / build + exec' __{{ $_dataset }}__plots__{{ $_filter }}__{{ $_method }}__png -path '*/{{ $_dataset }}/*' -path '*/{{ $_filter }}/png/{{ $_method }}--*'
	!!
	
	{{ end }}
	
	
	{{ end }}
	{{ end }}
	{{ end }}
!!

