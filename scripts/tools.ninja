



rule fetch-curl
    command = $
        if test "$${__ninja_fake:-false}" == true ; then exit -- 0 ; fi ; $
        exec -- z-run ':: tools / fetch / curl' ${url} ${out}
    description = [fetch-curl]  ${out}
    restat = true

rule csv-to-json
    command = $
        if test "$${__ninja_fake:-false}" == true ; then exit -- 0 ; fi ; $
        exec -- z-run ':: tools / convert / csv-to-json' ${in} ${out} ${dataset} ${format}
    description = [csv-to-json]  ${out}
    restat = true

rule sql-from-json
    command = $
        if test "$${__ninja_fake:-false}" == true ; then exit -- 0 ; fi ; $
        exec -- z-run ':: tools / convert / sql-from-json' ${in} ${out} ${dataset} ${format}
    description = [sql-from-json]  ${out}
    restat = true

rule sqlite-create
    command = $
        if test "$${__ninja_fake:-false}" == true ; then exit -- 0 ; fi ; $
        exec -- z-run ':: tools / convert / sqlite' ${in} ${out} ${dataset}
    description = [sqlite-create]  ${out}
    restat = true

rule z-run-in-out
    command = $
        if test "$${__ninja_fake:-false}" == true ; then exit -- 0 ; fi ; $
        exec -- z-run ${scriptlet} ${arguments_pre} ${in} ${out} ${arguments}
    description = [z-run]  ${scriptlet}  ${out}
    restat = true

rule z-run-out-in
    command = $
        if test "$${__ninja_fake:-false}" == true ; then exit -- 0 ; fi ; $
        exec -- z-run ${scriptlet} ${arguments_pre} ${out} ${arguments} ${in}
    description = [z-run]  ${scriptlet}  ${out}
    restat = true




rule marker
    command = $
        if test "$${__ninja_fake:-false}" == true ; then exit -- 0 ; fi ; $
        exec -- touch -- ${out}
    description = [marker]  ${out}

rule copy
    command = $
        if test "$${__ninja_fake:-false}" == true ; then exit -- 0 ; fi ; $
        if cmp -s -- ${in} ${out} ; then exit -- 0 ; fi ; $
        cp -T -- ${in} ${out}.tmp ; $
        mv -T -- ${out}.tmp ${out}
    description = [copy]  ${out}
    restat = true

rule symlink
    command = $
        if test "$${__ninja_fake:-false}" == true ; then exit -- 0 ; fi ; $
        exec -- ln -f -s -T -- "$$( exec -- realpath --relative-to "$$( exec -- dirname -- ${out} )" -- ${in} )" ${out}
    description = [symlink]  ${out}
    restat = true

rule gzip
    command = $
        if test "$${__ninja_fake:-false}" == true ; then exit -- 0 ; fi ; $
        gzip --best --rsyncable < ${in} >| ${out}.tmp ; $
        mv -T -- ${out}.tmp ${out}
    description = [gzip]  ${out}
    restat = true




pool cpu_heavy
    depth = 8

pool cpu_moderate
    depth = 16

