#!/dev/null




<< tools / outputs / initialize
	
	test "${#}" -eq 0
	
	_datasets=(
			"./.outputs/ninja"
			"./.outputs/julia"
		)
	
	if test ! -d ./.outputs ; then
		_outputs_store="${TMPDIR:-/tmp}/outputs--${UID}--${RANDOM}-${RANDOM}-${RANDOM}-${RANDOM}"
		mkdir -- "${_outputs_store}"
		_outputs_store="$( exec -- readlink -e -- "${_outputs_store}" )"
		ln -s -f -T -- "${_outputs_store}" ./.outputs
	fi
	
	for _folder in "${_datasets[@]}" ; do
		if test ! -e "${_folder}" ; then
			mkdir -- "${_folder}"
		fi
	done
	
!!




<< clean / all
	test "${#}" -eq 0
	"${ZRUN[@]}" ':: clean / facts'
	"${ZRUN[@]}" ':: clean / imports'
	"${ZRUN[@]}" ':: clean / exports'
	"${ZRUN[@]}" ':: clean / plots'
!!

<< clean / facts
	test "${#}" -eq 0
	find ./imports/facts -mindepth 1 -type f -not -path './imports/facts/countries.txt' -print -delete
	find ./imports/factbook -mindepth 1 -type f -not -path './imports/factbook/raw/*.txt' -print -delete
	find ./imports -mindepth 2 -type d -empty -print -delete
!!

<< clean / imports
	test "${#}" -eq 0
	rm -f -- ./imports/.force
	rm -f -- ./imports/.md5
	find ./imports/ecdc -mindepth 1 -type f -print -delete
	find ./imports/jhu -mindepth 1 -type f -print -delete
	find ./imports/nytimes -mindepth 1 -type f -print -delete
	find ./imports -mindepth 2 -type d -empty -print -delete
!!

<< clean / exports
	test "${#}" -eq 0
	rm -f -- ./exports/.md5
	find ./exports -mindepth 1 -type f -print -delete
	find ./exports -mindepth 1 -type d -empty -print -delete
!!

<< clean / plots
	test "${#}" -eq 0
	rm -f -- ./plots/.md5
	find ./plots -mindepth 3 -type f -not -name 'readme.md' -print -delete
	find ./plots -mindepth 3 -type l -not -name 'readme.md' -print -delete
	find ./plots -mindepth 1 -type d -empty -print -delete
!!




<< git / snapshot / jhu / data
	test "${#}" -eq 0
	git add -- ./imports/jhu ./exports/jhu
	if ! git diff --cached --exit-code --quiet -- ./imports/jhu ./exports/jhu ; then
		git commit -m '[jhu][datasets]  Update JHU datasets due to upstream data changes.' -- ./imports/jhu ./exports/jhu
	fi
!!

<< git / snapshot / nytimes / data
	test "${#}" -eq 0
	git add -- ./imports/nytimes ./exports/nytimes
	if ! git diff --cached --exit-code --quiet -- ./imports/nytimes ./exports/nytimes ; then
		git commit -m '[nytimes][datasets]  Update NY Times datasets due to upstream data changes.' -- ./imports/nytimes ./exports/nytimes
	fi
!!

<< git / snapshot / ecdc / data
	test "${#}" -eq 0
	git add -- ./imports/ecdc ./exports/ecdc
	if ! git diff --cached --exit-code --quiet -- ./imports/ecdc ./exports/ecdc ; then
		git commit -m '[ecdc][datasets]  Update ECDC datasets due to upstream data changes.' -- ./imports/ecdc ./exports/ecdc
	fi
!!

<< git / snapshot / combined / data
	test "${#}" -eq 0
	if ! test -e ./exports/combined ; then
		exit -- 0
	fi
	git add -- ./exports/combined
	if ! git diff --cached --exit-code --quiet -- ./exports/combined ; then
		git commit -m '[combined][datasets]  Update combined datasets due to upstream data changes.' -- ./exports/combined
	fi
!!


<< git / snapshot / jhu / plots
	test "${#}" -eq 0
	git add -- ./plots/jhu
	if ! git diff --cached --exit-code --quiet -- ./plots/jhu ; then
		git commit -m '[jhu][plots]  Update JHU plots due to upstream data changes.' -- ./plots/jhu
	fi
!!

<< git / snapshot / nytimes / plots
	test "${#}" -eq 0
	git add -- ./plots/nytimes
	if ! git diff --cached --exit-code --quiet -- ./plots/nytimes ; then
		git commit -m '[nytimes][plots]  Update NY Times plots due to upstream data changes.' -- ./plots/nytimes
	fi
!!

<< git / snapshot / ecdc / plots
	test "${#}" -eq 0
	git add -- ./plots/ecdc
	if ! git diff --cached --exit-code --quiet -- ./plots/ecdc ; then
		git commit -m '[ecdc][plots]  Update ECDC plots due to upstream data changes.' -- ./plots/ecdc
	fi
!!




++<< git / snapshot / all
	test "${#}" -eq 0
	"${ZRUN[@]}" ':: git / snapshot / jhu / data'
	"${ZRUN[@]}" ':: git / snapshot / jhu / plots'
	"${ZRUN[@]}" ':: git / snapshot / nytimes / data'
	"${ZRUN[@]}" ':: git / snapshot / nytimes / plots'
	"${ZRUN[@]}" ':: git / snapshot / ecdc / data'
	"${ZRUN[@]}" ':: git / snapshot / ecdc / plots'
	"${ZRUN[@]}" ':: git / snapshot / combined / data'
!!

++<< git / push / github
	test "${#}" -eq 0
	exec -- git push github/cipriancraciun
!!




<< git / optimize
	test "${#}" -eq 0
	
	git reflog expire --all --expire=all --expire-unreachable=all
	git pack-refs --all
	
	nice -n 19 -- git prune --expire=all --verbose
	nice -n 19 -- git repack -d
	nice -n 19 -- git prune --expire=all --verbose
!!

