precompile(Tuple{Type{Logging.ConsoleLogger}, Base.PipeEndpoint})
precompile(Tuple{Type{REPL.Terminals.TTYTerminal}, String, Base.IOStream, Base.PipeEndpoint, Base.PipeEndpoint})
precompile(Tuple{typeof(Parsers.__init__)})
precompile(Tuple{typeof(Base.GMP.MPZ.set), Base.GMP.BigInt})
precompile(Tuple{typeof(Base.deepcopy), Base.GMP.BigInt})
precompile(Tuple{typeof(Base.Threads.resize_nthreads!), Array{Base.GMP.BigInt, 1}, Base.GMP.BigInt})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#33#38")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#34#39")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#35#40")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#36#41")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#37#42")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Compat.Sys.__init__)})
precompile(Tuple{typeof(FilePathsBase.__init__)})
precompile(Tuple{typeof(CSV.__init__)})
precompile(Tuple{typeof(Base.active_project), Bool})
precompile(Tuple{typeof(Base.load_path_expand), String})
precompile(Tuple{typeof(Base.load_path)})
precompile(Tuple{getfield(Base, Symbol("#681#682")){String}, Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#681#682")){String}, String})
precompile(Tuple{typeof(Base.project_deps_get), String, String})
precompile(Tuple{typeof(Base.identify_package), String})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Any, Int64}, Symbol})
precompile(Tuple{getfield(Base, Symbol("#689#690")){Base.UUID, String}, Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#689#690")){Base.UUID, String}, String})
precompile(Tuple{typeof(Base.manifest_deps_get), String, Base.PkgId, String})
precompile(Tuple{typeof(Base.identify_package), Base.PkgId, String})
precompile(Tuple{typeof(Base.manifest_uuid_path), String, Base.PkgId})
precompile(Tuple{typeof(Base.locate_package), Base.PkgId})
precompile(Tuple{typeof(Base.stat), Base.Libc.RawFD})
precompile(Tuple{typeof(Base.isvalid_file_crc), Base.IOStream})
precompile(Tuple{typeof(Base.stale_cachefile), String, String})
precompile(Tuple{typeof(Base.register_root_module), Module})
precompile(Tuple{typeof(Base._include_from_serialized), String, Array{Any, 1}})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, String})
precompile(Tuple{typeof(Base._require_search_from_serialized), Base.PkgId, String})
precompile(Tuple{typeof(Base.compilecache_path), Base.PkgId})
precompile(Tuple{typeof(Base.load_path_setup_code), Bool})
precompile(Tuple{typeof(Base.create_expr_cache), String, String, Array{Base.Pair{Base.PkgId, UInt64}, 1}, Nothing})
precompile(Tuple{typeof(Base.compilecache), Base.PkgId, String})
precompile(Tuple{typeof(Base._include_dependency), Module, String})
precompile(Tuple{typeof(Base.include_relative), Module, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, Nothing})
precompile(Tuple{typeof(Base._require_from_serialized), String})
precompile(Tuple{typeof(Base._require), Base.PkgId})
precompile(Tuple{typeof(Base.require), Base.PkgId})
precompile(Tuple{typeof(Base.require), Module, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.IdDict{Module, Base.PkgId}, Any, Any})
precompile(Tuple{typeof(Base.isassigned), Core.SimpleVector, Int64})
precompile(Tuple{typeof(Base.include_dependency), String})
precompile(Tuple{typeof(Rmath_jll.__init__)})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##load_overrides#3")), Bool, typeof(Pkg.Artifacts.load_overrides)})
precompile(Tuple{typeof(Pkg.Artifacts.process_overrides), Base.Dict{String, Any}, Base.UUID})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{typeof(Base.getindex), Base.Dict{Symbol, Base.Dict{K, V} where V where K}, Symbol})
precompile(Tuple{typeof(Base.haskey), Base.Dict{Base.UUID, Base.Dict{String, Union{Base.SHA1, String}}}, Base.UUID})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_meta#20")), Pkg.BinaryPlatforms.Platform, typeof(Pkg.Artifacts.artifact_meta), String, Base.Dict{String, Any}, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##artifact_meta")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.artifact_meta), String, Base.Dict{String, Any}, String})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}, Array{Base.Dict{String, Any}, 1}})
precompile(Tuple{typeof(Pkg.Artifacts.unpack_platform), Base.Dict{String, Any}, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}, Base.Dict{String, Any}})
precompile(Tuple{Type{Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Generator{Array{Base.Dict{String, Any}, 1}, getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#nosym#16")), String})
precompile(Tuple{Type{NamedTuple{(:libc, :compiler_abi), T} where T<:Tuple}, Tuple{Symbol, Pkg.BinaryPlatforms.CompilerABI}})
precompile(Tuple{getfield(Pkg.BinaryPlatforms, Symbol("#Linux#13#14")), Symbol, Nothing, Pkg.BinaryPlatforms.CompilerABI, Type{Pkg.BinaryPlatforms.Linux}, Symbol})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:libc, :compiler_abi), Tuple{Symbol, Pkg.BinaryPlatforms.CompilerABI}}, Type{Pkg.BinaryPlatforms.Linux}, Symbol})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, Pkg.BinaryPlatforms.Linux, Base.Dict{String, Any}})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}, Pkg.BinaryPlatforms.Linux})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}, Base.Dict{String, Any}, Pkg.BinaryPlatforms.Linux})
precompile(Tuple{Type{NamedTuple{(:libc, :compiler_abi), T} where T<:Tuple}, Tuple{Nothing, Pkg.BinaryPlatforms.CompilerABI}})
precompile(Tuple{getfield(Pkg.BinaryPlatforms, Symbol("#Windows#17#18")), Nothing, Nothing, Pkg.BinaryPlatforms.CompilerABI, Type{Pkg.BinaryPlatforms.Windows}, Symbol})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:libc, :compiler_abi), Tuple{Nothing, Pkg.BinaryPlatforms.CompilerABI}}, Type{Pkg.BinaryPlatforms.Windows}, Symbol})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, Pkg.BinaryPlatforms.Windows, Base.Dict{String, Any}})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}, Pkg.BinaryPlatforms.Windows})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}, Base.Dict{String, Any}, Pkg.BinaryPlatforms.Windows})
precompile(Tuple{getfield(Pkg.BinaryPlatforms, Symbol("#FreeBSD#19#20")), Nothing, Nothing, Pkg.BinaryPlatforms.CompilerABI, Type{Pkg.BinaryPlatforms.FreeBSD}, Symbol})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:libc, :compiler_abi), Tuple{Nothing, Pkg.BinaryPlatforms.CompilerABI}}, Type{Pkg.BinaryPlatforms.FreeBSD}, Symbol})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, Pkg.BinaryPlatforms.FreeBSD, Base.Dict{String, Any}})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}, Pkg.BinaryPlatforms.FreeBSD})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}, Base.Dict{String, Any}, Pkg.BinaryPlatforms.FreeBSD})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:libc, :compiler_abi), Tuple{Nothing, Pkg.BinaryPlatforms.CompilerABI}}, Type{Pkg.BinaryPlatforms.MacOS}, Symbol})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, Pkg.BinaryPlatforms.MacOS, Base.Dict{String, Any}})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}, Pkg.BinaryPlatforms.MacOS})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}, Base.Dict{String, Any}, Pkg.BinaryPlatforms.MacOS})
precompile(Tuple{typeof(Base.filter), Function, Base.KeySet{Pkg.BinaryPlatforms.Platform, Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}})
precompile(Tuple{typeof(Base.mapfilter), getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, typeof(Base.push!), Base.KeySet{Pkg.BinaryPlatforms.Platform, Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Set{Pkg.BinaryPlatforms.Platform}})
precompile(Tuple{getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, Pkg.BinaryPlatforms.Windows})
precompile(Tuple{getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, Pkg.BinaryPlatforms.Linux})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Pkg.BinaryPlatforms.Platform, Nothing}, Pkg.BinaryPlatforms.Linux})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Pkg.BinaryPlatforms.Platform, Nothing}, Nothing, Pkg.BinaryPlatforms.Linux})
precompile(Tuple{typeof(Base.push!), Base.Set{Pkg.BinaryPlatforms.Platform}, Pkg.BinaryPlatforms.Linux})
precompile(Tuple{getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, Pkg.BinaryPlatforms.MacOS})
precompile(Tuple{getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, Pkg.BinaryPlatforms.FreeBSD})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}, Pkg.BinaryPlatforms.Linux})
precompile(Tuple{typeof(Base.getindex), Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}, Pkg.BinaryPlatforms.Linux})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.query_override), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_paths#9")), Bool, typeof(Pkg.Artifacts.artifact_paths), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_exists#11")), Bool, typeof(Pkg.Artifacts.artifact_exists), Base.SHA1})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple, 1}, getfield(Pkg.PlatformEngines, Symbol("#36#61"))}})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##probe_cmd#14")), Bool, typeof(Pkg.PlatformEngines.probe_cmd), Base.Cmd})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple, 1}, getfield(Pkg.PlatformEngines, Symbol("#40#65"))}})
precompile(Tuple{typeof(Base.error), Base.Missing})
precompile(Tuple{typeof(Base.error), Base.Regex})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##probe_platform_engines!#15")), Bool, typeof(Pkg.PlatformEngines.probe_platform_engines!)})
precompile(Tuple{typeof(Base.read), Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#280#281")){String}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##verify#98")), Bool, Bool, String, typeof(Pkg.PlatformEngines.verify), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download#82")), Bool, typeof(Pkg.PlatformEngines.download), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify#83")), Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify), String, String, String})
precompile(Tuple{typeof(Base.convert), Type{Nothing}, Base.SubString{String}})
precompile(Tuple{typeof(Base.convert), Type{Base.Pair{Nothing, String}}, Base.Pair{Base.SubString{String}, String}})
precompile(Tuple{typeof(Base.setindex!), Array{Base.Pair{Nothing, String}, 1}, Base.Pair{Base.SubString{String}, String}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.Pair{Nothing, String}, 1}, Base.Pair{Base.SubString{String}, String}, Base.Generator{Array{Array{Union{Nothing, Base.SubString{String}}, 1}, 1}, getfield(Pkg.PlatformEngines, Symbol("#88#90"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{Union{Nothing, Base.SubString{String}}, 1}, 1}, getfield(Pkg.PlatformEngines, Symbol("#88#90"))}})
precompile(Tuple{typeof(Pkg.PlatformEngines.list_tarball_symlinks), String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("#kw##cptree")), NamedTuple{(:force, :follow_symlinks), Tuple{Bool, Bool}}, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{typeof(Base.Filesystem.sendfile), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cptree#11")), Bool, Bool, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cp#12")), Bool, Bool, typeof(Base.Filesystem.cp), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##artifact_paths")), NamedTuple{(:honor_overrides,), Tuple{Bool}}, typeof(Pkg.Artifacts.artifact_paths), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_path#10")), Bool, typeof(Pkg.Artifacts.artifact_path), Base.SHA1})
precompile(Tuple{typeof(Base.Filesystem.rename), String, String})
precompile(Tuple{typeof(Pkg.GitTools.set_readonly), String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.artifact_path), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##query_override#7")), Base.Dict{Symbol, Base.Dict{K, V} where V where K}, typeof(Pkg.Artifacts.query_override), Base.SHA1})
precompile(Tuple{typeof(Libdl.dlopen), String})
precompile(Tuple{typeof(Random.make_seed)})
precompile(Tuple{Type{Random.MersenneTwister}, Nothing})
precompile(Tuple{typeof(Random.default_rng), Int64})
precompile(Tuple{typeof(Base.rand)})
precompile(Tuple{typeof(Base.exp), Float64})
precompile(Tuple{typeof(Base.randn), Random.MersenneTwister})
precompile(Tuple{typeof(Random.randn_unlikely), Random.MersenneTwister, Int64, Int64, Float64})
precompile(Tuple{typeof(Base.randn)})
precompile(Tuple{typeof(Random.randexp_unlikely), Random.MersenneTwister, UInt64, Float64})
precompile(Tuple{typeof(Random.randexp), Random.MersenneTwister})
precompile(Tuple{typeof(Random.randexp)})
precompile(Tuple{typeof(Rmath.__init__)})
precompile(Tuple{typeof(Requires.__init__)})
precompile(Tuple{typeof(Requires.loadpkg), Base.PkgId})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Base.PkgId, Array{Function, 1}}, Base.PkgId})
precompile(Tuple{typeof(ArrayInterface.__init__)})
precompile(Tuple{typeof(Requires.listenpkg), Any, Base.PkgId})
precompile(Tuple{typeof(Requires.withpath), Any, String})
precompile(Tuple{getfield(ArrayInterface, Symbol("#15#36"))})
precompile(Tuple{typeof(Requires.withnotifications), String, Vararg{Any, N} where N})
precompile(Tuple{getfield(ArrayInterface, Symbol("#16#37"))})
precompile(Tuple{typeof(Base.catch_backtrace)})
precompile(Tuple{typeof(Requires.err), Any, Module, String})
precompile(Tuple{getfield(ArrayInterface, Symbol("#17#38"))})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Base.PkgId, Array{Function, 1}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Base.PkgId, Array{Function, 1}}, Base.PkgId})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Function, 1}, Base.IndexLinear, Array{Any, 1}})
precompile(Tuple{typeof(Base.get!), getfield(Requires, Symbol("#1#2")), Base.Dict{Base.PkgId, Array{Function, 1}}, Base.PkgId})
precompile(Tuple{typeof(Base.push!), Array{Function, 1}, Function})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Array{Function, 1}, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base._delete!), Base.Dict{Base.PkgId, Array{Function, 1}}, Int64})
precompile(Tuple{getfield(ArrayInterface, Symbol("#18#39"))})
precompile(Tuple{getfield(ArrayInterface, Symbol("#19#40"))})
precompile(Tuple{getfield(ArrayInterface, Symbol("#20#41"))})
precompile(Tuple{typeof(Base.stat), Base.Libc.RawFD})
precompile(Tuple{typeof(Base.isvalid_file_crc), Base.IOStream})
precompile(Tuple{typeof(Base.stale_cachefile), String, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, String})
precompile(Tuple{typeof(Base._require_search_from_serialized), Base.PkgId, String})
precompile(Tuple{typeof(Base.create_expr_cache), String, String, Array{Base.Pair{Base.PkgId, UInt64}, 1}, Nothing})
precompile(Tuple{typeof(Base.compilecache), Base.PkgId, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, Nothing})
precompile(Tuple{typeof(Base._require_from_serialized), String})
precompile(Tuple{typeof(Base._require), Base.PkgId})
precompile(Tuple{typeof(Base.require), Base.PkgId})
precompile(Tuple{typeof(FiniteDiff.__init__)})
precompile(Tuple{typeof(CompilerSupportLibraries_jll.__init__)})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##load_overrides#3")), Bool, typeof(Pkg.Artifacts.load_overrides)})
precompile(Tuple{typeof(Pkg.Artifacts.process_overrides), Base.Dict{String, Any}, Base.UUID})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##artifact_meta")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.artifact_meta), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.unpack_platform), Base.Dict{String, Any}, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}, Base.Dict{String, Any}})
precompile(Tuple{Type{Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Generator{Array{Base.Dict{String, Any}, 1}, getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}}})
precompile(Tuple{typeof(Base.ntuple), getfield(Base, Symbol("#457#458")){Array{Base.SubString{String}, 1}}, Int64})
precompile(Tuple{Type{Base.VersionNumber}, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#nover#17")), String})
precompile(Tuple{Type{NamedTuple{(:libgfortran_version, :libstdcxx_version, :cxxstring_abi), T} where T<:Tuple}, Tuple{Base.VersionNumber, Nothing, Nothing}})
precompile(Tuple{typeof(Base.:(==)), Base.VersionNumber, Base.VersionNumber})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:libgfortran_version, :libstdcxx_version, :cxxstring_abi), Tuple{Base.VersionNumber, Nothing, Nothing}}, Type{Pkg.BinaryPlatforms.CompilerABI}})
precompile(Tuple{typeof(Base.ident_cmp), Tuple{}, Tuple{}})
precompile(Tuple{typeof(Base.mapfilter), getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, typeof(Base.push!), Base.KeySet{Pkg.BinaryPlatforms.Platform, Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Set{Pkg.BinaryPlatforms.Platform}})
precompile(Tuple{getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, Pkg.BinaryPlatforms.Linux})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.query_override), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_paths#9")), Bool, typeof(Pkg.Artifacts.artifact_paths), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_exists#11")), Bool, typeof(Pkg.Artifacts.artifact_exists), Base.SHA1})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##probe_platform_engines!#15")), Bool, typeof(Pkg.PlatformEngines.probe_platform_engines!)})
precompile(Tuple{typeof(Base.read), Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#280#281")){String}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##verify#98")), Bool, Bool, String, typeof(Pkg.PlatformEngines.verify), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify#83")), Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify), String, String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("#kw##cptree")), NamedTuple{(:force, :follow_symlinks), Tuple{Bool, Bool}}, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{typeof(Base.Filesystem.sendfile), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cptree#11")), Bool, Bool, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cp#12")), Bool, Bool, typeof(Base.Filesystem.cp), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##artifact_paths")), NamedTuple{(:honor_overrides,), Tuple{Bool}}, typeof(Pkg.Artifacts.artifact_paths), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_path#10")), Bool, typeof(Pkg.Artifacts.artifact_path), Base.SHA1})
precompile(Tuple{typeof(Base.Filesystem.rename), String, String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.artifact_path), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##query_override#7")), Base.Dict{Symbol, Base.Dict{K, V} where V where K}, typeof(Pkg.Artifacts.query_override), Base.SHA1})
precompile(Tuple{typeof(Base.foreach), getfield(OpenSpecFun_jll, Symbol("#7#9")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(OpenSpecFun_jll, Symbol("#8#10")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(OpenSpecFun_jll.__init__)})
precompile(Tuple{typeof(OpenBLAS_jll.__init__)})
precompile(Tuple{typeof(Pkg.Artifacts.process_overrides), Base.Dict{String, Any}, Base.UUID})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{typeof(Pkg.Artifacts.unpack_platform), Base.Dict{String, Any}, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}, Base.Dict{String, Any}})
precompile(Tuple{Type{Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Generator{Array{Base.Dict{String, Any}, 1}, getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}}})
precompile(Tuple{typeof(Base.:(==)), Base.VersionNumber, Base.VersionNumber})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:libgfortran_version, :libstdcxx_version, :cxxstring_abi), Tuple{Base.VersionNumber, Nothing, Nothing}}, Type{Pkg.BinaryPlatforms.CompilerABI}})
precompile(Tuple{getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, Pkg.BinaryPlatforms.Linux})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Base.stat), Base.Libc.RawFD})
precompile(Tuple{typeof(Base.read), Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#280#281")){String}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##verify#98")), Bool, Bool, String, typeof(Pkg.PlatformEngines.verify), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify#83")), Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify), String, String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("#kw##cptree")), NamedTuple{(:force, :follow_symlinks), Tuple{Bool, Bool}}, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{typeof(Base.Filesystem.sendfile), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cptree#11")), Bool, Bool, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cp#12")), Bool, Bool, typeof(Base.Filesystem.cp), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{typeof(Base.Filesystem.rename), String, String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Base.foreach), getfield(Arpack_jll, Symbol("#7#9")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Arpack_jll, Symbol("#8#10")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Arpack_jll.__init__)})
precompile(Tuple{typeof(FFTW_jll.__init__)})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(FFTW.__init__)})
precompile(Tuple{typeof(DocStringExtensions.__init__)})
precompile(Tuple{typeof(Compose.__init__)})
precompile(Tuple{typeof(Base.copyto!), Array{Function, 1}, Tuple{typeof(Compose.circle), typeof(Gadfly.Shape.square), typeof(Gadfly.Shape.diamond), typeof(Gadfly.Shape.cross), typeof(Gadfly.Shape.xcross), typeof(Gadfly.Shape.utriangle), typeof(Gadfly.Shape.dtriangle), typeof(Gadfly.Shape.star1), typeof(Gadfly.Shape.star2), typeof(Gadfly.Shape.hexagon), typeof(Gadfly.Shape.octagon), typeof(Gadfly.Shape.hline), typeof(Gadfly.Shape.vline), typeof(Gadfly.Shape.ltriangle), typeof(Gadfly.Shape.rtriangle)}})
precompile(Tuple{getfield(Gadfly, Symbol("##Theme#57")), ColorTypes.LCHab{Float32}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Function, Function, Array{Function, 1}, Measures.Length{:mm, Float64}, Array{Symbol, 1}, Array{Float64, 1}, Nothing, Nothing, Float64, Nothing, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Int64, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, typeof(Gadfly.default_stroke_color), Measures.Length{:mm, Float64}, typeof(Gadfly.default_discrete_highlight_color), typeof(Gadfly.default_continuous_highlight_color), typeof(Gadfly.default_lowlight_color), typeof(Gadfly.default_middle_color), Measures.Length{:mm, Float64}, Symbol, Symbol, typeof(Gadfly.Shape.square), Nothing, Nothing, Symbol, Nothing, Measures.Length{:mm, Float64}, Int64, Float64, Float64, Float64, Measures.Length{:mm, Float64}, Int64, Gadfly.Scale.DiscreteColorScale, Gadfly.Scale.ContinuousColorScale, Type{Gadfly.Theme}})
precompile(Tuple{Type{Gadfly.Theme}})
precompile(Tuple{typeof(Gadfly.push_theme), Symbol})
precompile(Tuple{typeof(Gadfly.__init__)})
precompile(Tuple{Type{Base.Val{:default}}})
precompile(Tuple{getfield(Gadfly, Symbol("#2#9"))})
precompile(Tuple{getfield(Gadfly, Symbol("#3#10"))})
precompile(Tuple{getfield(Gadfly, Symbol("#4#11"))})
precompile(Tuple{typeof(Base.isvalid_file_crc), Base.IOStream})
precompile(Tuple{typeof(Base.stale_cachefile), String, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, String})
precompile(Tuple{typeof(Base._require_search_from_serialized), Base.PkgId, String})
precompile(Tuple{typeof(Base.create_expr_cache), String, String, Array{Base.Pair{Base.PkgId, UInt64}, 1}, Nothing})
precompile(Tuple{typeof(Base.compilecache), Base.PkgId, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, Nothing})
precompile(Tuple{typeof(Base._require_from_serialized), String})
precompile(Tuple{typeof(Base._require), Base.PkgId})
precompile(Tuple{typeof(Base.require), Base.PkgId})
precompile(Tuple{typeof(Gadfly.link_dataframes)})
precompile(Tuple{typeof(Base.require), Module, Symbol})
precompile(Tuple{typeof(Pixman_jll.__init__)})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Base.OneTo{Int64}, 1}}})
precompile(Tuple{typeof(Base.allocatedinline), Type{AbstractArray{T, 1} where T}})
precompile(Tuple{getfield(Base.Cartesian, Symbol("#@nloops")), LineNumberNode, Module, Any, Any, Any, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.Cartesian.exprresolve_arith), Expr})
precompile(Tuple{typeof(Base.Cartesian.exprresolve_conditional), Expr})
precompile(Tuple{typeof(Base.Cartesian.exprresolve), Expr})
precompile(Tuple{typeof(Base.Cartesian.inlineanonymous), Expr, Int64})
precompile(Tuple{typeof(Base.Cartesian._nloops), Int64, Symbol, Expr, Expr})
precompile(Tuple{typeof(Base.Cartesian.lreplace!), Expr, Base.Cartesian.LReplace{String}})
precompile(Tuple{typeof(Base.Cartesian.lreplace), Expr, Symbol, Int64})
precompile(Tuple{Type{Base.Val{x} where x}, Bool})
precompile(Tuple{Type{Base.Val{true}}})
precompile(Tuple{getfield(Base, Symbol("##s66#142")), Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Base.merge_types), Tuple{Symbol}, Type{NamedTuple{(:dims,), Tuple{Int64}}}, Type{NamedTuple{(), Tuple{}}}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{DataFrames.RowIndexMap, 1}}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Base.SubString{String}, 1}}})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{typeof(Pkg.Artifacts.unpack_platform), Base.Dict{String, Any}, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}, Base.Dict{String, Any}})
precompile(Tuple{Type{Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Generator{Array{Base.Dict{String, Any}, 1}, getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##probe_platform_engines!#15")), Bool, typeof(Pkg.PlatformEngines.probe_platform_engines!)})
precompile(Tuple{typeof(Base.convert), Type{Nothing}, Base.SubString{String}})
precompile(Tuple{typeof(Base.convert), Type{Base.Pair{Nothing, String}}, Base.Pair{Base.SubString{String}, String}})
precompile(Tuple{typeof(Base.setindex!), Array{Base.Pair{Nothing, String}, 1}, Base.Pair{Base.SubString{String}, String}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.Pair{Nothing, String}, 1}, Base.Pair{Base.SubString{String}, String}, Base.Generator{Array{Array{Union{Nothing, Base.SubString{String}}, 1}, 1}, getfield(Pkg.PlatformEngines, Symbol("#88#90"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{Union{Nothing, Base.SubString{String}}, 1}, 1}, getfield(Pkg.PlatformEngines, Symbol("#88#90"))}})
precompile(Tuple{typeof(Pkg.PlatformEngines.list_tarball_symlinks), String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(PCRE_jll.__init__)})
precompile(Tuple{typeof(Libiconv_jll.__init__)})
precompile(Tuple{typeof(Libffi_jll.__init__)})
precompile(Tuple{typeof(Zlib_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(XML2_jll, Symbol("#13#15")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(XML2_jll, Symbol("#14#16")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(XML2_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Gettext_jll, Symbol("#7#9")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Gettext_jll, Symbol("#8#10")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Gettext_jll.__init__)})
precompile(Tuple{typeof(Glib_jll.__init__)})
precompile(Tuple{typeof(Libuuid_jll.__init__)})
precompile(Tuple{typeof(Libgpg_error_jll.__init__)})
precompile(Tuple{typeof(Libgcrypt_jll.__init__)})
precompile(Tuple{typeof(Bzip2_jll.__init__)})
precompile(Tuple{typeof(FreeType2_jll.__init__)})
precompile(Tuple{typeof(Expat_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Fontconfig_jll, Symbol("#34#36")), Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Fontconfig_jll, Symbol("#35#37")), Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Fontconfig_jll.__init__)})
precompile(Tuple{typeof(XSLT_jll.__init__)})
precompile(Tuple{typeof(Xorg_libXdmcp_jll.__init__)})
precompile(Tuple{typeof(libpng_jll.__init__)})
precompile(Tuple{typeof(Xorg_libXau_jll.__init__)})
precompile(Tuple{typeof(Xorg_libpthread_stubs_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libxcb_jll, Symbol("#7#9")), Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libxcb_jll, Symbol("#8#10")), Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Xorg_libxcb_jll.__init__)})
precompile(Tuple{typeof(Xorg_xtrans_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libX11_jll, Symbol("#7#9")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libX11_jll, Symbol("#8#10")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Xorg_libX11_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libXrender_jll, Symbol("#7#9")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libXrender_jll, Symbol("#8#10")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Xorg_libXrender_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libXext_jll, Symbol("#7#9")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libXext_jll, Symbol("#8#10")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Xorg_libXext_jll.__init__)})
precompile(Tuple{typeof(LZO_jll.__init__)})
precompile(Tuple{getfield(Base, Symbol("##s66#129")), Any, Any, Any, Any, Any})
precompile(Tuple{getfield(Base.Cartesian, Symbol("#@nexprs")), LineNumberNode, Module, Int64, Expr})
precompile(Tuple{typeof(Cairo_jll.__init__)})
precompile(Tuple{typeof(Graphite2_jll.__init__)})
precompile(Tuple{Type{Base.Val{7}}})
precompile(Tuple{typeof(HarfBuzz_jll.__init__)})
precompile(Tuple{typeof(FriBidi_jll.__init__)})
precompile(Tuple{Type{Base.Val{6}}})
precompile(Tuple{typeof(Pango_jll.__init__)})
precompile(Tuple{typeof(Cairo.__init__)})
precompile(Tuple{getfield(Compose, Symbol("#114#120"))})
precompile(Tuple{getfield(Compose, Symbol("#115#121"))})
precompile(Tuple{getfield(Compose, Symbol("#116#122"))})
precompile(Tuple{typeof(Compose.link_cairo)})
precompile(Tuple{typeof(Base.vect), Tuple{Symbol, String}, Vararg{Tuple{Symbol, String}, N} where N})
precompile(Tuple{typeof(Base.iterate), Array{Tuple{Symbol, String}, 1}})
precompile(Tuple{typeof(Compose.docfunc), Symbol, String})
precompile(Tuple{getfield(DocStringExtensions, Symbol("#20#21")){typeof(DocStringExtensions.template_hook)}, LineNumberNode, Vararg{Any, N} where N})
precompile(Tuple{typeof(DocStringExtensions.template_hook), LineNumberNode, Module, String, Symbol})
precompile(Tuple{typeof(Base.Docs.docerror), Any})
precompile(Tuple{typeof(Base.Docs.docm), LineNumberNode, Module, Any, Any, Bool})
precompile(Tuple{typeof(Base.Docs.docm), LineNumberNode, Module, Any, Any})
precompile(Tuple{typeof(Base.Docs.objectdoc), Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Base.Docs.splitexpr), Expr})
precompile(Tuple{typeof(Base.Docs.bindingexpr), Any})
precompile(Tuple{typeof(Base.Docs.objectdoc), Any, Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Base.Docs.docstr), Any, Any})
precompile(Tuple{typeof(Base.Docs._docstr), Core.SimpleVector, Any})
precompile(Tuple{typeof(Base.:(==)), Module, WeakRef})
precompile(Tuple{typeof(Base.Docs.doc!), Module, Base.Docs.Binding, Base.Docs.DocStr, Any})
precompile(Tuple{typeof(Base.iterate), Array{Tuple{Symbol, String}, 1}, Int64})
precompile(Tuple{typeof(Base.print_to_string), Expr})
precompile(Tuple{typeof(Base.string), Expr})
precompile(Tuple{typeof(Base.show_list), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Any, 1}, String, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.show_list), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Any, 1}, Symbol, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.show_enclosed_list), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Array{Any, 1}, String, String, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.show_generator), Base.GenericIOBuffer{Array{UInt8, 1}}, Expr, Int64})
precompile(Tuple{typeof(Base.show_list), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Any, 1}, Char, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.show_block), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Array{Any, 1}, Expr, Int64})
precompile(Tuple{typeof(Base.show_unquoted), Base.GenericIOBuffer{Array{UInt8, 1}}, Expr, Int64, Int64})
precompile(Tuple{typeof(Base.show_call), Base.GenericIOBuffer{Array{UInt8, 1}}, Symbol, Symbol, Array{Any, 1}, Int64})
precompile(Tuple{getfield(Printf, Symbol("#@sprintf")), LineNumberNode, Module, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base._compute_eltype), Type{Tuple{String, Expr, Expr}}})
precompile(Tuple{typeof(Base.getindex), Tuple{String, Expr, Expr}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.Printf.gen), String})
precompile(Tuple{typeof(Base.Printf._printf), String, Expr, String, Tuple{Expr, Expr}})
precompile(Tuple{typeof(Base.Printf._printf), String, Expr, String, Tuple{Symbol, Expr}})
precompile(Tuple{typeof(Base.indexed_iterate), Array{String, 1}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Array{String, 1}, Int64, Int64})
precompile(Tuple{Type{NamedTuple{(:header, :normalizenames, :delim, :quotechar, :escapechar, :categorical, :strict), T} where T<:Tuple}, Tuple{Int64, Bool, String, Char, Char, Bool, Bool}})
precompile(Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, Tuple{Symbol}})
precompile(Tuple{typeof(Base._compute_eltype), Type{Tuple{Int64, Bool, String, Char, Char, Bool, Bool}}})
precompile(Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
precompile(Tuple{getfield(Base.Cartesian, Symbol("#@ncall")), LineNumberNode, Module, Int64, Any, Vararg{Any, N} where N})
precompile(Tuple{typeof(Core.Compiler.zero), Type{Int128}})
precompile(Tuple{typeof(Core.Compiler.zero), Type{UInt8}})
precompile(Tuple{typeof(CSV.isvaliddelim), Char})
precompile(Tuple{typeof(Base._all), typeof(CSV.isvaliddelim), String, Base.Colon})
precompile(Tuple{typeof(CSV.checkvaliddelim), String})
precompile(Tuple{typeof(Mmap.mmap), String, Type{Array{UInt8, 1}}})
precompile(Tuple{getfield(Mmap, Symbol("##mmap#1")), Bool, Bool, typeof(Mmap.mmap), Mmap.Anonymous, Type{Array{UInt8, 1}}, Tuple{Int64}, Int64})
precompile(Tuple{typeof(CSV.getsource), String, Bool})
precompile(Tuple{typeof(CSV.skiptorow), CSV.ReversedBuf, Int64, Int64, UInt8, UInt8, UInt8, Int64, Int64})
precompile(Tuple{typeof(CSV.skiptorow), Array{UInt8, 1}, Int64, Int64, UInt8, UInt8, UInt8, Int64, Int64})
precompile(Tuple{typeof(CSV.checkcommentandemptyline), Array{UInt8, 1}, Int64, Int64, Nothing, Bool})
precompile(Tuple{typeof(CSV.detectheaderdatapos), Array{UInt8, 1}, Int64, Int64, UInt8, UInt8, UInt8, Nothing, Bool, Int64, Int64})
precompile(Tuple{typeof(CSV.detectdelimandguessrows), Array{UInt8, 1}, Int64, Int64, Int64, UInt8, UInt8, UInt8, UInt8, Nothing, Bool})
precompile(Tuple{Type{Parsers.Options{ignorerepeated, Q, debug, S, D, DF} where DF where D where S where debug where Q where ignorerepeated}, Base.Missing, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, Nothing, Nothing, Nothing, Bool, Bool, Bool, Bool, Bool})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Int8, Type}, Int8})
precompile(Tuple{typeof(Base.copyto!), Array{Base.Pair{String, UInt64}, 1}, Base.Dict{String, UInt64}})
precompile(Tuple{typeof(Base.sort!), Array{Base.Pair{String, UInt64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(CSV, Symbol("#21#29"))}})
precompile(Tuple{typeof(Base.sort!), Array{Base.Pair{String, UInt64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.By{getfield(CSV, Symbol("#21#29"))}, Array{Base.Pair{String, UInt64}, 1}})
precompile(Tuple{typeof(Random.make_seed)})
precompile(Tuple{Type{Random.MersenneTwister}, Nothing})
precompile(Tuple{typeof(Random.default_rng), Int64})
precompile(Tuple{typeof(Base.rand), Type{Bool}})
precompile(Tuple{getfield(CSV, Symbol("#22#30")){Array{UInt8, 1}, UInt8, Array{Type, 1}, Array{Union{Nothing, Array{String, 1}}, 1}, Int64}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(CSV, Symbol("#22#30")){Array{UInt8, 1}, UInt8, Array{Type, 1}, Array{Union{Nothing, Array{String, 1}}, 1}, Int64}}})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Any, Any}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}})
precompile(Tuple{typeof(Base._all), getfield(Base, Symbol("#240#242")), Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}, Base.Colon})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{Base.Pair{String, UInt64}, 1}, getfield(CSV, Symbol("#20#28"))}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{String, 1}, Array{String, 1}, Int64})
precompile(Tuple{typeof(Base.fill!), Array{Union{Nothing, Array{String, 1}}, 1}, Nothing})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Base.Generator{Array{String, 1}, typeof(Parsers.ptrlen)}, Int64, Int64})
precompile(Tuple{typeof(Base._collect), Array{String, 1}, Base.Generator{Array{String, 1}, typeof(Parsers.ptrlen)}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Parsers, Symbol("#1#2"))}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.By{getfield(Parsers, Symbol("#1#2"))}, Array{Tuple{Ptr{UInt8}, Int64}, 1}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.ReverseOrdering{Base.Order.By{getfield(Parsers, Symbol("#1#2"))}}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.ReverseOrdering{Base.Order.By{getfield(Parsers, Symbol("#1#2"))}}, Array{Tuple{Ptr{UInt8}, Int64}, 1}})
precompile(Tuple{typeof(Parsers.prepare), Array{String, 1}})
precompile(Tuple{Type{Parsers.Options{ignorerepeated, Q, debug, S, D, DF} where DF where D where S where debug where Q where ignorerepeated}, Array{String, 1}, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, Nothing, Nothing, Nothing, Bool, Bool, Bool, Bool, Bool})
precompile(Tuple{Type{Parsers.Options{ignorerepeated, Q, debug, S, D, DF} where DF where D where S where debug where Q where ignorerepeated}, Base.Missing, UInt8, UInt8, UInt8, UInt8, UInt8, String, UInt8, Nothing, Nothing, Nothing, Bool, Bool, Bool, Bool, Bool})
precompile(Tuple{Type{Parsers.Options{ignorerepeated, Q, debug, S, D, DF} where DF where D where S where debug where Q where ignorerepeated}, Array{String, 1}, UInt8, UInt8, UInt8, UInt8, UInt8, String, UInt8, Nothing, Nothing, Nothing, Bool, Bool, Bool, Bool, Bool})
precompile(Tuple{typeof(CSV.detectdelimandguessrows), Array{UInt8, 1}, Int64, Int64, Int64, UInt8, UInt8, UInt8, String, Nothing, Bool})
precompile(Tuple{typeof(CSV.file), String, Int64, Bool, Int64, Nothing, Int64, Int64, Bool, Nothing, Bool, Bool, Array{String, 1}, String, String, Bool, Char, Nothing, Nothing, Char, Nothing, UInt8, Nothing, Nothing, Nothing, Nothing, Base.Dict{Int8, Int8}, Bool, Float64, Bool, Bool, Nothing, Bool, Bool, Nothing})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:header, :normalizenames, :delim, :quotechar, :escapechar, :categorical, :strict), Tuple{Int64, Bool, String, Char, Char, Bool, Bool}}, Type{CSV.File{threaded} where threaded}, String})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{AbstractArray{T, 1} where T, 1}, Base.IndexLinear, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Symbol, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Symbol, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.string), Tuple{Base.Broadcast.Extruded{Array{Char, 0}, Tuple{}, Tuple{}}, Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Symbol, 1}, Tuple{Array{Int64, 1}}})
precompile(Tuple{getfield(DataFrames, Symbol("##make_unique!#1")), Bool, typeof(DataFrames.make_unique!), Array{Symbol, 1}, Array{Symbol, 1}})
precompile(Tuple{Type{Base.Dict{Symbol, Int64}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, Int64}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, Int64}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Int64}, Int64, Symbol})
precompile(Tuple{Type{Base.Dict{Symbol, Int64}}, Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Base.UnitRange{Int64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{AbstractArray{T, 1} where T, 1}, getfield(DataFrames, Symbol("#100#103"))}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.string), Tuple{Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{getfield(DataFrames, Symbol("#DataFrame#99#102")), Bool, Type{DataFrames.DataFrame}, Array{AbstractArray{T, 1} where T, 1}, DataFrames.Index})
precompile(Tuple{getfield(DataFrames, Symbol("##DataFrame#114")), Bool, Bool, Type{DataFrames.DataFrame}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}, Array{Symbol, 1}})
precompile(Tuple{getfield(CSV, Symbol("#kw##read")), NamedTuple{(:header, :normalizenames, :delim, :quotechar, :escapechar, :categorical, :strict), Tuple{Int64, Bool, String, Char, Char, Bool, Bool}}, typeof(CSV.read), String})
precompile(Tuple{typeof(Mmap.grow!), Base.IOStream, Int64, Int64})
precompile(Tuple{getfield(Mmap, Symbol("##mmap#1")), Bool, Bool, typeof(Mmap.mmap), Base.IOStream, Type{Array{UInt8, 1}}, Tuple{Int64}, Int64})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Mmap, Symbol("#7#8")){Array{UInt8, 1}, Bool, Bool, Tuple{Int64}, Int64}, String, Vararg{String, N} where N})
precompile(Tuple{Type{Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}}, Array{String, 1}, Base.Missing, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, Nothing, Nothing, Nothing, Bool, Bool})
precompile(Tuple{typeof(Base.collect_to!), Array{Symbol, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(CSV, Symbol("#8#11"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(CSV, Symbol("#8#11"))}})
precompile(Tuple{typeof(CSV.unescape), CSV.PointerString, UInt8})
precompile(Tuple{typeof(CSV.columnname), Array{UInt8, 1}, Int64, Int64, Int16, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64})
precompile(Tuple{typeof(Base.Unicode.utf8proc_error), Int64})
precompile(Tuple{typeof(Base.Unicode.utf8proc_map), String, Int64})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{String, Nothing}, Base.SubString{String}})
precompile(Tuple{typeof(Base.map), getfield(CSV, Symbol("#4#5")), Base.SubString{String}})
precompile(Tuple{typeof(CSV.normalizename), String})
precompile(Tuple{typeof(Base.collect_to!), Array{Symbol, 1}, Base.Generator{Array{String, 1}, getfield(CSV, Symbol("#9#12")){Bool}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{String, 1}, getfield(CSV, Symbol("#9#12")){Bool}}})
precompile(Tuple{typeof(CSV.makeunique), Array{Symbol, 1}})
precompile(Tuple{typeof(CSV.detectcolumnnames), Array{UInt8, 1}, Int64, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Bool})
precompile(Tuple{Type{Base.Val{false}}})
precompile(Tuple{typeof(Dates.character_codes), Core.SimpleVector})
precompile(Tuple{getfield(Parsers, Symbol("##s52#15")), Any, Any, Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Dates.character_codes), Type{Dates.DateFormat{Symbol("yyyy-mm-dd"), Tuple{Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}}}}})
precompile(Tuple{typeof(Base.first), Core.SimpleVector})
precompile(Tuple{typeof(Dates.genvar), DataType})
precompile(Tuple{Type{Base.IteratorSize}, Tuple{DataType, DataType, DataType}})
precompile(Tuple{typeof(Base._array_for), Type{Symbol}, Tuple{DataType, DataType, DataType}, Base.HasLength})
precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Symbol, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Parsers, Symbol("#16#17")), Tuple{DataType, DataType, DataType}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{Type{Tuple}, Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{typeof(Base._array_for), Type{Int64}, Tuple{DataType, DataType, DataType}, Base.HasLength})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Symbol, 1}, Vararg{Any, N} where N})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64}}})
precompile(Tuple{Type{Base.IteratorSize}, Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64}}}})
precompile(Tuple{typeof(Base._array_for), Type{Expr}, Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64}}}, Base.HasLength})
precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Expr, 1}})
precompile(Tuple{typeof(Base.map), getfield(Base.Iterators, Symbol("#3#4")), Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64}}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Type, 1}, getfield(Parsers, Symbol("#19#20"))}})
precompile(Tuple{getfield(Parsers, Symbol("##s52#18")), Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Dates._directives), Type{Dates.DateFormat{Symbol("yyyy-mm-dd"), Tuple{Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}}}}})
precompile(Tuple{typeof(Base._array_for), Type{Int64}, Array{Type, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Type, 1}, getfield(Parsers, Symbol("#19#20"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Array{Type, 1}, getfield(Parsers, Symbol("#19#20"))}, Int64})
precompile(Tuple{typeof(Dates.character_codes), Type{Dates.DateFormat{Symbol("yyyy-mm-dd\THH:MM:SS.s"), Tuple{Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x73000000)}}}}})
precompile(Tuple{Type{Base.IteratorSize}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}})
precompile(Tuple{typeof(Base._array_for), Type{Symbol}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, Base.HasLength})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Parsers, Symbol("#16#17")), Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{Type{Tuple}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{typeof(Base._array_for), Type{Int64}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, Base.HasLength})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Any, 1}, Int64, Array{Int64, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.setindex_widen_up_to), Array{Int64, 1}, Dates.AMPM, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Any, 1}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Dates.AMPM}}})
precompile(Tuple{Type{Base.IteratorSize}, Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Dates.AMPM}}}})
precompile(Tuple{typeof(Base._array_for), Type{Expr}, Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Dates.AMPM}}}, Base.HasLength})
precompile(Tuple{typeof(Base.map), getfield(Base.Iterators, Symbol("#3#4")), Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Dates.AMPM}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Dates.AMPM}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Dates.AMPM}}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Symbol, Dates.AMPM}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Symbol, Dates.AMPM}, Int64, Int64})
precompile(Tuple{typeof(Dates._directives), Type{Dates.DateFormat{Symbol("yyyy-mm-dd\THH:MM:SS.s"), Tuple{Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x73000000)}}}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64}}})
precompile(Tuple{typeof(Base.map), getfield(Base.Iterators, Symbol("#3#4")), Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64}}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Dates.character_codes), Type{Dates.DateFormat{Symbol("HH:MM:SS.s"), Tuple{Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x73000000)}}}}})
precompile(Tuple{Type{Base.IteratorSize}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}})
precompile(Tuple{typeof(Base._array_for), Type{Symbol}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, Base.HasLength})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Parsers, Symbol("#16#17")), Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{Type{Tuple}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{typeof(Base._array_for), Type{Int64}, Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, Base.HasLength})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Any, 1}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Dates.AMPM}}})
precompile(Tuple{Type{Base.IteratorSize}, Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Dates.AMPM}}}})
precompile(Tuple{typeof(Base._array_for), Type{Expr}, Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Dates.AMPM}}}, Base.HasLength})
precompile(Tuple{typeof(Base.map), getfield(Base.Iterators, Symbol("#3#4")), Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Dates.AMPM}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Dates.AMPM}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Dates.AMPM}}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Dates._directives), Type{Dates.DateFormat{Symbol("HH:MM:SS.s"), Tuple{Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x73000000)}}}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64}}})
precompile(Tuple{typeof(Base.map), getfield(Base.Iterators, Symbol("#3#4")), Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Tuple{Int64, Int64, Int64, Int64}}}, Tuple{Int64, Int64}})
precompile(Tuple{getfield(Base, Symbol("##chop#326")), Int64, Int64, typeof(Base.chop), String})
precompile(Tuple{Type{Base.SubString{T} where T<:AbstractString}, Base.SubString{String}})
precompile(Tuple{typeof(Base.nextind), Base.SubString{String}, Int64, Int64})
precompile(Tuple{getfield(Base, Symbol("##chop#326")), Int64, Int64, typeof(Base.chop), Base.SubString{String}})
precompile(Tuple{typeof(Parsers.codes), Int16})
precompile(Tuple{typeof(CSV.fatalerror), Array{UInt8, 1}, Int64, Int64, Int16, Int64, Int64})
precompile(Tuple{typeof(CSV.reallocatetape), Int64, Int64, Int64})
precompile(Tuple{getfield(Mmap, Symbol("##mmap#1")), Bool, Bool, typeof(Mmap.mmap), Mmap.Anonymous, Type{Array{UInt64, 1}}, Tuple{Int64}, Int64})
precompile(Tuple{typeof(CSV.notenoughcolumns), Int64, Int64, Int64})
precompile(Tuple{typeof(CSV.toomanycolumns), Int64, Int64})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Int8, Int8}, Int8})
precompile(Tuple{Type{Base.Dict{String, UInt64}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{String, UInt64}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{String, UInt64}, String})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{String, UInt64}, CSV.PointerString})
precompile(Tuple{typeof(Dates.validargs), Type{Dates.Time}, Int64, Int64, Int64, Int64, Int64, Int64, Dates.AMPM})
precompile(Tuple{typeof(Base.power_by_squaring), Int64, Int64})
precompile(Tuple{typeof(Parsers.pow10), Type{Float64}, Int64})
precompile(Tuple{Type{Float64}, Base.GMP.BigInt, Base.Rounding.RoundingMode{:Nearest}})
precompile(Tuple{typeof(Parsers.roundQuotient), Base.GMP.BigInt, Base.GMP.BigInt})
precompile(Tuple{typeof(Base.Math.ldexp), Base.MPFR.BigFloat, Int64})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Int64, Int64})
precompile(Tuple{typeof(Core.throw_inexacterror), Symbol, Type{Int32}, Int128})
precompile(Tuple{typeof(Parsers.BigInt!), Base.GMP.BigInt, Int128})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Int128, Int64})
precompile(Tuple{typeof(Parsers.pow10), Type{Float64}, Int128})
precompile(Tuple{typeof(Base.Math.ldexp), Float64, Int128})
precompile(Tuple{typeof(Base.GMP.MPZ.realloc2), Int64})
precompile(Tuple{Type{Base.GMP.BigInt}, Int128})
precompile(Tuple{typeof(Base.exp2), Base.MPFR.BigFloat})
precompile(Tuple{typeof(Base.:(*)), Base.MPFR.BigFloat, Base.MPFR.BigFloat})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Int128, Int128})
precompile(Tuple{typeof(Base.GMP.MPZ.add_ui), Base.GMP.BigInt, UInt8})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Base.GMP.BigInt, Int64})
precompile(Tuple{typeof(Parsers.pow10), Type{Float64}, Base.GMP.BigInt})
precompile(Tuple{typeof(Base.Math.ldexp), Float64, Base.GMP.BigInt})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Base.GMP.BigInt, Base.GMP.BigInt})
precompile(Tuple{typeof(Parsers._typeparser), Type{Float64}, Array{UInt8, 1}, Int64, Int64, UInt8, Int16, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Type{Base.GMP.BigInt}})
precompile(Tuple{typeof(Parsers._typeparser), Type{Float64}, Array{UInt8, 1}, Int64, Int64, UInt8, Int16, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Type{Int128}})
precompile(Tuple{typeof(CSV.detect), Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Base.Dict{Int8, Int8}, Float64, Array{Base.Dict{String, UInt64}, 1}, Array{UInt64, 1}, Array{Int64, 1}, Bool, Array{Int8, 1}, Bool, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Float64}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Dates.Date}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Dates.DateTime}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Dates.Time}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Bool}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsetape), Base.Val{false}, Bool, Int64, Base.Dict{Int8, Int8}, Array{Array{UInt64, 1}, 1}, Array{Array{UInt64, 1}, 1}, Array{UInt8, 1}, Int64, Int64, Int64, Nothing, Array{Int64, 1}, Float64, Array{Base.Dict{String, UInt64}, 1}, Array{UInt64, 1}, Int64, Array{Int8, 1}, Array{Int64, 1}, Bool, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Bool})
precompile(Tuple{typeof(Base.getindex), Array{Array{UInt64, 1}, 1}, Int64})
precompile(Tuple{typeof(Base.nonmissingtype), Type{CSV.PooledString}})
precompile(Tuple{typeof(CSV.sentinelvalue), Type{CSV.PooledString}})
precompile(Tuple{Type{CSV.Column{String, CSV.PooledString}}, Array{UInt64, 1}, Int64, UInt8, Bool, Array{String, 1}, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(Base.nonmissingtype), Type{Union{Base.Missing, CSV.PooledString}}})
precompile(Tuple{Type{CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}}, Array{UInt64, 1}, Int64, UInt8, Bool, Array{String, 1}, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(CSV._eltype), Type{Union{Base.Missing, Float64}}})
precompile(Tuple{typeof(Base.nonmissingtype), Type{Union{Base.Missing, Float64}}})
precompile(Tuple{Type{CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}}, Array{UInt64, 1}, Int64, UInt8, Bool, Nothing, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(CSV._eltype), Type{Dates.Date}})
precompile(Tuple{typeof(Base.nonmissingtype), Type{Dates.Date}})
precompile(Tuple{Type{CSV.Column{Dates.Date, Dates.Date}}, Array{UInt64, 1}, Int64, UInt8, Bool, Nothing, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(CSV._eltype), Type{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(CSV.uint64), Int64})
precompile(Tuple{Type{CSV.Column{Int64, Int64}}, Array{UInt64, 1}, Int64, UInt8, Bool, Nothing, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(CSV._eltype), Type{Union{Base.Missing, Int64}}})
precompile(Tuple{Type{CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}}, Array{UInt64, 1}, Int64, UInt8, Bool, Nothing, Array{UInt8, 1}, UInt64})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{String, CSV.PooledString}}})
precompile(Tuple{Type{Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}}})
precompile(Tuple{typeof(Base.empty), Base.Dict{Any, Any}, Type{Symbol}, Type{CSV.Column{String, CSV.PooledString}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, CSV.Column{String, CSV.PooledString}, Symbol})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}, Tuple{Int64, Int64}})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}}})
precompile(Tuple{Type{Base.Dict{Symbol, CSV.Column{T, P} where P where T}}})
precompile(Tuple{typeof(Base.empty), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, Type{Symbol}, Type{CSV.Column{T, P} where P where T}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{String, CSV.PooledString}, Symbol})
precompile(Tuple{typeof(Base.merge!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Symbol})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}, Tuple{Int64, Int64}})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Symbol})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Dates.Date, Dates.Date}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Dates.Date, Dates.Date}, Symbol})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Int64, Int64}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Int64, Int64}, Symbol})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Symbol})
precompile(Tuple{Type{Base.Dict{Symbol, AbstractArray{T, 1} where T}}})
precompile(Tuple{Type{Base.Dict{Symbol, AbstractArray{T, 1} where T}}, Base.Dict{Symbol, CSV.Column{T, P} where P where T}})
precompile(Tuple{Type{CSV.File{false}}, String, Array{Symbol, 1}, Array{Type, 1}, Int64, Int64, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}, Base.Dict{Symbol, CSV.Column{T, P} where P where T}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{String, CSV.PooledString}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Int64, Int64}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Dates.Date, Dates.Date}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{String, CSV.PooledString}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Dates.Date, Dates.Date}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Int64, Int64}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Int64})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{String, CSV.PooledString}})
precompile(Tuple{typeof(Base._array_for), Type{Int64}, Array{AbstractArray{T, 1} where T, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{AbstractArray{T, 1} where T, 1}, getfield(DataFrames, Symbol("#100#103"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Array{AbstractArray{T, 1} where T, 1}, getfield(DataFrames, Symbol("#100#103"))}, Int64})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Dates.Date, Dates.Date}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Int64, Int64}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}})
precompile(Tuple{typeof(Base.extrema), Array{Int64, 1}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int64, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int64, Int64}, Int64, Int64})
precompile(Tuple{typeof(DataFrames.nrow), DataFrames.DataFrame})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, Int64}, Symbol})
precompile(Tuple{typeof(Base.map), typeof(Base.Unicode.uppercase), String})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Int64, Symbol}, 1}, Base.Generator{Base.KeySet{Symbol, Base.Dict{Symbol, Int64}}, getfield(DataFrames, Symbol("#15#20")){String}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.KeySet{Symbol, Base.Dict{Symbol, Int64}}, getfield(DataFrames, Symbol("#15#20")){String}}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Int64, Symbol}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Int64, Symbol}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.ForwardOrdering, Array{Tuple{Int64, Symbol}, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataFrames, Symbol("#16#21")){Array{Tuple{Int64, Symbol}, 1}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(DataFrames, Symbol("#16#21")){Array{Tuple{Int64, Symbol}, 1}}}})
precompile(Tuple{typeof(Base.grow_to!), Array{Symbol, 1}, Base.Generator{Base.Iterators.Filter{getfield(DataFrames, Symbol("#19#24")){Int64}, Array{Tuple{Int64, Symbol}, 1}}, getfield(DataFrames, Symbol("#18#23"))}, Int64})
precompile(Tuple{typeof(Base.grow_to!), Array{Symbol, 1}, Base.Generator{Base.Iterators.Filter{getfield(DataFrames, Symbol("#19#24")){Int64}, Array{Tuple{Int64, Symbol}, 1}}, getfield(DataFrames, Symbol("#18#23"))}})
precompile(Tuple{typeof(DataFrames.fuzzymatch), Base.Dict{Symbol, Int64}, Symbol})
precompile(Tuple{getfield(Main, Symbol("#3#4")), DataFrames.DataFrameRow{DataFrames.DataFrame, DataFrames.Index}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#3#4"))}}, Tuple{Base.OneTo{Int64}, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#3#4"))}}})
precompile(Tuple{typeof(Base.findall), Array{Bool, 1}})
precompile(Tuple{typeof(Base._all), getfield(Base, Symbol("#240#242")), Base.Dict{Symbol, Int64}, Base.Colon})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Dict{Symbol, Int64}})
precompile(Tuple{typeof(Base.filter), getfield(Main, Symbol("#3#4")), DataFrames.DataFrame})
precompile(Tuple{typeof(Base.length), CSV.Column{String, CSV.PooledString}})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrameRow{DataFrames.DataFrame, DataFrames.Index}, Symbol})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{String, CSV.PooledString}, Tuple{Int64}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{String, CSV.PooledString}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{String, CSV.PooledString}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{String, CSV.PooledString}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{String, 1}, Int64})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Union{Base.Missing, String}, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, String}, 1}, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Union{Base.Missing, Float64}, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Dates.Date, Dates.Date}, Tuple{Int64}})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Dates.Date, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Dates.Date, Dates.Date}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Dates.Date, Dates.Date}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Dates.Date, Dates.Date}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Dates.Date, 1}, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Int64, Int64}, Tuple{Int64}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Int64, Int64}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Int64, Int64}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Int64, Int64}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Union{Base.Missing, Int64}, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Int64})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{String, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Union{Base.Missing, String}, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Union{Base.Missing, Float64}, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Dates.Date, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Int64, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{getfield(Main, Symbol("#5#6")), DataFrames.DataFrameRow{DataFrames.DataFrame, DataFrames.Index}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#5#6"))}}, Tuple{Base.OneTo{Int64}, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#5#6"))}}})
precompile(Tuple{typeof(Base.filter), getfield(Main, Symbol("#5#6")), DataFrames.DataFrame})
precompile(Tuple{typeof(Base.in), String, Array{String, 1}})
precompile(Tuple{typeof(Base.getindex), Array{String, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Union{Base.Missing, String}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, String}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Union{Base.Missing, Float64}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Union{Base.Missing, Float64}, 1}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, Float64}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Dates.Date, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Dates.Date, 1}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), Array{Dates.Date, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Union{Base.Missing, Int64}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Union{Base.Missing, Int64}, 1}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, Int64}, 1}, Array{Int64, 1}})
precompile(Tuple{Type{Measures.Length{U, T} where T where U}, Symbol, Float64})
precompile(Tuple{typeof(Base.:(*)), Int64, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Measures.Length{:mm, Float64}}, Float64})
precompile(Tuple{Type{NamedTuple{(:point_size, :line_width, :major_label_font_size, :minor_label_font_size, :point_label_font_size, :key_title_font_size, :key_label_font_size), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
precompile(Tuple{typeof(Gadfly.current_theme)})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:point_size, :line_width, :major_label_font_size, :minor_label_font_size, :point_label_font_size, :key_title_font_size, :key_label_font_size), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Gadfly.Theme}, Gadfly.Theme})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##style")), NamedTuple{(:point_size, :line_width, :major_label_font_size, :minor_label_font_size, :point_label_font_size, :key_title_font_size, :key_label_font_size), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, typeof(Gadfly.style)})
precompile(Tuple{getfield(Gadfly, Symbol("##Theme#58")), ColorTypes.LCHab{Float32}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Function, Function, Array{Function, 1}, Measures.Length{:mm, Float64}, Array{Symbol, 1}, Array{Float64, 1}, Nothing, Nothing, Float64, Nothing, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Int64, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, typeof(Gadfly.default_stroke_color), Measures.Length{:mm, Float64}, typeof(Gadfly.default_discrete_highlight_color), typeof(Gadfly.default_continuous_highlight_color), typeof(Gadfly.default_lowlight_color), typeof(Gadfly.default_middle_color), Measures.Length{:mm, Float64}, Symbol, Symbol, typeof(Gadfly.Shape.square), Nothing, Nothing, Symbol, Nothing, Measures.Length{:mm, Float64}, Int64, Float64, Float64, Float64, Measures.Length{:mm, Float64}, Int64, Gadfly.Scale.DiscreteColorScale, Gadfly.Scale.ContinuousColorScale, Type{Gadfly.Theme}, Gadfly.Theme})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, typeof(Base.:(!)), Symbol})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Union{Base.Missing, Int64}, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.min), Array{Union{Base.Missing, Int64}, 1}, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.min), Base.IndexLinear, Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.minimum), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{Type{NamedTuple{(:xmin, :ymin), T} where T<:Tuple}, Tuple{Int64, Int64}})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:xmin, :ymin), Tuple{Int64, Int64}}, Type{Gadfly.Coord.Cartesian}})
precompile(Tuple{typeof(Base.vect), Int64, Vararg{Any, N} where N})
precompile(Tuple{Type{Array{Union{Nothing, Int64}, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Union{Nothing, Int64}, 1}, Tuple{Int64, Nothing}})
precompile(Tuple{Type{NamedTuple{(:method, :smoothing), T} where T<:Tuple}, Tuple{Symbol, Float64}})
precompile(Tuple{getfield(Gadfly.Geom, Symbol("#kw##smooth")), NamedTuple{(:method, :smoothing), Tuple{Symbol, Float64}}, typeof(Gadfly.Geom.smooth)})
precompile(Tuple{Type{NamedTuple{(:x, :y, :color), T} where T<:Tuple}, Tuple{Symbol, Symbol, Symbol}})
precompile(Tuple{typeof(Base.tuple_type_cons), Type{AbstractArray{T, N} where N where T}, Type{Tuple{}}})
precompile(Tuple{typeof(Base.tuple_type_cons), Type{Symbol}, Type{Tuple{AbstractArray{T, N} where N where T}}})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Iterators.Pairs{Symbol, Symbol, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:x, :y, :color), Tuple{Symbol, Symbol, Symbol}}}})
precompile(Tuple{typeof(Gadfly.cleanmapping), Base.Dict{Symbol, Symbol}})
precompile(Tuple{Type{Base.Dict{Symbol, AbstractString}}})
precompile(Tuple{Type{Gadfly.Plot}})
precompile(Tuple{typeof(Base.copyto!), Array{Symbol, 1}, Base.Set{Symbol}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Col.GroupedColumn, 1}, getfield(Gadfly, Symbol("#116#118")){Base.Set{Symbol}}}})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Int64}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Int64}, Int64, Symbol})
precompile(Tuple{typeof(Base.copyto!), Array{Tuple{Symbol, AbstractArray{T, N} where N where T}, 1}, Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{AbstractArray{T, N} where N where T, 1}}}})
precompile(Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, Array{Tuple{Symbol, AbstractArray{T, N} where N where T}, 1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(DataFrames, Symbol("#100#103"))}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{AbstractArray{T, 1} where T, 1}, Base.IndexLinear, Array{Any, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#DataFrame#99#102")), Bool, Type{DataFrames.DataFrame}, Array{Any, 1}, DataFrames.Index})
precompile(Tuple{typeof(Base.throw_boundserror), DataFrames.DataFrameColumns{DataFrames.DataFrame, AbstractArray{T, 1} where T}, Tuple{Int64}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.eltype), Tuple{Base.Broadcast.Extruded{DataFrames.DataFrameColumns{DataFrames.DataFrame, AbstractArray{T, 1} where T}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Gadfly.meltdata), DataFrames.DataFrame, Array{Gadfly.Col.GroupedColumn, 1}})
precompile(Tuple{typeof(Gadfly._evalmapping!), Base.Dict{Symbol, Any}, DataFrames.DataFrame, Gadfly.Data})
precompile(Tuple{typeof(Gadfly._evalmapping!), Base.Dict{Symbol, Any}, Gadfly.MeltedData{DataFrames.DataFrame}, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.evalmapping!), Base.Dict{Symbol, Any}, DataFrames.DataFrame, Gadfly.Data})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Plot, Symbol, DataFrames.DataFrame})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Gadfly.plot), DataFrames.DataFrame, Base.Dict{Symbol, Symbol}, Gadfly.Coord.Cartesian, Gadfly.Geom.LineGeometry, Gadfly.Theme})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##plot")), NamedTuple{(:x, :y, :color), Tuple{Symbol, Symbol, Symbol}}, typeof(Gadfly.plot), DataFrames.DataFrame, Gadfly.Coord.Cartesian, Gadfly.Geom.LineGeometry, Gadfly.Theme})
precompile(Tuple{typeof(Base.convert), Type{Any}, Symbol})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Base.Colon, Symbol})
precompile(Tuple{typeof(Gadfly.evalmapping), DataFrames.DataFrame, Symbol})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, AbstractString}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, AbstractString}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractString}, String, Symbol})
precompile(Tuple{typeof(Base.copy), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Any}, DataFrames.DataFrame})
precompile(Tuple{typeof(Base.:(==)), Symbol, Symbol})
precompile(Tuple{typeof(Base._compute_eltype), Type{Tuple{Bool, String}}})
precompile(Tuple{typeof(Base.merge_names), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol}, Tuple{Symbol, Symbol}})
precompile(Tuple{typeof(Base.eltype), Type{C}} where C<:(ColorTypes.Colorant{T, N} where N where T))
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Colorant{T, N}}} where N where T)
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.ColorAlpha{ColorTypes.RGB{Float64}, Float64, 4}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGBA{Float64}}})
precompile(Tuple{typeof(Core.Compiler._typename), TypeVar})
precompile(Tuple{typeof(ColorTypes.basetype), Type{T} where T})
precompile(Tuple{typeof(Base.typename), DataType})
precompile(Tuple{typeof(Base.parameter_upper_bound), UnionAll, Int64})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.RGBA{Float64}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.ColorAlpha{ColorTypes.RGB{Float64}, Float64, 4}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.RGBA{Float64}}})
precompile(Tuple{typeof(Core.Compiler._typename), TypeVar})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.ColorAlpha{ColorTypes.RGB{T}, T, 4} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.RGBA{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Base.typename), UnionAll})
precompile(Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
precompile(Tuple{typeof(Compose.PDF), String, Vararg{Any, N} where N})
precompile(Tuple{getfield(Mmap, Symbol("#3#5")){Int64, Ptr{Nothing}}, Array{UInt8, 1}})
precompile(Tuple{getfield(Compose, Symbol("##PDF#135")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Compose.PDF), String, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.merge_types), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, Type{NamedTuple{(:width, :height, :owns_surface, :emit_on_finish, :ppmm), Tuple{Float64, Float64, Bool, Bool, Float64}}}, Type{NamedTuple{(:ownedfile, :filename), Tuple{Bool, String}}}})
precompile(Tuple{typeof(Cairo.write_to_stream_callback), Base.IOStream, Ptr{UInt8}, UInt32})
precompile(Tuple{typeof(Base.:(==)), WeakRef, Nothing})
precompile(Tuple{Type{Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}}})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:width, :height, :owns_surface, :emit_on_finish, :ppmm, :ownedfile, :filename), Tuple{Float64, Float64, Bool, Bool, Float64, Bool, String}}, Type{Compose.Image{Compose.PDFBackend}}, Cairo.CairoSurfaceIOStream{UInt32}, Cairo.CairoContext, Base.IOStream})
precompile(Tuple{getfield(Compose, Symbol("##_#131")), Int64, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:ownedfile, :filename), Tuple{Bool, String}}}, Type{Compose.Image{Compose.PDFBackend}}, Base.IOStream, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Bool})
precompile(Tuple{Type{Compose.Image{Compose.PDFBackend}}, String, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AbstractRGB{FixedPointNumbers.Normed{UInt8, 8}}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}}})
precompile(Tuple{typeof(Base.convert), Type{ColorTypes.RGBA{Float64}}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Float64, 1}, Base.IndexLinear, Array{Any, 1}})
precompile(Tuple{getfield(Compose, Symbol("##_#130")), Float64, Float64, ColorTypes.RGBA{Float64}, ColorTypes.RGBA{Float64}, Array{Any, 1}, Compose.LineCapButt, Compose.LineJoinMiter, Bool, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Nothing, Bool, Array{Compose.ImagePropertyState, 1}, Array{Compose.ImagePropertyFrame, 1}, Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Bool, Bool, String, Bool, Bool, Float64, Nothing, Nothing, Type{Compose.Image{Compose.PDFBackend}}, Cairo.CairoSurfaceIOStream{UInt32}, Cairo.CairoContext, Base.IOStream})
precompile(Tuple{typeof(Base.allocatedinline), Type{Gadfly.StatisticElement}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Gadfly.Data, 1}}})
precompile(Tuple{typeof(Base.allocatedinline), Type{Gadfly.Data}})
precompile(Tuple{typeof(Base.diff_names), Tuple{Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Gadfly.Aesthetics, 1}}})
precompile(Tuple{typeof(Base.allocatedinline), Type{Base.Missing}})
precompile(Tuple{typeof(Base.allocatedinline), Type{Gadfly.Aesthetics}})
precompile(Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
precompile(Tuple{typeof(Base.diff_names), Tuple{Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
precompile(Tuple{Type{StaticArrays.Size{S} where S}, Int64})
precompile(Tuple{Type{StaticArrays.Size{(1,)}}})
precompile(Tuple{getfield(StaticArrays, Symbol("##s19#12")), Any, Any, Any, Any})
precompile(Tuple{typeof(StaticArrays.tuple_length), Type{Tuple{1}}})
precompile(Tuple{typeof(StaticArrays.tuple_prod), Type{Tuple{1}}})
precompile(Tuple{typeof(Base.:(*)), Int64})
precompile(Tuple{getfield(StaticArrays, Symbol("##s19#6")), Any, Any, Any, Any, Any, Type{T} where T, Type{T} where T, Type{T} where T, Any})
precompile(Tuple{typeof(Base.all), Function, Core.SimpleVector})
precompile(Tuple{typeof(Base._all), getfield(StaticArrays, Symbol("#7#8")), Core.SimpleVector, Base.Colon})
precompile(Tuple{typeof(StaticArrays.tuple_minimum), Type{Tuple{1}}})
precompile(Tuple{typeof(Base.minimum), Tuple{Int64}})
precompile(Tuple{getfield(StaticArrays, Symbol("##s19#2")), Any, Any, Any, Any, Any})
precompile(Tuple{getfield(StaticArrays, Symbol("#3#4")), Int64})
precompile(Tuple{typeof(Base.ntuple), getfield(StaticArrays, Symbol("#3#4")), Base.Val{1}})
precompile(Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{Tuple{1}}})
precompile(Tuple{typeof(Base.prod), StaticArrays.Size{(1,)}})
precompile(Tuple{typeof(StaticArrays._axes), StaticArrays.Size{(1,)}})
precompile(Tuple{typeof(Base.iterate), StaticArrays.SOneTo{1}})
precompile(Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Int64, 0}}})
precompile(Tuple{typeof(Base.eltype), Type})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AbstractRGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AlphaColor{ColorTypes.RGB{T}, T, 4} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.ARGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.ARGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.AlphaColor{ColorTypes.RGB{T}, T, 4} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.ARGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}})
precompile(Tuple{Type{Gadfly.Coord.Cartesian}, Array{Symbol, 1}, Array{Symbol, 1}, Nothing, Nothing, Nothing, Nothing, Bool, Bool, Bool, Nothing, Bool})
precompile(Tuple{Type{Gadfly.Coord.Cartesian}})
precompile(Tuple{typeof(Base.mapreduce_impl), getfield(Gadfly, Symbol("#85#97")){Base.Set{Symbol}}, typeof(Base.:(|)), Array{Symbol, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), getfield(Gadfly, Symbol("#85#97")){Base.Set{Symbol}}, typeof(Base.:(|)), Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{Type{Base.Dict{Symbol, Gadfly.ScaleElement}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Symbol, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.setdiff!), Base.Set{Symbol}, Base.Set{Symbol}})
precompile(Tuple{typeof(Base.copyto!), Array{Gadfly.StatisticElement, 1}, Int64, Array{Gadfly.StatisticElement, 1}, Int64, Int64})
precompile(Tuple{typeof(Base._collect), Array{Gadfly.StatisticElement, 1}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, getfield(Base, Symbol("#3#4")){getfield(Gadfly, Symbol("#87#100")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#89#102")){Gadfly.Plot}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#90#103")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}})
precompile(Tuple{Type{Base.Dict{Gadfly.StatisticElement, Nothing}}})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.XTicks})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Gadfly.StatisticElement, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.StatisticElement, Nothing}, Gadfly.Stat.Identity})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Gadfly.StatisticElement, Nothing}, Nothing, Gadfly.Stat.Identity})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, AbstractString}, Symbol})
precompile(Tuple{getfield(Gadfly, Symbol("#92#105")){Gadfly.Plot, Array{Gadfly.Data, 1}}, Array{Symbol, 1}, String})
precompile(Tuple{Type{Base.Dict{Gadfly.ScaleElement, Int64}}})
precompile(Tuple{typeof(Base.vcat), Array{Gadfly.Data, 1}, Array{Gadfly.Data, 1}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, Gadfly.ScaleElement}, Symbol})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, Gadfly.ScaleElement}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, Gadfly.ScaleElement}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Scale.DiscreteColorScale, Symbol})
precompile(Tuple{typeof(Base.copyto!), Array{Gadfly.StatisticElement, 1}, Base.Set{Gadfly.StatisticElement}})
precompile(Tuple{typeof(Base.setindex!), Array{Bool, 1}, Base.Missing, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Base.Missing, Base.Generator{Array{Gadfly.Aesthetics, 1}, getfield(Gadfly, Symbol("#93#106")){Symbol}}, Int64})
precompile(Tuple{typeof(Base.convert), Type{Base.Missing}, Bool})
precompile(Tuple{typeof(Base.setindex!), Array{Base.Missing, 1}, Bool, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.Missing, 1}, Bool, Base.Generator{Array{Gadfly.Aesthetics, 1}, getfield(Gadfly, Symbol("#93#106")){Symbol}}, Int64})
precompile(Tuple{getfield(Gadfly, Symbol("#93#106")){Symbol}, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Aesthetics, 1}, getfield(Gadfly, Symbol("#93#106")){Symbol}}})
precompile(Tuple{typeof(Base.map), getfield(DataStructures, Symbol("#82#83")){Int64}, Tuple{DataStructures.SparseIntSet, DataStructures.SparseIntSet}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.StatisticElement, Nothing}, Gadfly.Stat.TickStatistic})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Gadfly.StatisticElement, Nothing}, Nothing, Gadfly.Stat.TickStatistic})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.YTicks})
precompile(Tuple{typeof(Gadfly.scale_exists), Symbol, Symbol})
precompile(Tuple{typeof(Gadfly.get_scale), Symbol, Symbol, Gadfly.Theme})
precompile(Tuple{typeof(Base.mapreduce_impl), getfield(Gadfly, Symbol("#86#98")){Base.Set{Symbol}}, typeof(Base.:(|)), Array{Symbol, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), getfield(Gadfly, Symbol("#86#98")){Base.Set{Symbol}}, typeof(Base.:(|)), Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#82#94"))}, Int64})
precompile(Tuple{typeof(Gadfly.render_prepare), Gadfly.Plot})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Plot})
precompile(Tuple{typeof(Measures.width), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Measures.height), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.root_box), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{Type{Compose.Context}, Compose.Context})
precompile(Tuple{typeof(Compose.excise_vector_children!), Compose.Context})
precompile(Tuple{Type{Base.Dict{UInt64, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}}})
precompile(Tuple{Type{Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{UInt64, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{UInt64, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}, UInt64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt64, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}, UInt64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}, UInt64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, UInt64})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}, UInt64})
precompile(Tuple{typeof(Compose.optimize_batching), Compose.Context})
precompile(Tuple{typeof(Base.Math.cos_domain_error), Float64})
precompile(Tuple{typeof(Base.Math.paynehanek), Float64})
precompile(Tuple{typeof(Base.cos), Float64})
precompile(Tuple{typeof(Base.Math.sin_domain_error), Float64})
precompile(Tuple{typeof(Base.sin), Float64})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Int64, Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.:(*)), Int64, Array{Float64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), LinearAlgebra.Adjoint{Float64, Array{Float64, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Extruded{LinearAlgebra.Adjoint{Float64, Array{Float64, 1}}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Tuple{Base.IteratorsMD.CartesianIndex{2}}})
precompile(Tuple{typeof(Base.Broadcast.throwdm), Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.Broadcast.broadcast), typeof(Base.:(*)), Array{Float64, 1}, LinearAlgebra.Adjoint{Float64, Array{Float64, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(Base.:(-)), Tuple{Base.Broadcast.Extruded{Array{Float64, 2}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Tuple{Base.IteratorsMD.CartesianIndex{2}}})
precompile(Tuple{typeof(Base.:(-)), Array{Float64, 2}})
precompile(Tuple{typeof(Base.:(-)), LinearAlgebra.UniformScaling{Int64}, Array{Float64, 2}})
precompile(Tuple{typeof(Base.:(+)), Array{Float64, 2}, LinearAlgebra.UniformScaling{Int64}})
precompile(Tuple{typeof(Base.convert), Type{Compose.Transform}, Compose.Mirror})
precompile(Tuple{typeof(LinearAlgebra.matmul2x2!), Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2}, LinearAlgebra.MulAddMul{true, true, Float64, Float64}})
precompile(Tuple{typeof(LinearAlgebra.matmul3x3!), Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2}, LinearAlgebra.MulAddMul{true, true, Float64, Float64}})
precompile(Tuple{typeof(LinearAlgebra.BLAS.gemm!), Char, Char, Float64, Array{Float64, 2}, Array{Float64, 2}, Float64, Array{Float64, 2}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
precompile(Tuple{typeof(LinearAlgebra.copy_transpose!), Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.copyto!), Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.__subarray_throw_boundserror), Type{Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}}, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, Int64, Int64, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, LinearAlgebra.MulAddMul{true, true, Float64, Float64}, Tuple{Base.Broadcast.Extruded{Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}, Base.Broadcast.Extruded{Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Tuple{Base.IteratorsMD.CartesianIndex{2}}})
precompile(Tuple{typeof(Base.mightalias), Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}, Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}})
precompile(Tuple{typeof(Base.unalias), Array{Float64, 2}, Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.copyto!), Array{Float64, 2}, Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}})
precompile(Tuple{typeof(Base.unaliascopy), Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}})
precompile(Tuple{typeof(LinearAlgebra._generic_matmatmul!), Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2}, LinearAlgebra.MulAddMul{true, true, Float64, Float64}})
precompile(Tuple{typeof(LinearAlgebra.generic_matmatmul!), Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2}, LinearAlgebra.MulAddMul{true, true, Float64, Float64}})
precompile(Tuple{typeof(LinearAlgebra.gemm_wrapper!), Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2}, LinearAlgebra.MulAddMul{true, true, Float64, Float64}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Float64, Base.Broadcast.Extruded{Array{Float64, 2}, Tuple{Bool, Bool}, Tuple{Int64, Int64}}}}, Tuple{Base.IteratorsMD.CartesianIndex{2}}})
precompile(Tuple{typeof(Base.:(+)), Array{Float64, 2}, LinearAlgebra.UniformScaling{Bool}})
precompile(Tuple{typeof(Base.convert), Type{Compose.Transform}, Compose.Shear})
precompile(Tuple{Type{Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Compose.isscalar), Tuple{Base.Broadcast.Extruded{Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{Type{Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Base.Generator{Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, getfield(Compose, Symbol("#137#139"))}})
precompile(Tuple{Type{Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Base.Generator{Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, getfield(Compose, Symbol("#138#140"))}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Type{T} where T})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Type, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base._delete!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64})
precompile(Tuple{Type{Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}}, Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}})
precompile(Tuple{typeof(Compose.save_property_state), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Compose.push_property_frame), Compose.Image{Compose.PDFBackend}, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}})
precompile(Tuple{typeof(Compose.canbatch), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Int64, Int64, Compose.Container}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Int64, Int64, Compose.Container}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.ForwardOrdering, Array{Tuple{Int64, Int64, Compose.Container}, 1}})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, Nothing})
precompile(Tuple{typeof(Compose.restore_property_state), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.pop_property_frame), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.Context, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.finish), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Context})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Gadfly.Plot})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Layer, Symbol, DataFrames.DataFrame})
precompile(Tuple{typeof(Gadfly.element_coordinate_type), Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Base.vect), Gadfly.Stat.SmoothStatistic})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Gadfly.StatisticElement, 1}, Base.IndexLinear, Array{Gadfly.Stat.SmoothStatistic, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Gadfly.Stat.SmoothStatistic, 1}, Int64})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Base.keys), Base.Dict{Symbol, Any}})
precompile(Tuple{typeof(Base.union!), Base.Set{Symbol}, Base.KeySet{Symbol, Base.Dict{Symbol, Any}}})
precompile(Tuple{typeof(Base._mapreduce_dim), Function, Function, NamedTuple{(), Tuple{}}, Array{Symbol, 1}, Base.Colon})
precompile(Tuple{typeof(Base.mapreduce_impl), getfield(Gadfly, Symbol("#83#95")){Array{Symbol, 1}}, typeof(Base.:(|)), Array{Symbol, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), getfield(Gadfly, Symbol("#83#95")){Array{Symbol, 1}}, typeof(Base.:(|)), Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.mapreduce_impl), getfield(Gadfly, Symbol("#84#96")){Array{Symbol, 1}}, typeof(Base.:(|)), Array{Symbol, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), getfield(Gadfly, Symbol("#84#96")){Array{Symbol, 1}}, typeof(Base.:(|)), Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{typeof(Gadfly.input_aesthetics), Gadfly.Stat.SmoothStatistic})
precompile(Tuple{Type{Base.Set{T} where T}, Base.KeySet{Symbol, Base.Dict{Symbol, Any}}})
precompile(Tuple{typeof(Base.setdiff), Base.Set{Symbol}, Base.Set{Symbol}})
precompile(Tuple{typeof(Base._similar_for), Array{Gadfly.StatisticElement, 1}, Type{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64})
precompile(Tuple{typeof(Base._array_for), Type{Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}, Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, 1}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, getfield(Base, Symbol("#3#4")){getfield(Gadfly, Symbol("#87#100")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}}, Int64, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, getfield(Base, Symbol("#3#4")){getfield(Gadfly, Symbol("#87#100")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base._array_for), Type{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}}, Array{Gadfly.Layer, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#90#103")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#90#103")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64})
precompile(Tuple{typeof(Base.Iterators.flatten), Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Tuple{}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Int64})
precompile(Tuple{typeof(Gadfly.default_scales), Gadfly.Geom.LineGeometry, Gadfly.Theme})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Tuple{Int64, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Int64})
precompile(Tuple{typeof(Gadfly.default_scales), Gadfly.Stat.SmoothStatistic, Gadfly.Theme})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Tuple{Int64, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Int64}})
precompile(Tuple{typeof(Base.:(==)), Array{String, 1}, Nothing})
precompile(Tuple{typeof(Gadfly.classify_data), Array{String, 1}})
precompile(Tuple{typeof(Base.methods), Any, Any})
precompile(Tuple{Type{Base.Val{:categorical}}})
precompile(Tuple{Type{Base.Val{:color}}})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Scale.DiscreteColorScale})
precompile(Tuple{Type{Base.Set{T} where T}, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Set{Symbol}})
precompile(Tuple{typeof(Base.iterate), Base.Set{Symbol}, Int64})
precompile(Tuple{typeof(Base.:(==)), Array{Union{Base.Missing, Int64}, 1}, Nothing})
precompile(Tuple{typeof(Gadfly.classify_data), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{Type{Base.Val{:numerical}}})
precompile(Tuple{Type{Base.Val{:y}}})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:numerical}, Base.Val{:y}, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Scale.ContinuousScale, Symbol})
precompile(Tuple{Type{Base.Val{:x}}})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:numerical}, Base.Val{:x}, Gadfly.Theme})
precompile(Tuple{Type{Base.Val{:group}}})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:categorical}, Base.Val{:group}, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Scale.DiscreteScale})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Scale.DiscreteScale, Symbol})
precompile(Tuple{Type{Base.Val{:linestyle}}})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:categorical}, Base.Val{:linestyle}, Gadfly.Theme})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Any, Nothing}, Type{T} where T})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.PanelBackground})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.QuestionMark})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.HelpScreen})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.CrossHair})
precompile(Tuple{Type{NamedTuple{(:ticks,), T} where T<:Tuple}, Tuple{Symbol}})
precompile(Tuple{getfield(Gadfly.Stat, Symbol("#kw##xticks")), NamedTuple{(:ticks,), Tuple{Symbol}}, typeof(Gadfly.Stat.xticks)})
precompile(Tuple{getfield(Gadfly.Stat, Symbol("#kw##yticks")), NamedTuple{(:ticks,), Tuple{Symbol}}, typeof(Gadfly.Stat.yticks)})
precompile(Tuple{getfield(Gadfly, Symbol("#91#104")){Base.Set{Symbol}, Base.Set{Symbol}}, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.iterate), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Gadfly.Scale.apply_scales), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.Scale.apply_scales), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Gadfly.Data})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Gadfly.ScaleElement, Int64}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteScale})
precompile(Tuple{typeof(Base.get!), getfield(Base, Symbol("#243#244")){Int64}, Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteScale})
precompile(Tuple{typeof(Base.get!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteScale, Int64})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.DiscreteScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Base.get!), getfield(Base, Symbol("#243#244")){Int64}, Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Base.get!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.ContinuousScale, Int64})
precompile(Tuple{typeof(Gadfly.Scale.make_labeler), Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.ContinuousScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(Base.iterate), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Gadfly.isconcrete), Int64})
precompile(Tuple{typeof(Base.identity), Int64})
precompile(Tuple{typeof(Base.any), Function, Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{getfield(Base, Symbol("##any#596")), Function, typeof(Base.any), Function, Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base._any), typeof(Base.ismissing), Array{Union{Base.Missing, Int64}, 1}, Base.Colon})
precompile(Tuple{typeof(Base.length), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{Type{Array{Int64, N} where N}, UndefInitializer, Int64})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale_typed!), Array{Int64, 1}, Array{Union{Base.Missing, Int64}, 1}, Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Base.eltype), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteColorScale})
precompile(Tuple{typeof(Base.get!), getfield(Base, Symbol("#243#244")){Int64}, Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteColorScale})
precompile(Tuple{typeof(Base.get!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteColorScale, Int64})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.DiscreteColorScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(Base.ismissing), String})
precompile(Tuple{typeof(Base.fill!), Array{Int32, 1}, Int64})
precompile(Tuple{typeof(OrderedCollections.rehash!), OrderedCollections.OrderedDict{Any, Nothing}, Int64})
precompile(Tuple{typeof(OrderedCollections.ht_keyindex2), OrderedCollections.OrderedDict{Any, Nothing}, String})
precompile(Tuple{typeof(OrderedCollections._setindex!), OrderedCollections.OrderedDict{Any, Nothing}, Nothing, String, Int64})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{Any, Nothing}, Nothing, String})
precompile(Tuple{typeof(Base.push!), OrderedCollections.OrderedSet{Any}, String})
precompile(Tuple{typeof(OrderedCollections.hashindex), String, Int64})
precompile(Tuple{typeof(Base.:(!=)), Int32, Int64})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedSet{Any}})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedSet{Any}, Int64})
precompile(Tuple{typeof(Base.allocatedinline), Type{ColorTypes.LCHab{Float32}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Color{Float64, 3}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LCHab{Float64}}})
precompile(Tuple{typeof(ColorTypes.issupported), Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Lab{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.XYZ{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Color{T, 3} where T<:AbstractFloat}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LCHab{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AbstractRGB{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB{Float64}}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.LCHab{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(ColorTypes.issupported), Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, Type{Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LMS{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.LMS{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(ColorTypes.issupported), Type{ColorTypes.LMS{T} where T<:AbstractFloat}, Type{Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LMS{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Color{Float32, 3}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LCHab{Float32}}})
precompile(Tuple{typeof(ColorTypes.issupported), Type{ColorTypes.LMS{T} where T<:AbstractFloat}, Type{Float32}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.XYZ{Float32}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Lab{Float32}}})
precompile(Tuple{typeof(Base._linspace1), Type{Float64}, Float64, Float64, Int64})
precompile(Tuple{Type{Base.TwicePrecision{Float64}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.steprangelen_hp), Type{Float64}, Tuple{Int64, Int64}, Tuple{Int64, Int64}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base.splitprec), Type{Float64}, Int128})
precompile(Tuple{typeof(Base.:(/)), Base.TwicePrecision{Float64}, Int128})
precompile(Tuple{typeof(Base.steprangelen_hp), Type{Float64}, Tuple{Int128, Int128}, Tuple{Int128, Int128}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._linspace), Type{Float64}, Int64, Int64, Int64, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.LCHab{Float32}, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.atan), Float64})
precompile(Tuple{typeof(Base.atan), Float64, Float64})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LCHab{Float64}}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Float64, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 2}, Int64, Base.Slice{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Float64, Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.:(*)), Float64, Array{Float64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(+)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.:(+)), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}})
precompile(Tuple{typeof(Colors.interpolate_table), Array{Float64, 2}, Float64, Float64, Int64})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LMS{Float64}}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(Colors.deuteranopic), ColorTypes.Lab{Float64}, Float64, ColorTypes.LMS{Float32}})
precompile(Tuple{typeof(Base.copyto!), Array{ColorTypes.LCHab{Float32}, 1}, Int64, Array{ColorTypes.LCHab{Float32}, 1}, Int64, Int64})
precompile(Tuple{typeof(Colors.deuteranopic), ColorTypes.LCHab{Float32}, Float64, ColorTypes.LMS{Float32}})
precompile(Tuple{typeof(Colors._colordiff), ColorTypes.Lab{Float64}, ColorTypes.Lab{Float64}, Colors.DE_2000})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LCHab{Float32}}, ColorTypes.Lab{Float64}})
precompile(Tuple{getfield(Colors, Symbol("##distinguishable_colors#11")), Bool, getfield(Gadfly.Scale, Symbol("#51#52")), Array{Float64, 1}, Array{Float64, 1}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, typeof(Colors.distinguishable_colors), Int64, Array{ColorTypes.LCHab{Float32}, 1}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{ColorTypes.Color{T, N} where N where T, 1}, Base.IndexLinear, Array{ColorTypes.LCHab{Float32}, 1}})
precompile(Tuple{typeof(Gadfly.Scale.default_discrete_colors), Int64})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float64}}, ColorTypes.Lab{Float64}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.RGB{Float64}}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.RGB{Float64}}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float64}}, ColorTypes.RGB{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.Lab{Float64}}, ColorTypes.XYZ{Float64}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.Lab{Float64}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, ColorTypes.RGB{Float64}})
precompile(Tuple{typeof(Base.Math.cbrt), Float64})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.LMS{Float64}}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float64}}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.Lab{Float64}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LMS{Float32}}, ColorTypes.XYZ{Float32}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.LMS{Float32}}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float32}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float32}}, ColorTypes.Lab{Float32}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.XYZ{Float32}}, Type{ColorTypes.XYZ{T} where T<:AbstractFloat}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float32}})
precompile(Tuple{typeof(Base.Math.cos_domain_error), Float32})
precompile(Tuple{typeof(Base.cos), Float32})
precompile(Tuple{typeof(Base.Math.sin_domain_error), Float32})
precompile(Tuple{typeof(Base.sin), Float32})
precompile(Tuple{typeof(Base.atan), Float32})
precompile(Tuple{typeof(Base.atan), Float32, Float32})
precompile(Tuple{typeof(Base.Math.throw_complex_domainerror), Symbol, Float32})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LCHab{Float32}}, ColorTypes.Lab{Float32}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.LCHab{Float32}}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float32}}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.Lab{Float32}}, ColorTypes.XYZ{Float32}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.Lab{Float32}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(Base.Math.sind), Float64})
precompile(Tuple{typeof(Base.Math.cosd), Float64})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AbstractRGB{Float32}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB{Float32}}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.RGB{Float32}}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{ColorTypes.RGB{Float32}, 1}, Base.IndexLinear, Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{typeof(Base.convert), Type{Array{ColorTypes.RGB{Float32}, 1}}, Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{ColorTypes.RGB{Float32}, 1}, ColorTypes.LCHab{Float32}, Int64})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.RGB{Float32}}, ColorTypes.XYZ{Float32}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.RGB{Float32}}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float32}})
precompile(Tuple{typeof(Base.Iterators.zip), Array{String, 1}, Vararg{Any, N} where N})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Scale, Symbol("#61#65")), Base.Iterators.Zip{Tuple{Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{ColorTypes.RGB{Float32}, String}, 1}, Tuple{ColorTypes.RGB{Float32}, String}, Base.Generator{Base.Iterators.Zip{Tuple{Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, getfield(Gadfly.Scale, Symbol("#61#65"))}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Zip{Tuple{Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, getfield(Gadfly.Scale, Symbol("#61#65"))}})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, String}}})
precompile(Tuple{typeof(Base.hash), ColorTypes.RGB{Float32}, UInt64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.RGB{Float32}, String}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.RGB{Float32}, String}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.RGB{Float32}, String}, String, ColorTypes.RGB{Float32}})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, String}}, Array{Tuple{ColorTypes.RGB{Float32}, String}, 1}})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Array{Tuple{ColorTypes.RGB{Float32}, String}, 1}})
precompile(Tuple{Type{Base.Iterators.Filter{F, I} where I where F}, getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Scale, Symbol("#63#68")), Base.Iterators.Filter{getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}}})
precompile(Tuple{typeof(Base.grow_to!), Array{String, 1}, Base.Generator{Base.Iterators.Filter{getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}}, getfield(Gadfly.Scale, Symbol("#63#68"))}, Int64})
precompile(Tuple{typeof(Base.grow_to!), Array{String, 1}, Base.Generator{Base.Iterators.Filter{getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}}, getfield(Gadfly.Scale, Symbol("#63#68"))}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Filter{getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}}, getfield(Gadfly.Scale, Symbol("#63#68"))}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{String, Int64}, String})
precompile(Tuple{typeof(Base.indexin), Array{String, 1}, Array{String, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.something), Tuple{Base.Broadcast.Extruded{Array{Union{Nothing, Int64}, 1}, Tuple{Bool}, Tuple{Int64}}, Int64}}, Tuple{Int64}})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{String, 1}, Array{String, 1}})
precompile(Tuple{typeof(Gadfly.Scale.discretize), Array{String, 1}, Array{String, 1}})
precompile(Tuple{typeof(Base.getproperty), IndirectArrays.IndirectArray{String, 1, Array{Int64, 1}, Array{String, 1}}, Symbol})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{ColorTypes.RGB{Float32}, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.RGB{Float32}, 1}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, Int64}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.RGB{Float32}, Int64}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.RGB{Float32}, Int64}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.get!), getfield(Base, Symbol("#243#244")){Int64}, Base.Dict{ColorTypes.RGB{Float32}, Int64}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.get), Base.Dict{ColorTypes.RGB{Float32}, Int64}, ColorTypes.RGB{Float32}, Nothing})
precompile(Tuple{typeof(Base.indexin), Array{ColorTypes.RGB{Float32}, 1}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{ColorTypes.RGB{Float32}, 1}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{ColorTypes.RGB{Float32}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(OrderedCollections.rehash!), OrderedCollections.OrderedDict{Any, Any}, Int64})
precompile(Tuple{typeof(OrderedCollections.ht_keyindex2), OrderedCollections.OrderedDict{Any, Any}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections._setindex!), OrderedCollections.OrderedDict{Any, Any}, Int64, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{Any, Any}, Int64, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections.hashindex), ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{ColorTypes.RGB{Float32}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.isequal), ColorTypes.RGB{Float32}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}, Type{Nothing}})
precompile(Tuple{typeof(Base.setindex!), Array{Nothing, 1}, Nothing, Int64})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Nothing, 1}, Nothing})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(!=)), Tuple{Array{Nothing, 1}, Base.RefValue{Nothing}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Array{Nothing, 1}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Array{Nothing, 1}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}}}})
precompile(Tuple{typeof(Base.:(==)), Nothing, WeakRef})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Array{Nothing, 1}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}}}}})
precompile(Tuple{typeof(Base.:(==)), Nothing, Array{String, 1}})
precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!), Base.BitArray{1}, Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Base.Missing, Int64, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Union{Base.Missing, Bool}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!), Array{Union{Base.Missing, Bool}, 1}, Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Base.Missing, Int64, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!), Base.BitArray{1}, Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Bool, Int64, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Gadfly.Aesthetics, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Gadfly.Aesthetics, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Gadfly.Aesthetics, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Gadfly.Aesthetics, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Gadfly.Data, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Gadfly.Data, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Gadfly.Data, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Gadfly.Data, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Gadfly.Aesthetics, 1}, Vararg{Any, N} where N})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}}}})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistics), Array{Gadfly.StatisticElement, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{Type{Core.Compiler.Signature}, Distances.Euclidean, Core.Compiler.Const, Array{Any, 1}, Type{T} where T})
precompile(Tuple{getfield(Base, Symbol("##s66#120")), Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(+)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Int64}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Grisu.fastfixedtoa), Float64, Int64, Int64, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float64, Int64, Int64, Array{UInt8, 1}, Array{Base.Grisu.Bignums.Bignum, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float64, Int64, Int64, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.Grisu._show), Base.GenericIOBuffer{Array{UInt8, 1}}, Float64, Int64, Int64, Bool, Bool})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Float64})
precompile(Tuple{typeof(Base.print_to_string), Float64})
precompile(Tuple{typeof(Base.error), String, String, String, String, String})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistic), Gadfly.Stat.SmoothStatistic, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.undefined_aesthetics), Gadfly.Aesthetics, Symbol, Vararg{Symbol, N} where N})
precompile(Tuple{typeof(Base.union!), Base.Set{Symbol}, Tuple{Symbol, Symbol}})
precompile(Tuple{Type{Base.Set{T} where T}, Tuple{Symbol, Symbol}})
precompile(Tuple{typeof(Base.filter), getfield(Gadfly, Symbol("#46#47")){Gadfly.Aesthetics}, Array{Symbol, 1}})
precompile(Tuple{typeof(Gadfly.assert_aesthetics_equal_length), String, Gadfly.Aesthetics, Symbol, Vararg{Symbol, N} where N})
precompile(Tuple{typeof(Base.length), Array{Int64, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type{T} where T, Array{Int64, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{Float64}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, Type{Float64}, Tuple{Base.Broadcast.Extruded{Array{Int64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{Float64}, Tuple{Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.:(!=)), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Nothing})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, Nothing}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.RGB{Float32}, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.RGB{Float32}, Nothing}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.RGB{Float32}, Nothing}, Nothing, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.RGB{Float32}, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.unique), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.unique), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{ColorTypes.RGB{Float32}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.copy), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.unaliascopy), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Any, Any}, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}}})
precompile(Tuple{typeof(Base._all), getfield(Base, Symbol("#240#242")), Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}}, Base.Colon})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Float64, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Int64, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Int64, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Base.BitArray{1}})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}}})
precompile(Tuple{typeof(Base.empty), Base.Dict{Any, Any}, Type{ColorTypes.RGB{Float32}}, Type{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}}, Int64})
precompile(Tuple{typeof(Base.getindex), Type{Int64}})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, Array{Int64, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, AbstractArray{T, 2} where T, AbstractArray{T, 1} where T, Distributions.Distribution{F, S} where S<:Distributions.ValueSupport where F<:Distributions.VariateForm, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Type{ColorTypes.RGB{Float32}}})
precompile(Tuple{typeof(Base._iterate), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}, Int64, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.min), Array{Float64, 1}, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.min), Base.IndexLinear, Array{Float64, 1}})
precompile(Tuple{typeof(Base.minimum), Array{Float64, 1}})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.max), Array{Float64, 1}, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.max), Base.IndexLinear, Array{Float64, 1}})
precompile(Tuple{typeof(Base.maximum), Array{Float64, 1}})
precompile(Tuple{typeof(Base.:(*)), Float64, Float64})
precompile(Tuple{typeof(Base.copy), Array{Float64, 1}})
precompile(Tuple{typeof(Base.length), Array{Float64, 1}})
precompile(Tuple{typeof(Base.argmin), Array{Float64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Float64, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Float64, 1}, Float64, Int64})
precompile(Tuple{typeof(Base.argmax), Array{Float64, 1}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Array{Float64, 1}, 1}}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Array{T, N} where N where T, 1}}})
precompile(Tuple{getfield(Base, Symbol("#throw_dmrsa#197")), Tuple{Int64, Int64}, Int64})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 2}, Base.Slice{Base.OneTo{Int64}}, Int64})
precompile(Tuple{typeof(Base.Sort.Float.nans2right!), Array{Float64, 1}, Base.Order.ForwardOrdering, Int64, Int64})
precompile(Tuple{typeof(Base.sort!), Array{Float64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Sort.Float.Left})
precompile(Tuple{typeof(Base.Sort.partition!), Array{Float64, 1}, Int64, Int64, Base.Sort.Float.Left})
precompile(Tuple{typeof(Base.sort!), Array{Float64, 1}, Int64, Int64, Base.Sort.QuickSortAlg, Base.Sort.Float.Left})
precompile(Tuple{typeof(Base.sort!), Array{Float64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Sort.Float.Right})
precompile(Tuple{typeof(Base.Sort.partition!), Array{Float64, 1}, Int64, Int64, Base.Sort.Float.Right})
precompile(Tuple{typeof(Base.sort!), Array{Float64, 1}, Int64, Int64, Base.Sort.QuickSortAlg, Base.Sort.Float.Right})
precompile(Tuple{typeof(Base.Sort.Float.fpsort!), Array{Float64, 1}, Base.Sort.QuickSortAlg, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.add_sum), Array{Float64, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Statistics._mean), Array{Float64, 1}, Base.Colon})
precompile(Tuple{typeof(Base.__subarray_throw_boundserror), Type{Base.SubArray{Float64, 1, Array{Float64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}, true}}, Array{Float64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}, Int64, Int64, Tuple{Int64}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(/)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Float64}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}})
precompile(Tuple{typeof(Loess.tnormalize!), Array{Float64, 2}, Float64})
precompile(Tuple{typeof(Distances.euclidean), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Loess.diameter), Array{Float64, 2}})
precompile(Tuple{Type{Base.Dict{Array{Float64, 1}, Nothing}}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Float64, 1}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#1#2")){Array{Float64, 2}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#1#2")){Array{Float64, 2}}}})
precompile(Tuple{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}, Int64})
precompile(Tuple{typeof(Base.Order.lt), Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}, Int64, Int64})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.PartialQuickSort{Int64}, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.__subarray_throw_boundserror), Type{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}}, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, Int64, Int64, Tuple{Int64}})
precompile(Tuple{typeof(Base.sort!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Sort.PartialQuickSort{Int64}, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.__subarray_throw_boundserror), Type{Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}}, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, Int64, Int64, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}, Int64})
precompile(Tuple{typeof(Base.Order.lt), Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}, Int64, Int64})
precompile(Tuple{typeof(Base.sort!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Sort.PartialQuickSort{Base.UnitRange{Int64}}, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.Sort.maybeview), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Loess.build_kdtree), Array{Float64, 2}, Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Float64, 2}, Int64, Float64, Base.Set{Array{Float64, 1}}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.PartialQuickSort{Base.UnitRange{Int64}}, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Loess.build_kdtree), Array{Float64, 2}, Array{Int64, 1}, Array{Float64, 2}, Int64, Float64, Base.Set{Array{Float64, 1}}})
precompile(Tuple{Type{Loess.KDTree{T} where T<:AbstractFloat}, Array{Float64, 2}, Float64, Float64})
precompile(Tuple{Type{Base.Dict{Array{Float64, 1}, Int64}}})
precompile(Tuple{typeof(Base.hash), Base.Pair{Int64, Float64}, UInt64})
precompile(Tuple{typeof(Base.hash), Array{Float64, 1}, UInt64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Array{Float64, 1}, Int64}, Int64})
precompile(Tuple{typeof(Base.isequal), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Array{Float64, 1}, Int64}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Array{Float64, 1}, Int64}, Int64, Array{Float64, 1}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#10#12")){Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#10#12")){Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.PartialQuickSort{Int64}, Base.Order.By{getfield(Loess, Symbol("#10#12")){Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#11#13")){Array{Float64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(LinearAlgebra.istril), Array{Float64, 2}, Int64})
precompile(Tuple{typeof(LinearAlgebra.istriu), Array{Float64, 2}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Float64, 2}, Base.StepRange{Int64, Int64}})
precompile(Tuple{typeof(LinearAlgebra.diag), Array{Float64, 2}, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(\)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.:(\)), LinearAlgebra.Diagonal{Float64, Array{Float64, 1}}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.copyto!), Array{Float64, 1}, Int64, Array{Float64, 1}, Int64, Int64})
precompile(Tuple{typeof(LinearAlgebra.LAPACK.trtrs!), Char, Char, Char, Array{Float64, 2}, Array{Float64, 1}})
precompile(Tuple{getfield(LinearAlgebra, Symbol("##lu!#131")), Bool, typeof(LinearAlgebra.lu!), Array{Float64, 2}, Base.Val{true}})
precompile(Tuple{typeof(LinearAlgebra.LAPACK.getrs!), Char, Array{Float64, 2}, Array{Int32, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(LinearAlgebra.LAPACK.geqp3!), Array{Float64, 2}, Array{Int32, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(LinearAlgebra.qr!), Array{Float64, 2}, Base.Val{true}})
precompile(Tuple{typeof(Base.unsafe_copyto!), Array{Float64, 2}, Int64, Array{Float64, 2}, Int64, Int64})
precompile(Tuple{typeof(LinearAlgebra.qr), Array{Float64, 2}, Base.Val{true}})
precompile(Tuple{typeof(Base.throw_setindex_mismatch), Array{Float64, 1}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 1}, Array{Float64, 1}, Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.__subarray_throw_boundserror), Type{Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}, Int64, Int64, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}})
precompile(Tuple{typeof(LinearAlgebra.LAPACK.laic1!), Int64, Array{Float64, 1}, Float64, Base.SubArray{Float64, 1, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Int64}, true}, Float64})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Float64, 2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 2}, Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(LinearAlgebra.triu!), Array{Float64, 2}, Int64})
precompile(Tuple{typeof(LinearAlgebra.LAPACK.ormqr!), Char, Char, Array{Float64, 2}, Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(LinearAlgebra.BLAS.dot), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.getindex), LinearAlgebra.QRPackedQ{Float64, Array{Float64, 2}}, Int64, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), LinearAlgebra.QRPackedQ{Float64, Array{Float64, 2}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.getproperty), LinearAlgebra.QRPivoted{Float64, Array{Float64, 2}}, Symbol})
precompile(Tuple{typeof(LinearAlgebra.LAPACK.ormqr!), Char, Char, Array{Float64, 2}, Array{Float64, 1}, Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}})
precompile(Tuple{typeof(LinearAlgebra.LAPACK.trtrs!), Char, Char, Char, Array{Float64, 2}, Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}})
precompile(Tuple{typeof(LinearAlgebra.LAPACK.ormrz!), Char, Char, Array{Float64, 2}, Array{Float64, 1}, Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}})
precompile(Tuple{typeof(Base.invperm), Array{Int32, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexCartesian, Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}, Array{Int32, 1}, Base.Slice{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.throw_setindex_mismatch), Array{Float64, 2}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 2}, Array{Float64, 2}, Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.__subarray_throw_boundserror), Type{Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}, false}}, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}, Int64, Int64, Tuple{Array{Int32, 1}, Base.Slice{Base.OneTo{Int64}}}})
precompile(Tuple{typeof(Base.__subarray_throw_boundserror), Type{Base.SubArray{Float64, 2, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, false}}, Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, Int64, Int64, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(LinearAlgebra.ldiv!), LinearAlgebra.QRPivoted{Float64, Array{Float64, 2}}, Array{Float64, 2}, Float64})
precompile(Tuple{typeof(LinearAlgebra.ldiv!), LinearAlgebra.QRPivoted{Float64, Array{Float64, 2}}, Array{Float64, 1}})
precompile(Tuple{typeof(LinearAlgebra._cut_B), Array{Float64, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 1}, Tuple{Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}})
precompile(Tuple{typeof(Base.:(\)), LinearAlgebra.QRPivoted{Float64, Array{Float64, 2}}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.:(\)), Array{Float64, 2}, Array{Float64, 1}})
precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 2}, Array{Float64, 1}, Int64, Base.Slice{Base.OneTo{Int64}}})
precompile(Tuple{getfield(Loess, Symbol("##loess#9")), Bool, Float64, Int64, typeof(Loess.loess), Array{Float64, 2}, Array{Float64, 1}})
precompile(Tuple{getfield(Loess, Symbol("#kw##loess")), NamedTuple{(:span,), Tuple{Float64}}, typeof(Loess.loess), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.Iterators.product), Array{Float64, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.getindex), Type{Float64}, Float64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Array{Float64, 1}, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Array{Float64, 1}, Nothing}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Array{Float64, 1}, Nothing}, Nothing, Array{Float64, 1}})
precompile(Tuple{typeof(Base.push!), Base.Set{Array{Float64, 1}}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{Float64, 1}}}, Tuple{Tuple{Float64, Int64}}})
precompile(Tuple{typeof(Base.isless), Float64, Float64})
precompile(Tuple{typeof(Base.:(/)), Float64, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Float64, 2}, Float64, Int64, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Array{T, N} where N where T, 1}, Array{Float64, 1}, Int64})
precompile(Tuple{Type{Loess.KDInternalNode{Float64}}, Int64, Float64, Loess.KDLeafNode, Loess.KDLeafNode})
precompile(Tuple{Type{Loess.KDInternalNode{Float64}}, Int64, Float64, Loess.KDLeafNode, Loess.KDInternalNode{Float64}})
precompile(Tuple{Type{Loess.KDInternalNode{Float64}}, Int64, Float64, Loess.KDInternalNode{Float64}, Loess.KDInternalNode{Float64}})
precompile(Tuple{typeof(Loess.predict), Loess.LoessModel{Float64}, Array{Float64, 2}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Float64, 1}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#7#8")){Array{Float64, 2}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#7#8")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Loess.bounds_verts), Array{Float64, 2}})
precompile(Tuple{typeof(Loess.traverse), Loess.KDTree{Float64}, Array{Float64, 1}})
precompile(Tuple{typeof(Loess.evalpoly), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Loess.predict), Loess.LoessModel{Float64}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.size), Array{Float64, 2}, Int64})
precompile(Tuple{typeof(Base.getproperty), Loess.KDInternalNode{Float64}, Symbol})
precompile(Tuple{typeof(Base.:(<=)), Float64, Float64})
precompile(Tuple{typeof(Base.tuple_type_cons), Type{Float64}, Type{Tuple{}}})
precompile(Tuple{typeof(Base.copyto!), Array{Tuple{Float64}, 1}, Base.Iterators.ProductIterator{Tuple{Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.collect), Base.Iterators.ProductIterator{Tuple{Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.length), Array{Tuple{Float64}, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Float64}, 1}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Array{Float64, 1}, Int64}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.getindex), Base.Dict{Array{Float64, 1}, Int64}, Array{Float64, 1}})
precompile(Tuple{typeof(Statistics.mean), Array{Float64, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float64, 1}, Float64})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(-)), Tuple{Array{Float64, 1}, Float64}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Array{Float64, 1}, Float64}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.abs2), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Array{Float64, 1}, Float64}}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.abs2), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Float64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.abs2), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Array{Float64, 1}, Float64}}}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(-)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Float64}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Array{Float64, 1}, Float64}}})
precompile(Tuple{typeof(Base.sum), Function, Array{Float64, 1}})
precompile(Tuple{typeof(Base._mapreduce_dim), Function, Function, NamedTuple{(), Tuple{}}, Array{Float64, 1}, Base.Colon})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.abs2), typeof(Base.add_sum), Array{Float64, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.abs2), typeof(Base.add_sum), Base.IndexLinear, Array{Float64, 1}})
precompile(Tuple{typeof(Base.:(/)), Array{Float64, 1}, Float64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Float64, Array{Float64, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(+)), Tuple{Float64, Array{Float64, 1}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{Float64, Array{Float64, 1}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.sqrt), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{Float64, Array{Float64, 1}}}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.sqrt), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{Float64, Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.sqrt), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{Float64, Array{Float64, 1}}}}}})
precompile(Tuple{Type{Distributions.TDist{T} where T<:Real}, Int64})
precompile(Tuple{typeof(Statistics.quantile), Distributions.TDist{Float64}, Float64})
precompile(Tuple{typeof(Base.append!), Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.append!), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.fill!), Array{ColorTypes.RGB{Float32}, 1}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.fill), ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.allocatedinline), Type{ColorTypes.RGB{Float32}}})
precompile(Tuple{typeof(Base.copyto!), Array{ColorTypes.RGB{Float32}, 1}, Int64, Array{ColorTypes.RGB{Float32}, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.append!), Array{ColorTypes.RGB{Float32}, 1}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(*)), Tuple{Float64, Array{Float64, 1}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float64, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, Array{Float64, 1}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(-)), Tuple{Array{Float64, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, Array{Float64, 1}}}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(-)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Array{Float64, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, Array{Float64, 1}}}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(+)), Tuple{Array{Float64, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, Array{Float64, 1}}}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(+)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{Array{Float64, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, Array{Float64, 1}}}}}})
precompile(Tuple{typeof(Base.fill!), Array{String, 1}, String})
precompile(Tuple{typeof(Base.fill), String, Int64})
precompile(Tuple{typeof(Base.display_error), Array{Any, 1}})
precompile(Tuple{typeof(Base.show_exception_stack), Base.IOContext{Base.PipeEndpoint}, Array{Any, 1}})
precompile(Tuple{typeof(Base.display_error), Base.PipeEndpoint, Array{Any, 1}})
precompile(Tuple{getfield(Base, Symbol("#kw##printstyled")), NamedTuple{(:bold, :color), Tuple{Bool, Symbol}}, typeof(Base.printstyled), Base.PipeEndpoint, String})
precompile(Tuple{getfield(Base, Symbol("##with_output_color#707")), Bool, typeof(Base.with_output_color), Function, Symbol, Base.PipeEndpoint, String})
precompile(Tuple{typeof(Distributed.flush_gc_msgs)})
precompile(Tuple{getfield(Distributed, Symbol("#135#136"))})
precompile(Tuple{typeof(Base.StackTraces.lookup), Ptr{Nothing}})
precompile(Tuple{typeof(Base.StackTraces.lookup), Base.InterpreterIP})
precompile(Tuple{typeof(Base.findprev), getfield(Base, Symbol("#761#762")), Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}, Int64})
precompile(Tuple{typeof(Base.scrub_repl_backtrace), Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}})
precompile(Tuple{getfield(Base, Symbol("##showerror#659")), Bool, typeof(Base.showerror), Base.IOContext{Base.PipeEndpoint}, LoadError, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}})
precompile(Tuple{getfield(Base, Symbol("#kw##showerror")), NamedTuple{(:backtrace,), Tuple{Bool}}, typeof(Base.showerror), Base.IOContext{Base.PipeEndpoint}, LoadError, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}})
precompile(Tuple{getfield(Base, Symbol("##process_backtrace#674")), Bool, typeof(Base.process_backtrace), Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}, Int64})
precompile(Tuple{typeof(Base.:(==)), WeakRef, Symbol})
precompile(Tuple{typeof(Base.show_reduced_backtrace), Base.IOContext{Base.PipeEndpoint}, Array{Any, 1}, Bool})
precompile(Tuple{typeof(Base.show_backtrace), Base.IOContext{Base.PipeEndpoint}, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}})
precompile(Tuple{getfield(Base, Symbol("##showerror#656")), Bool, typeof(Base.showerror), Base.IOContext{Base.PipeEndpoint}, LinearAlgebra.SingularException, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}})
precompile(Tuple{getfield(Base, Symbol("#kw##showerror")), NamedTuple{(:backtrace,), Tuple{Bool}}, typeof(Base.showerror), Base.IOContext{Base.PipeEndpoint}, LinearAlgebra.SingularException, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}})
precompile(Tuple{getfield(Base, Symbol("##with_output_color#707")), Bool, typeof(Base.with_output_color), Function, Symbol, Base.IOContext{Base.PipeEndpoint}})
precompile(Tuple{typeof(Base.with_output_color), Function, Symbol, Base.IOContext{Base.PipeEndpoint}})
precompile(Tuple{typeof(Base.iterate), Base.ImmutableDict{Symbol, Any}, Base.ImmutableDict{Symbol, Any}})
precompile(Tuple{typeof(Base.show_circular), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Any})
precompile(Tuple{Type{Base.IOContext{IO_t} where IO_t<:IO}, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Base.Pair{Symbol, Any}})
precompile(Tuple{typeof(Base._show_default), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Any})
precompile(Tuple{getfield(Base, Symbol("#657#658")){LinearAlgebra.SingularException}, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}})
precompile(Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Array{Any, 1}, Char, Char, Char, Bool, Int64, Int64})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Type})
precompile(Tuple{typeof(Base.sizeof), LinearAlgebra.SingularException})
precompile(Tuple{typeof(Base.convert), Type{Any}, Bool})
precompile(Tuple{typeof(Base.convert), Type{Any}, LinearAlgebra.SingularException})
precompile(Tuple{Type{Base.ImmutableDict{Symbol, Any}}, Base.ImmutableDict{Symbol, Any}, Symbol, LinearAlgebra.SingularException})
precompile(Tuple{Type{Base.ImmutableDict{Symbol, Any}}, Base.ImmutableDict{Symbol, Any}, Symbol, Type{T} where T})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Int32})
precompile(Tuple{typeof(Base.print), Base.IOContext{Base.PipeEndpoint}, String, String})
precompile(Tuple{typeof(Base.Printf.decode_hex), UInt64, Base.CodeUnits{UInt8, String}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.arg_decl_parts), Method})
precompile(Tuple{typeof(Base.join), Base.IOContext{Base.PipeEndpoint}, Array{String, 1}, String, String})
precompile(Tuple{typeof(Base.show_method_params), Base.IOContext{Base.PipeEndpoint}, Array{Any, 1}})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.PipeEndpoint}, Module})
precompile(Tuple{typeof(Base.print), Base.IOContext{Base.PipeEndpoint}, Module})
precompile(Tuple{typeof(Base.print), Base.IOContext{Base.PipeEndpoint}, String, Module})
precompile(Tuple{getfield(Base, Symbol("##show#393")), Nothing, typeof(Base.show), Base.IOContext{Base.PipeEndpoint}, Method})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.PipeEndpoint}, Core.MethodInstance})
precompile(Tuple{getfield(Base, Symbol("##show#379")), Symbol, typeof(Base.show), Base.IOContext{Base.PipeEndpoint}, Core.CodeInfo})
precompile(Tuple{typeof(Base.StackTraces.show_spec_linfo), Base.IOContext{Base.PipeEndpoint}, Base.StackTraces.StackFrame})
precompile(Tuple{getfield(Base.StackTraces, Symbol("##show#9")), Bool, typeof(Base.show), Base.IOContext{Base.PipeEndpoint}, Base.StackTraces.StackFrame})
precompile(Tuple{getfield(Base, Symbol("##show_trace_entry#673")), String, typeof(Base.show_trace_entry), Base.IOContext{Base.PipeEndpoint}, Base.StackTraces.StackFrame, Int64})
precompile(Tuple{getfield(Base, Symbol("#kw##show_trace_entry")), NamedTuple{(:prefix,), Tuple{String}}, typeof(Base.show_trace_entry), Base.IOContext{Base.PipeEndpoint}, Base.StackTraces.StackFrame, Int64})
precompile(Tuple{getfield(Base, Symbol("#kw##printstyled")), NamedTuple{(:color,), Tuple{Symbol}}, typeof(Base.printstyled), Base.IOContext{Base.PipeEndpoint}, String})
precompile(Tuple{getfield(Base, Symbol("##with_output_color#707")), Bool, typeof(Base.with_output_color), Function, Symbol, Base.IOContext{Base.PipeEndpoint}, String})
precompile(Tuple{typeof(Base.show_tuple_as_call), Base.IOContext{Base.PipeEndpoint}, Symbol, Type})
precompile(Tuple{typeof(Base.print), Base.IOContext{Base.PipeEndpoint}, String, Type{T} where T})
precompile(Tuple{typeof(Base.print), Base.IOContext{Base.PipeEndpoint}, Type})
precompile(Tuple{typeof(Base.show_sym), Base.IOContext{Base.PipeEndpoint}, String})
precompile(Tuple{getfield(Base, Symbol("##show_sym#371")), Bool, typeof(Base.show_sym), Base.IOContext{Base.PipeEndpoint}, String})
precompile(Tuple{getfield(Base, Symbol("##show_sym#371")), Bool, typeof(Base.show_sym), Base.IOContext{Base.PipeEndpoint}, Symbol})
precompile(Tuple{typeof(Base.show_type_name), Base.IOContext{Base.PipeEndpoint}, Core.TypeName})
precompile(Tuple{typeof(Base.show_datatype), Base.IOContext{Base.PipeEndpoint}, DataType})
precompile(Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.PipeEndpoint}, Array{Any, 1}, Char, Char, Char, Bool, Int64, Int64})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.PipeEndpoint}, Type})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.PipeEndpoint}, Int64})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.PipeEndpoint}, Bool})
precompile(Tuple{typeof(Base.print), Base.IOContext{Base.PipeEndpoint}, String, Int64, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.print), Base.IOContext{Base.PipeEndpoint}, String})
precompile(Tuple{typeof(Base.print), Base.IOContext{Base.PipeEndpoint}, Int64})
precompile(Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.PipeEndpoint}, Tuple{Symbol}, Char, Char, Char, Bool, Int64, Int64})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.PipeEndpoint}, Tuple{Symbol}})
precompile(Tuple{typeof(Base.show_circular), Base.IOContext{Base.PipeEndpoint}, Any})
precompile(Tuple{Type{Base.Pair{Symbol, DataType}}, Any, Any})
precompile(Tuple{Type{Base.IOContext{IO_t} where IO_t<:IO}, Base.IOContext{Base.PipeEndpoint}, Base.Pair{Symbol, DataType}})
precompile(Tuple{typeof(Base.show_unquoted_quote_expr), Base.IOContext{Base.PipeEndpoint}, Any, Int64, Int64})
precompile(Tuple{typeof(Base.print), Base.IOContext{Base.PipeEndpoint}, Symbol})
precompile(Tuple{typeof(Cairo.destroy), Cairo.CairoContext})
precompile(Tuple{typeof(Cairo.destroy), Cairo.CairoSurfaceIOStream{UInt32}})
1}})
precompile(Tuple{typeof(Base.extrema), Array{Union{Base.Missing, Float64}, 1}})
precompile(Tuple{typeof(Base.max), Float64, Float64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Float64, Float64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Float64, Float64}, Int64, Int64})
precompile(Tuple{typeof(Base.vcat), Array{Float64, 1}, Float64, Float64})
precompile(Tuple{typeof(Base.__cat), Array{Float64, 1}, Tuple{Int64}, Tuple{Bool}, Array{Float64, 1}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.setindex!), Array{Float64, 1}, Array{Float64, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.__subarray_throw_boundserror), Type{Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}}, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, Int64, Int64, Tuple{Int64}})
precompile(Tuple{typeof(Base.fill!), Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Float64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float64, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}}})
precompile(Tuple{typeof(Base._extrema_itr), typeof(Base.identity), Array{Float64, 1}})
precompile(Tuple{typeof(Base.extrema), Array{Float64, 1}})
precompile(Tuple{typeof(Gadfly.concrete_length), Array{Float64, 1}})
precompile(Tuple{typeof(Base.promote), Int64, Float64})
precompile(Tuple{typeof(Gadfly.bounding_order_of_magnitude), Float64})
precompile(Tuple{typeof(Gadfly.optimize_ticks_typed), Float64, Float64, Bool, Array{Tuple{Float64, Float64}, 1}, Int64, Int64, Int64, Float64, Float64, Float64, Float64, Bool})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##optimize_ticks")), NamedTuple{(:extend_ticks, :granularity_weight, :simplicity_weight, :coverage_weight, :niceness_weight, :strict_span), Tuple{Bool, Float64, Float64, Float64, Float64, Bool}}, typeof(Gadfly.optimize_ticks), Float64, Float64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Array{Float64, 1}, Float64})
precompile(Tuple{getfield(Gadfly, Symbol("##multilevel_ticks#30")), Array{Float64, 1}, typeof(Gadfly.multilevel_ticks), Float64, Float64})
precompile(Tuple{typeof(Gadfly.multilevel_ticks), Float64, Float64})
precompile(Tuple{typeof(Base._array_for), Type{Int64}, Base.ValueIterator{Base.Dict{Any, Any}}, Base.HasLength})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.ValueIterator{Base.Dict{Any, Any}}, typeof(Base.length)}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Base.ValueIterator{Base.Dict{Any, Any}}, typeof(Base.length)}, Int64})
precompile(Tuple{typeof(Base.sum), Array{Int64, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Float64, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{Bool, 1}, Bool, Int64})
precompile(Tuple{typeof(Base.iterate), Array{Float64, 1}, Int64})
precompile(Tuple{typeof(Base.convert), Type{Any}, Float64})
precompile(Tuple{typeof(Base.convert), Type{Any}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.push!), Array{Float64, 1}, Float64})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistic), Gadfly.Stat.Identity, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.:(!=)), Array{Int64, 1}, Nothing})
precompile(Tuple{typeof(Base.vcat), Array{Int64, 1}, Base.Missing, Base.Missing})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Union{Base.Missing, Int64}, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.__cat), Array{Union{Base.Missing, Int64}, 1}, Tuple{Int64}, Tuple{Bool}, Array{Int64, 1}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.cat_indices), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.cat_size), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.throw_setindex_mismatch), Array{Int64, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.setindex!), Array{Union{Base.Missing, Int64}, 1}, Array{Int64, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.__subarray_throw_boundserror), Type{Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}}, Array{Union{Base.Missing, Int64}, 1}, Tuple{Base.UnitRange{Int64}}, Int64, Int64, Tuple{Int64}})
precompile(Tuple{typeof(Base.fill!), Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.Missing})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.isconcrete), Tuple{Array{Union{Base.Missing, Int64}, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Union{Base.Missing, Int64}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Union{Base.Missing, Int64}, 1}}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Union{Base.Missing, Int64}, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Union{Base.Missing, Int64}, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, Int64}, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base._extrema_itr), typeof(Base.identity), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.extrema), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.max), Int64, Int64})
precompile(Tuple{typeof(Gadfly.concrete_length), Array{Int64, 1}})
precompile(Tuple{typeof(Base.promote), Int64, Int64})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##optimize_ticks")), NamedTuple{(:extend_ticks, :granularity_weight, :simplicity_weight, :coverage_weight, :niceness_weight, :strict_span), Tuple{Bool, Float64, Float64, Float64, Float64, Bool}}, typeof(Gadfly.optimize_ticks), Int64, Int64})
precompile(Tuple{typeof(Base.vect), Gadfly.Aesthetics, Vararg{Gadfly.Aesthetics, N} where N})
precompile(Tuple{typeof(Base._array_for), Type{Bool}, Array{Gadfly.Aesthetics, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.copyto!), Array{Union{Base.Missing, Bool}, 1}, Int64, Array{Bool, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Bool, 1}, Int64, Array{Bool, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Array{Gadfly.Aesthetics, 1}, getfield(Gadfly, Symbol("#93#106")){Symbol}}, Int64, Int64})
precompile(Tuple{typeof(Base.all), Array{Bool, 1}})
precompile(Tuple{Type{Gadfly.Guide.ColorKey}})
precompile(Tuple{typeof(Base.push!), Array{Gadfly.GuideElement, 1}, Gadfly.Guide.ColorKey})
precompile(Tuple{typeof(Gadfly.render_prepared), Gadfly.Plot, Gadfly.Coord.Cartesian, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Array{Gadfly.GuideElement, 1}})
precompile(Tuple{typeof(Gadfly.Coord.aesthetics_type), Array{Gadfly.Aesthetics, 1}, Array{Symbol, 1}})
precompile(Tuple{typeof(Gadfly.Coord.first_concrete_aesthetic_value), Array{Gadfly.Aesthetics, 1}, Array{Symbol, 1}})
precompile(Tuple{typeof(Gadfly.Coord.apply_coordinate), Gadfly.Coord.Cartesian, Array{Gadfly.Aesthetics, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}})
precompile(Tuple{typeof(Base.setindex!), Array{Gadfly.Theme, 1}, Nothing, Int64})
precompile(Tuple{typeof(Base.error), String, Symbol})
precompile(Tuple{typeof(Gadfly.get_stroke_vector), Symbol})
precompile(Tuple{typeof(Gadfly.jsplotdata), String, String, Array{Measures.Measure, 1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#33#42"))}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#34#43"))}})
precompile(Tuple{typeof(Base.getproperty), Gadfly.Guide.XTicks, Symbol})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.XTicks, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#52#61"))}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#53#62"))}})
precompile(Tuple{typeof(Base.getproperty), Gadfly.Guide.YTicks, Symbol})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.YTicks, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}, getfield(Gadfly, Symbol("#19#20")){Int64}}})
precompile(Tuple{getfield(Gadfly, Symbol("##render_prepared#107")), Bool, Bool, typeof(Gadfly.render_prepared), Gadfly.Plot, Gadfly.Coord.Cartesian, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Array{Gadfly.GuideElement, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Gadfly.Aesthetics, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.__cat), Array{Gadfly.Aesthetics, 1}, Tuple{Int64}, Tuple{Bool}, Gadfly.Aesthetics, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.__subarray_throw_boundserror), Type{Base.SubArray{Gadfly.Aesthetics, 1, Array{Gadfly.Aesthetics, 1}, Tuple{Base.UnitRange{Int64}}, true}}, Array{Gadfly.Aesthetics, 1}, Tuple{Base.UnitRange{Int64}}, Int64, Int64, Tuple{Int64}})
precompile(Tuple{typeof(Base.fill!), Base.SubArray{Gadfly.Aesthetics, 1, Array{Gadfly.Aesthetics, 1}, Tuple{Base.UnitRange{Int64}}, true}, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.cat_indices), Array{Gadfly.Aesthetics, 1}, Int64})
precompile(Tuple{typeof(Base.cat_size), Array{Gadfly.Aesthetics, 1}, Int64})
precompile(Tuple{typeof(Base.throw_setindex_mismatch), Array{Gadfly.Aesthetics, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.setindex!), Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Aesthetics, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.iterate), Array{Int64, 1}})
precompile(Tuple{typeof(Base.:(!=)), Int64, Nothing})
precompile(Tuple{typeof(Gadfly.concrete_minmax), Array{Int64, 1}, Int64, Int64})
precompile(Tuple{typeof(Gadfly.isconcrete), Float64})
precompile(Tuple{typeof(Gadfly.concrete_minmax), Array{Float64, 1}, Float64, Float64})
precompile(Tuple{typeof(Base.max), Int64, Float64})
precompile(Tuple{typeof(Base.min), Int64, Float64})
precompile(Tuple{typeof(Base.:(-)), Float64, Int64})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:leftpad, :rightpad, :toppad, :bottompad), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Compose.UnitBox{S, T, U, V} where V where U where T where S}, Int64, Float64, Float64, Float64})
precompile(Tuple{Type{NamedTuple{(:units, :raster), T} where T<:Tuple}, Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Bool}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:units, :raster), Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Bool}}, typeof(Compose.context)})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}, Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}}})
precompile(Tuple{typeof(Base.maximum), Nothing})
precompile(Tuple{getfield(Gadfly.Geom, Symbol("#143#157")), Gadfly.Layer})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Gadfly.StatisticElement, 1}, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly.Geom, Symbol("#143#157"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly.Geom, Symbol("#143#157"))}})
precompile(Tuple{typeof(Base.union!), Base.Set{Symbol}, Array{Any, 1}})
precompile(Tuple{getfield(Gadfly, Symbol("##inherit!#52")), Array{Any, 1}, typeof(Gadfly.inherit!), Gadfly.Aesthetics, Gadfly.Aesthetics})
precompile(Tuple{Type{Gadfly.Aesthetics}, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.copyto!), Array{Gadfly.ScaleElement, 1}, Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##render_prepared")), NamedTuple{(:table_only,), Tuple{Bool}}, typeof(Gadfly.render_prepared), Gadfly.Plot, Gadfly.Coord.Cartesian, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Array{Gadfly.GuideElement, 1}})
precompile(Tuple{typeof(Compose.pad_outer), Compose.Context, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.Context, 1}, Compose.Context, Base.Generator{Array{Compose.Context, 1}, getfield(Compose, Symbol("#126#127")){Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{typeof(Base._collect), Array{Compose.Context, 1}, Base.Generator{Array{Compose.Context, 1}, getfield(Compose, Symbol("#126#127")){Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Geom.SubplotGrid, Gadfly.Theme, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}})
precompile(Tuple{getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}, Tuple{Gadfly.Layer, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}, Gadfly.Theme}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.Context, 1}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}}, getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}}, Int64, Tuple{Int64, Int64, Int64, Int64, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}}, getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB24}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.ColorAlpha{ColorTypes.HSL{T}, T, 4} where T<:AbstractFloat}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.HSLA{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Geom.LineGeometry, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Geom.LineGeometry, Gadfly.Theme, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}})
precompile(Tuple{typeof(Base.length), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.length), IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.fill), Int64, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{UInt8, 1}, Nothing, Int64})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{UInt8, 1}, Base.IndexLinear, Array{Union{Nothing, Int64}, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Int64, 1}, Tuple{Array{UInt8, 1}}})
precompile(Tuple{Type{IndirectArrays.IndirectArray{UInt8, N, A, V} where V<:AbstractArray{UInt8, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N}, Array{Int64, 1}})
precompile(Tuple{Type{IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.fill!), Array{ColorTypes.LCHab{Float32}, 1}, ColorTypes.LCHab{Float32}})
precompile(Tuple{typeof(Base.fill), ColorTypes.LCHab{Float32}, Int64})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, Array{ColorTypes.LCHab{Float32}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, Array{ColorTypes.LCHab{Float32}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, Array{Int64, 1}})
precompile(Tuple{getfield(Gadfly, Symbol("##Aesthetics#45")), Array{Int64, 1}, Array{Float64, 1}, Nothing, Nothing, Nothing, Nothing, Nothing, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Nothing, IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Nothing, Nothing, Nothing, Nothing, Array{Float64, 1}, Array{Float64, 1}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, OrderedCollections.OrderedDict{Any, Any}, String, Nothing, Nothing, Base.Dict{Symbol, AbstractString}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(Gadfly.Scale.identity_formatter), typeof(Gadfly.Scale.identity_formatter), typeof(Showoff.showoff), typeof(Showoff.showoff), getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, typeof(Showoff.showoff), typeof(Showoff.showoff), typeof(Showoff.showoff), typeof(Showoff.showoff), Base.Missing, Base.Missing, Type{Gadfly.Aesthetics}, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.:(==)), Array{Int64, 1}, Function})
precompile(Tuple{typeof(Base.:(==)), Array{Float64, 1}, Function})
precompile(Tuple{typeof(Base.:(==)), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Function})
precompile(Tuple{typeof(Base.:(==)), IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Function})
precompile(Tuple{typeof(Base.:(==)), OrderedCollections.OrderedDict{Any, Any}, Function})
precompile(Tuple{typeof(Base.:(==)), String, Function})
precompile(Tuple{typeof(Base.:(==)), Base.Dict{Symbol, AbstractString}, Function})
precompile(Tuple{typeof(Base.:(==)), Function, Function})
precompile(Tuple{typeof(Base.sortperm), Array{Int64, 1}})
precompile(Tuple{getfield(Base.Sort, Symbol("##sortperm#11")), Base.Sort.QuickSortAlg, Function, Function, Nothing, Base.Order.ForwardOrdering, typeof(Base.sortperm), Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 1}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), Array{Float64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Int64, 1}, Tuple{UInt8}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{UInt8, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, IndirectArrays.IndirectArray{Int64, 1, Array{UInt8, 1}, Array{Int64, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), IndirectArrays.IndirectArray{Int64, 1, Array{UInt8, 1}, Array{Int64, 1}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), IndirectArrays.IndirectArray{Int64, 1, Array{UInt8, 1}, Array{Int64, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.vect), Array{Int64, 1}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.promote_typeof), Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.promote_typeof), Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.promote_type), Type{Array{Int64, 1}}, Type{Array{T, 1} where T}})
precompile(Tuple{Type{Array{Array{T, 1} where T, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Array{T, 1} where T, 1}, Tuple{Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Geom, Symbol("#131#132")), Array{Array{T, 1} where T, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Array{T, 1} where T, 1}, getfield(Gadfly.Geom, Symbol("#131#132"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{T, 1} where T, 1}, getfield(Gadfly.Geom, Symbol("#131#132"))}})
precompile(Tuple{typeof(Base.argmax), Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Array{T, 1} where T, 1}, Int64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Int64, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.isconcrete), Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Int64, 1}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Int64, 1}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Int64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Int64, 1}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.BitArray{1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(!)), Tuple{Base.BitArray{1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!)), Tuple{Base.BitArray{1}}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{ColorTypes.RGB{Float32}, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.RGB{Float32}, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.RGB{Float32}, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.unique), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.length), Base.BitArray{1}})
precompile(Tuple{typeof(Base.zeros), Type{Int64}, Int64})
precompile(Tuple{typeof(Base.iterate), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Int64, 1}, Vararg{Any, N} where N})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.copyto!), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Base.Iterators.Zip{Tuple{Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.collect), Type{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}}, Base.Iterators.Zip{Tuple{Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}, Array{Int64, 1}}}})
precompile(Tuple{Type{Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}}})
precompile(Tuple{typeof(Base.hash), Tuple{Int64, Int64}, UInt64})
precompile(Tuple{typeof(Base.hash), Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, UInt64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}, Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}, Nothing, Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}, Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}})
precompile(Tuple{typeof(Base.unique), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{typeof(Base.unique), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{typeof(Base.length), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{Type{Array{Array{Tuple{Int64, Float64}, 1}, 1}}, UndefInitializer, Int64})
precompile(Tuple{Type{Array{ColorTypes.RGB{Float32}, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.vect), Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Extruded{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Array{Float64, 1}}})
precompile(Tuple{typeof(Base.copyto!), Array{Tuple{Int64, Float64}, 1}, Base.Iterators.Zip{Tuple{Array{Int64, 1}, Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.collect), Type{Tuple{Int64, Float64}}, Base.Iterators.Zip{Tuple{Array{Int64, 1}, Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.setindex!), Array{Array{Tuple{Int64, Float64}, 1}, 1}, Array{Tuple{Int64, Float64}, 1}, Int64})
precompile(Tuple{typeof(Base.first), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{ColorTypes.RGB{Float32}, 1}, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.first), Array{Int64, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Symbol, 1}, Array{Int64, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.get_stroke_vector), Tuple{Array{Symbol, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.get_stroke_vector), Tuple{Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.get_stroke_vector), Tuple{Array{Symbol, 1}}}})
precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.get_stroke_vector), Tuple{Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{Array{Any, 1}}})
precompile(Tuple{typeof(Base.setindex!), Array{Array{Any, 1}, 1}, Array{Any, 1}, Int64})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Any, 1}, Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!), Array{Array{Any, 1}, 1}, Array{Array{Any, 1}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.get_stroke_vector), Tuple{Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Array{Any, 1}, Int64, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Array{Any, 1}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.get_stroke_vector), Tuple{Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.getindex), Base.Dict{ColorTypes.RGB{Float32}, String}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}}})
precompile(Tuple{getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{String, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.svg_color_class_from_label), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Gadfly.svg_color_class_from_label), String})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.svg_color_class_from_label), Tuple{Base.Broadcast.Extruded{Array{String, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.svg_color_class_from_label), Tuple{Array{String, 1}}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Array{Tuple{Int64, Float64}, 1}, 1}, getfield(Compose, Symbol("#1#2"))}, Int64})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Int64, Float64}, 1}, 1}, Symbol})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.StrokePrimitive, 1}, Compose.StrokePrimitive, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Compose, Symbol("#42#43"))}, Int64})
precompile(Tuple{typeof(Compose.stroke), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Measures.Measure, 1}, Base.IndexLinear, Array{Any, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.StrokeDashPrimitive, 1}, Base.Generator{Array{Array{Any, 1}, 1}, getfield(Compose, Symbol("#46#47"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{Any, 1}, 1}, getfield(Compose, Symbol("#46#47"))}})
precompile(Tuple{typeof(Compose.strokedash), Array{Array{Any, 1}, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGClassPrimitive, 1}, Compose.SVGClassPrimitive, Base.Generator{Array{String, 1}, Type{Compose.SVGClassPrimitive}}, Int64})
precompile(Tuple{typeof(Compose.svgclass), Array{String, 1}})
precompile(Tuple{typeof(Compose.compose), Compose.Context, Compose.Context})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Nothing, Nothing, Nothing, Nothing, Compose.ListNull{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Nothing, Float64, Symbol})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Context})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.PanelBackground, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.PanelBackground, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.:(!=)), Array{Gadfly.Guide.PositionedGuide, 1}, Nothing})
precompile(Tuple{typeof(Base.copyto!), Array{Any, 1}, Int64, Array{Gadfly.Guide.PositionedGuide, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.append!), Array{Any, 1}, Array{Gadfly.Guide.PositionedGuide, 1}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.Lab{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Lab{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.QuestionMark, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.QuestionMark, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.fill), ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.SVGClassPrimitive}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.SVGClassPrimitive}, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Base.rat), Float64})
precompile(Tuple{typeof(Base.lcm_unchecked), Int64, Int64})
precompile(Tuple{typeof(Base.floatrange), Type{Float64}, Int64, Int64, Int64, Int64})
precompile(Tuple{Base.Colon, Float64, Float64, Float64})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.HelpScreen, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.HelpScreen, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{getfield(Colors, Symbol("##distinguishable_colors#11")), Bool, typeof(Base.identity), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, typeof(Colors.distinguishable_colors), Int64, Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}})
precompile(Tuple{getfield(Colors, Symbol("##distinguishable_colors#12")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Colors.distinguishable_colors), Int64, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Colors.distinguishable_colors), Int64, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Base.allocatedinline), Type{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}}})
precompile(Tuple{typeof(Base.copyto!), Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, Int64, Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, Int64, Int64})
precompile(Tuple{typeof(Colors.invert_srgb_compand), FixedPointNumbers.Normed{UInt8, 8}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float64}}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.Lab{Float64}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{AbstractString, AbstractString}, String})
precompile(Tuple{typeof(Base.rstrip), Base.Fix2{typeof(Base.in), Array{Char, 1}}, Base.SubString{String}})
precompile(Tuple{typeof(Base.lstrip), Base.Fix2{typeof(Base.in), Array{Char, 1}}, Base.SubString{String}})
precompile(Tuple{getfield(Compose, Symbol("#112#113")), Base.SubString{String}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{Base.SubString{String}, 1}, getfield(Compose, Symbol("#112#113"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Base.SubString{String}, 1}, getfield(Compose, Symbol("#112#113"))}})
precompile(Tuple{typeof(Base.fill!), Array{UInt64, 2}, UInt64})
precompile(Tuple{typeof(Base.throw_boundserror), Array{UInt64, 2}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{UInt64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}})
precompile(Tuple{typeof(Compose.levenshtein), String, String})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{AbstractString, AbstractString}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{AbstractString, AbstractString}, String})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, AbstractString}, String, String})
precompile(Tuple{typeof(Compose.match_font), String})
precompile(Tuple{typeof(Compose.max_text_extents), String, Measures.Length{:mm, Float64}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Base.getindex), Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Compose.text_width), Base.Dict{String, Any}, Base.SubString{String}, Float64})
precompile(Tuple{typeof(Base.:(+)), Int64, Float64})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}, Float64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.:(+)), Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Base.Generator{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Base.Generator{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{getfield(Compose, Symbol("##text#27")), Symbol, typeof(Compose.text), Array{Measures.Length{:w, Float64}, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{String, 1}, Array{Compose.HCenter, 1}, Array{Compose.VCenter, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Measures.Length{:w, Float64}, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{String, 1}, Array{Compose.HCenter, 1}, Array{Compose.VCenter, 1}})
precompile(Tuple{typeof(Base.:(/)), Measures.Length{:mm, Float64}, Int64})
precompile(Tuple{typeof(Base.:(*)), Measures.Length{:mm, Float64}, Float64})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(*)), Measures.Length{:mm, Float64}, Int64})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.rectangle), Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Tuple{Compose.Context, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.Property{Compose.FontPrimitive}, Compose.Property{Compose.FontSizePrimitive}, Compose.Property{Compose.FillPrimitive}}, Tuple{Compose.Context, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.Property{Compose.FillPrimitive}}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.CrossHair, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.CrossHair, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Gadfly.issomething), Array{Float64, 1}})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Float64, 1}, Vararg{Array{Float64, 1}, N} where N})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Float64, 1}, Array{Float64, 1}}})
precompile(Tuple{typeof(IterTools.groupby), getfield(Gadfly.Guide, Symbol("#30#39")), Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.tuple_type_cons), Type{Float64}, Type{Tuple{Float64}}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#30#39"))}, Nothing})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#30#39"))}})
precompile(Tuple{typeof(Base._array_for), Type{Float64}, Array{Tuple{Float64, Float64}, 1}, Base.HasShape{1}})
precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Float64, Float64}, 1}, Int64})
precompile(Tuple{typeof(Showoff.concrete_minimum), Array{Float64, 1}})
precompile(Tuple{typeof(Showoff.concrete_maximum), Array{Float64, 1}})
precompile(Tuple{typeof(Base.filter), typeof(Base.isfinite), Array{Float64, 1}})
precompile(Tuple{typeof(Base.oftype), UInt32, Int64})
precompile(Tuple{typeof(Base.Grisu.normalizedbound), Float32})
precompile(Tuple{typeof(Base.Grisu.fastshortest), Float32, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.Grisu.init3!), UInt32, Int32, Int64, Bool, Base.Grisu.Bignums.Bignum, Base.Grisu.Bignums.Bignum, Base.Grisu.Bignums.Bignum, Base.Grisu.Bignums.Bignum})
precompile(Tuple{typeof(Base.Grisu.init1!), UInt32, Int32, Int64, Bool, Base.Grisu.Bignums.Bignum, Base.Grisu.Bignums.Bignum, Base.Grisu.Bignums.Bignum, Base.Grisu.Bignums.Bignum})
precompile(Tuple{typeof(Base.Grisu.init2!), UInt32, Int32, Int64, Bool, Base.Grisu.Bignums.Bignum, Base.Grisu.Bignums.Bignum, Base.Grisu.Bignums.Bignum, Base.Grisu.Bignums.Bignum})
precompile(Tuple{typeof(Base.Grisu.initialscaledstartvalues!), UInt32, Int32, Bool, Int64, Bool, Base.Grisu.Bignums.Bignum, Base.Grisu.Bignums.Bignum, Base.Grisu.Bignums.Bignum, Base.Grisu.Bignums.Bignum})
precompile(Tuple{typeof(Base.Grisu.bignumdtoa), Float32, Int64, Int64, Array{UInt8, 1}, Array{Base.Grisu.Bignums.Bignum, 1}})
precompile(Tuple{typeof(Base.Grisu.fastfixedtoa), Float32, Int64, Int64, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.Grisu.fastprecision), Float32, Int64, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float32, Int64, Int64, Array{UInt8, 1}, Array{Base.Grisu.Bignums.Bignum, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float32, Int64, Int64})
precompile(Tuple{typeof(Showoff.plain_precision_heuristic), Array{Float64, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float64, Int64, Int64})
precompile(Tuple{typeof(Showoff.format_fixed), Float64, Int64})
precompile(Tuple{getfield(Showoff, Symbol("#1#2")), Float64})
precompile(Tuple{typeof(Base.grow_to!), Array{Float64, 1}, Base.Generator{Base.Iterators.Filter{typeof(Base.isfinite), Array{Float64, 1}}, getfield(Showoff, Symbol("#1#2"))}, Int64})
precompile(Tuple{typeof(Base.grow_to!), Array{Float64, 1}, Base.Generator{Base.Iterators.Filter{typeof(Base.isfinite), Array{Float64, 1}}, getfield(Showoff, Symbol("#1#2"))}})
precompile(Tuple{typeof(Showoff.format_fixed_scientific), Float64, Int64, Bool})
precompile(Tuple{typeof(Showoff.showoff), Array{Float64, 1}, Symbol})
precompile(Tuple{typeof(Gadfly.Scale.identity_formatter), Array{Float64, 1}})
precompile(Tuple{typeof(Base.copyto!), Array{AbstractString, 1}, Int64, Array{String, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.append!), Array{AbstractString, 1}, Array{String, 1}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#30#39"))}, Tuple{Bool, Float64, Tuple{Float64, Float64}, Tuple{Int64, Int64}}})
precompile(Tuple{typeof(Base.sum), Array{Bool, 1}})
precompile(Tuple{typeof(Gadfly.get_stroke_vector), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 1}, Base.LogicalIndex{Int64, Array{Bool, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 1}, Tuple{Base.LogicalIndex{Int64, Array{Bool, 1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Float64, 1}, Array{Bool, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#31#40")), Array{Float64, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}, Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#31#40"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#31#40"))}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}, getfield(Compose, Symbol("#1#2"))}, Int64})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}, Symbol})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}})
precompile(Tuple{typeof(Compose.stroke), ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Measures.Measure, 1}, Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Compose.strokedash), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#32#41")), Array{Float64, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}, Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#32#41"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#32#41"))}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.VisiblePrimitive, 1}, Compose.VisiblePrimitive, Base.Generator{Array{Bool, 1}, Type{Compose.VisiblePrimitive}}, Int64})
precompile(Tuple{typeof(Compose.visible), Array{Bool, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGAttributePrimitive, 1}, Compose.SVGAttributePrimitive, Base.Generator{Array{Float64, 1}, getfield(Compose, Symbol("#50#51")){String}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Compose, Symbol("#50#51")){String}}})
precompile(Tuple{typeof(Compose.svgattribute), String, Array{Float64, 1}})
precompile(Tuple{typeof(Base.Printf.decode_hex), Int64, Base.CodeUnits{UInt8, String}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.hex), ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Compose.text_extents), String, Measures.Length{:mm, Float64}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.split), String, String})
precompile(Tuple{typeof(Base.match), Base.Regex, String})
precompile(Tuple{typeof(Base.afoldl), typeof(Base.:(*)), Float64, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Length{:mm, Float64}}, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#33#42"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#33#42"))}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#34#43"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#34#43"))}, Int64})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Measures.Length{:mm, Float64}, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}, Base.LogicalIndex{Int64, Array{Bool, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Measures.Length{:mm, Float64}, 1}, Tuple{Base.LogicalIndex{Int64, Array{Bool, 1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Measures.Length{:mm, Float64}, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.add_sum), Array{Measures.Length{:mm, Float64}, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.add_sum), Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.sum), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.add_sum), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Measures.Length{:mm, Float64}, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.max), Array{Measures.Length{:mm, Float64}, 1}, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.max), Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.maximum), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.max), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(+)), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, typeof(Compose.context)})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight, :penalty), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Int64}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight, :penalty), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Int64}}, typeof(Compose.context)})
precompile(Tuple{typeof(IterTools.groupby), getfield(Gadfly.Guide, Symbol("#49#58")), Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#49#58"))}, Nothing})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#49#58"))}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#49#58"))}, Tuple{Bool, Float64, Tuple{Float64, Float64}, Tuple{Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#50#59")), Array{Float64, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}, Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#50#59"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#50#59"))}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}, getfield(Compose, Symbol("#1#2"))}, Int64})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}, Symbol})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#51#60")), Array{Float64, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}, Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#51#60"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#51#60"))}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Context, Compose.Context})
precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#52#61"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#52#61"))}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#53#62"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#53#62"))}, Int64})
precompile(Tuple{typeof(Base.vect), Compose.Context})
precompile(Tuple{typeof(Base.getproperty), Gadfly.Guide.XLabel, Symbol})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.XLabel, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.XLabel, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.getproperty), Gadfly.Guide.YLabel, Symbol})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.YLabel, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.YLabel, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{Type{Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}}})
precompile(Tuple{Type{Base.Dict{AbstractString, Nothing}}})
precompile(Tuple{typeof(OrderedCollections.rehash!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Int64})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Int64})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.ColorKey, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.ColorKey, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.isempty), OrderedCollections.OrderedDict{Any, Any}})
precompile(Tuple{typeof(Base.:(!=)), OrderedCollections.OrderedDict{Any, Any}, Nothing})
precompile(Tuple{typeof(Base.keys), OrderedCollections.OrderedDict{Any, Any}})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{Any, Any}})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{Any, Any}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}}})
precompile(Tuple{getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.Iterators.zip), Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, Vararg{Any, N} where N})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, Array{String, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, Array{String, 1}}}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{ColorTypes.RGB{Float32}, String}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{ColorTypes.RGB{Float32}, String}, Int64, Int64})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.in), ColorTypes.RGB{Float32}, Base.Set{ColorTypes.Color{T, N} where N where T}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}, Nothing, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.push!), Base.Set{ColorTypes.Color{T, N} where N where T}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.push!), Array{ColorTypes.Color{T, N} where N where T, 1}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections.ht_keyindex2), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections._setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Base.Set{AbstractString}, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Base.Set{AbstractString}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections.ht_keyindex), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, ColorTypes.RGB{Float32}, Bool})
precompile(Tuple{typeof(Base.getindex), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{AbstractString, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{AbstractString, Nothing}, String})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, Nothing}, Nothing, String})
precompile(Tuple{typeof(Base.push!), Base.Set{AbstractString}, String})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, Array{String, 1}}}, Tuple{Int64, Int64}})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, Base.Set{AbstractString}})
precompile(Tuple{getfield(Base, Symbol("##sprint#339")), Nothing, Int64, typeof(Base.sprint), Function, Base.Set{AbstractString}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.join), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.Set{AbstractString}, String})
precompile(Tuple{typeof(OrderedCollections.rehash!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, Int64})
precompile(Tuple{typeof(OrderedCollections.ht_keyindex2), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections._setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, String, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, String, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Gadfly.Guide.render_key_title), String, Gadfly.Theme})
precompile(Tuple{typeof(Compose.text), Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}, String, Compose.HLeft, Compose.VBottom})
precompile(Tuple{typeof(Compose.context), Measures.Length{:w, Float64}, Measures.Length{:h, Float64}, Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#4#11"))}})
precompile(Tuple{typeof(Gadfly.Guide.render_discrete_color_key), Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}})
precompile(Tuple{typeof(Base.iterate), Base.ValueIterator{OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}}})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, String})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.ValueIterator{OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}}, Int64})
precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{String, String, String, String, String, String, String}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#4#11"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#4#11"))}, Int64})
precompile(Tuple{typeof(Base.map), Function, Base.UnitRange{Int64}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.add_sum), Array{Measures.Measure, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.add_sum), Base.IndexLinear, Array{Measures.Measure, 1}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.Context, 1}, Compose.Context, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_similar), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.ceil), Type{Int64}, Float64})
precompile(Tuple{typeof(Base.allocatedinline), Type{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Base.UnitRange{Int64}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#5#13")), Array{Tuple{Measures.Measure, Measures.Measure}, 1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#5#13"))}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#5#13"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#5#13"))}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Measures.Measure, 1}, Measures.Length{:mm, Float64}, Int64})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight, :units), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Compose.UnitBox{Float64, Float64, Float64, Float64}}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight, :units), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Compose.UnitBox{Float64, Float64, Float64, Float64}}}, typeof(Compose.context)})
precompile(Tuple{Type{Gadfly.Guide.PositionedGuide}, Array{Compose.Context, 1}, Int64, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{typeof(Base.iterate), DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}})
precompile(Tuple{typeof(Base.:(==)), WeakRef, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.iterate), DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.BottomGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.OverGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.UnderGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.RightGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.LeftGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.BottomGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.BottomGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.TopGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.:(==)), WeakRef, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Gadfly.Guide.layout_guides), Compose.Context, Gadfly.Coord.Cartesian, Gadfly.Theme, Gadfly.Guide.PositionedGuide, Vararg{Gadfly.Guide.PositionedGuide, N} where N})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{typeof(Base.push!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Tuple{Array{Compose.Context, 1}, Int64}})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guide.BottomGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.RightGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.RightGuidePosition, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Gadfly.Guide, Symbol("#83#88"))}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.By{getfield(Gadfly.Guide, Symbol("#83#88"))}, Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{getfield(Base, Symbol("#kw##sort!")), NamedTuple{(:by,), Tuple{getfield(Gadfly.Guide, Symbol("#83#88"))}}, typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.BottomGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.BottomGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.BottomGuidePosition, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.UnderGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.UnderGuidePosition, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.OverGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.OverGuidePosition, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.LeftGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Gadfly.Guide, Symbol("#82#87"))}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.By{getfield(Gadfly.Guide, Symbol("#82#87"))}, Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{getfield(Base, Symbol("#kw##sort!")), NamedTuple{(:by,), Tuple{getfield(Gadfly.Guide, Symbol("#82#87"))}}, typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.isequal), Gadfly.Guide.TopGuidePosition, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{typeof(Base.length), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.isequal), Gadfly.Guide.TopGuidePosition, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{Type{NamedTuple{(:units, :aspect_ratio), T} where T<:Tuple}, Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Nothing}})
precompile(Tuple{getfield(Compose, Symbol("##Table#55")), Nothing, Nothing, Nothing, Compose.UnitBox{Int64, Float64, Float64, Float64}, Int64, Bool, Bool, Array{Any, 1}, Type{Compose.Table}, Int64, Int64, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:units, :aspect_ratio), Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Nothing}}, Type{Compose.Table}, Int64, Int64, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.iterate), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{Compose.Context, 1}, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{Compose.Context, 1}, Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.iterate), Array{Compose.Context, 1}})
precompile(Tuple{typeof(Base.getproperty), Compose.Context, Symbol})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:toppad, :bottompad), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Compose.UnitBox{S, T, U, V} where V where U where T where S}, Compose.UnitBox{Int64, Float64, Float64, Float64}})
precompile(Tuple{typeof(Base.setproperty!), Compose.Context, Symbol, Compose.UnitBox{Int64, Float64, Float64, Float64}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.UnitBox{S, T, U, V} where V where U where T where S}}, Compose.UnitBox{Int64, Float64, Float64, Float64}})
precompile(Tuple{typeof(Base.iterate), Array{Compose.Context, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Compose.Table, Array{Compose.Context, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.iterate), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:leftpad, :rightpad), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Compose.UnitBox{S, T, U, V} where V where U where T where S}, Compose.UnitBox{Int64, Float64, Float64, Float64}})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight, :units, :clip), T} where T<:Tuple}, Tuple{Nothing, Nothing, Compose.UnitBox{Int64, Float64, Float64, Float64}, Bool}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight, :units, :clip), Tuple{Nothing, Nothing, Compose.UnitBox{Int64, Float64, Float64, Float64}, Bool}}, typeof(Compose.context)})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#84#89")), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Compose.Context, 1}, 1}, Array{Compose.Context, 1}, Base.Generator{Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, getfield(Gadfly.Guide, Symbol("#84#89"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, getfield(Gadfly.Guide, Symbol("#84#89"))}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#85#90")), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Compose.Context, 1}, 1}, Array{Compose.Context, 1}, Base.Generator{Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, getfield(Gadfly.Guide, Symbol("#85#90"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, getfield(Gadfly.Guide, Symbol("#85#90"))}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Array{Any, 1}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Array{Any, 1}, Array{Any, 1}, Tuple{Compose.Context, Compose.Context}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Compose.Context, 1}}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Array{Compose.Context, 1}, Array{Compose.Context, 1}, Array{Compose.Context, 1}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Array{Any, 1}, Tuple{Compose.Context, Compose.Context}, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Nothing, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Nothing, Float64, Symbol})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Nothing, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Nothing, Float64, Symbol})
precompile(Tuple{typeof(Compose.pad_inner), Compose.Context, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.pad_inner), Compose.Context, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight), T} where T<:Tuple}, Tuple{Nothing, Nothing}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight), Tuple{Nothing, Nothing}}, typeof(Compose.context), Measures.Length{:w, Float64}, Measures.Length{:h, Float64}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}})
precompile(Tuple{typeof(Base.:(*)), Float64, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Measures.BoundingBox{P1, P2} where P2<:(Tuple{Vararg{Measures.Measure, N}} where N) where P1<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{Type{Measures.BoundingBox{P1, P2} where P2<:(Tuple{Vararg{Measures.Measure, N}} where N) where P1<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base.getproperty), Compose.ListNode{Compose.Container}, Symbol})
precompile(Tuple{typeof(Compose.order), Compose.Context})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Add{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Base.getproperty), Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Symbol})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.JSIncludePrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.JSIncludePrimitive, 1}, Compose.JSIncludePrimitive, Base.Generator{Array{Compose.JSIncludePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.JSIncludePrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.JSIncludePrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGClassPrimitive, 1}, Compose.SVGClassPrimitive, Base.Generator{Array{Compose.SVGClassPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.JSIncludePrimitive}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Type})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.JSIncludePrimitive}, Type{Compose.Property{Compose.JSIncludePrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.SVGClassPrimitive}, Type{Compose.Property{Compose.SVGClassPrimitive}}})
precompile(Tuple{Type{Compose.ImagePropertyState}, ColorTypes.RGBA{Float64}, ColorTypes.RGBA{Float64}, Array{Float64, 1}, Compose.LineCapButt, Compose.LineJoinMiter, Bool, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Nothing, Bool})
precompile(Tuple{typeof(Base.getindex), Array{Compose.SVGClassPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.SVGClassPrimitive})
precompile(Tuple{typeof(Base.getindex), Array{Compose.JSIncludePrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.JSIncludePrimitive})
precompile(Tuple{typeof(Compose.order), Compose.Table})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 2}, Int64, Base.Generator{Array{Array{Compose.Context, 1}, 2}, typeof(Base.length)}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{Compose.Context, 1}, 2}, typeof(Base.length)}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Any, Nothing}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(Compose, Symbol("#61#66"))}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(==)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.isfinite), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Bool}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.unalias), Array{Int64, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.error_if_canonical_getindex), Base.IndexCartesian, Base.LogicalIndex{Int64, Base.BitArray{1}}, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Int64, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.copymutable), Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.copy), Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base._unaliascopy), Base.LogicalIndex{Int64, Base.BitArray{1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.unaliascopy), Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.LogicalIndex{Int64, Base.BitArray{1}}, getfield(Base, Symbol("#409#410"))}, Int64, Tuple{Int64, UInt64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.LogicalIndex{Int64, Base.BitArray{1}}, getfield(Base, Symbol("#409#410"))}})
precompile(Tuple{typeof(Base.__subarray_throw_boundserror), Type{Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Array{Int64, 1}}, false}}, Array{Float64, 1}, Tuple{Array{Int64, 1}}, Int64, Int64, Tuple{Int64}})
precompile(Tuple{typeof(Base.:(<)), Float64, Nothing})
precompile(Tuple{typeof(Base.:(>)), Nothing, Float64})
precompile(Tuple{typeof(Base.setindex!), Array{Float64, 1}, Nothing, Int64})
precompile(Tuple{getfield(Compose, Symbol("#update_mincolrow_sizes!#65")){Compose.Table, Int64, Int64}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{getfield(Compose, Symbol("#update_focused_col_widths!#63")){Compose.Table, Compose.ParentDrawContext, Array{Float64, 1}}, Array{Float64, 1}})
precompile(Tuple{getfield(Compose, Symbol("#update_focused_row_heights!#64")){Compose.Table, Compose.ParentDrawContext, Array{Float64, 1}}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(>=)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base._accumulate_pairwise!), typeof(Base.add_sum), Array{Float64, 1}, Array{Float64, 1}, Float64, Int64, Int64})
precompile(Tuple{typeof(Base.accumulate_pairwise!), typeof(Base.add_sum), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(-)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(+)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Float64}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Float64}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.:(*)), Array{Float64, 1}, Float64})
precompile(Tuple{typeof(Compose.force_aspect_ratio!), Compose.Table, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.:(<)), Nothing, Float64})
precompile(Tuple{typeof(Base.:(<=)), Nothing, Float64})
precompile(Tuple{typeof(Base.:(>=)), Float64, Nothing})
precompile(Tuple{typeof(Compose.realize_brute_force), Compose.Table, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.Table, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{getfield(Compose, Symbol("#61#66")), Int64})
precompile(Tuple{typeof(Base._array_for), Type{Base.UnitRange{Int64}}, Array{Any, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Base.UnitRange{Int64}, 1}, Base.Generator{Array{Any, 1}, getfield(Compose, Symbol("#61#66"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.UnitRange{Int64}, 1}, Base.UnitRange{Int64}, Base.Generator{Array{Any, 1}, getfield(Compose, Symbol("#61#66"))}, Int64})
precompile(Tuple{typeof(Base.isempty), Array{Base.UnitRange{Int64}, 1}})
precompile(Tuple{typeof(Base.Iterators.product), Base.UnitRange{Int64}, Vararg{Base.UnitRange{Int64}, N} where N})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Base.UnitRange{Int64}}}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{Int64, Int64, Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{Int64, Int64, Int64, Int64}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Set{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Set{Int64}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{Int64, Int64, Int64, Int64}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, Tuple{Tuple{Int64, Int64}, Tuple{Int64, Int64}, Tuple{Int64, Int64}, Tuple{Int64, Int64}}})
precompile(Tuple{Type{NamedTuple{(:units, :order), T} where T<:Tuple}, Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Int64}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:units, :order), Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Int64}}, typeof(Compose.context)})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Compose.UnitBox{Int64, Float64, Float64, Float64}, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Float64, Float64, Float64, Symbol})
precompile(Tuple{Type{Measures.BoundingBox{P1, P2} where P2<:(Tuple{Vararg{Measures.Measure, N}} where N) where P1<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Compose.UnitBox{Int64, Float64, Float64, Float64}, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Nothing, Float64, Symbol})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Float64, Float64, Float64, Symbol})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.UnitBox{Int64, Float64, Float64, Float64}})
precompile(Tuple{typeof(Base.:(>=)), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.order), Compose.AdhocContainerPromise})
precompile(Tuple{typeof(Compose.realize), Compose.AdhocContainerPromise, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.AdhocContainerPromise, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#68#70")){Gadfly.Guide.XLabel, Gadfly.Theme, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.text), Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HCenter, Compose.VTop})
precompile(Tuple{typeof(Base.getproperty), Compose.ListNode{Compose.Form{P} where P<:Compose.FormPrimitive}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.FontSizePrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FontSizePrimitive, 1}, Compose.FontSizePrimitive, Base.Generator{Array{Compose.FontSizePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.FontSizePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Compose.FontSizePrimitive}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FontPrimitive, 1}, Compose.FontPrimitive, Base.Generator{Array{Compose.FontPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FillPrimitive, 1}, Compose.FillPrimitive, Base.Generator{Array{Compose.FillPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.StrokePrimitive, 1}, Compose.StrokePrimitive, Base.Generator{Array{Compose.StrokePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FontSizePrimitive}, Type{Compose.Property{Compose.FontSizePrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FontPrimitive}, Type{Compose.Property{Compose.FontPrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FillPrimitive}, Type{Compose.Property{Compose.FillPrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.StrokePrimitive}, Type{Compose.Property{Compose.StrokePrimitive}}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.FontSizePrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FontSizePrimitive})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.convert), Type{Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.FontPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FontPrimitive})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, String})
precompile(Tuple{typeof(Base.convert), Type{AbstractString}, String})
precompile(Tuple{typeof(Base.getindex), Array{Compose.StrokePrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.StrokePrimitive})
precompile(Tuple{typeof(Base.getindex), Array{Compose.FillPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FillPrimitive})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Float64, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HCenter, Compose.VTop, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{Type{Compose.Form{P} where P<:Compose.FormPrimitive}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.isempty), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.batch), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Compose.vector_properties_require_push_pop), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.push_vector_properties), Compose.Image{Compose.PDFBackend}, Int64})
precompile(Tuple{typeof(Compose.rotate), Compose.Image{Compose.PDFBackend}, Float64, Float64, Float64})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Type{T} where T})
precompile(Tuple{typeof(Cairo.set_text), Cairo.CairoContext, String, Bool})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#35#44")){Gadfly.Theme, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{AbstractString, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{AbstractString, 1}, Base.LogicalIndex{Int64, Array{Bool, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{AbstractString, 1}, Tuple{Base.LogicalIndex{Int64, Array{Bool, 1}}}})
precompile(Tuple{typeof(Base.getindex), Array{AbstractString, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractString, 1}, String, Int64})
precompile(Tuple{getfield(Compose, Symbol("##text#26")), Symbol, typeof(Compose.text), Array{Float64, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{AbstractString, 1}, Array{Compose.HCenter, 1}, Array{Compose.VTop, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Float64, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{AbstractString, 1}, Array{Compose.HCenter, 1}, Array{Compose.VTop, 1}})
precompile(Tuple{Type{Compose.TextPrimitive{P, R, O} where O<:(Tuple{Vararg{Measures.Measure, N}} where N) where R<:(Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)) where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, String, Compose.HCenter, Compose.VTop, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{getfield(Compose, Symbol("##text#26")), Symbol, typeof(Compose.text), Array{Float64, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{AbstractString, 1}, Array{Compose.HCenter, 1}, Array{Compose.VBottom, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Float64, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{AbstractString, 1}, Array{Compose.HCenter, 1}, Array{Compose.VBottom, 1}})
precompile(Tuple{Type{Compose.TextPrimitive{P, R, O} where O<:(Tuple{Vararg{Measures.Measure, N}} where N) where R<:(Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)) where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, String, Compose.HCenter, Compose.VBottom, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#7#15")){Measures.Length{:mm, Float64}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#7#15")){Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#8#16"))}})
precompile(Tuple{typeof(Base.copyto!), Array{AbstractString, 1}, Base.ValueIterator{OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#6#14")){Array{Int64, 1}, Measures.Length{:mm, Float64}, Array{Measures.Measure, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Gadfly.Theme, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.context), Measures.Length{:mm, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base.:(+)), Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:units,), Tuple{Compose.UnitBox{Int64, Int64, Int64, Int64}}}, typeof(Compose.context), Int64, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}}, Base.UnitRange{Int64}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#7#15")){Measures.Length{:mm, Float64}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, 1}, Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#7#15")){Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{typeof(Compose.rectangle), Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, 1}, Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Length{:mm, Float64}, 1}, Symbol})
precompile(Tuple{typeof(Compose.rectangle), Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, 1}, Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.allocatedinline), Type{ColorTypes.Color{T, N} where N where T}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.Color{T, N} where N where T, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.Color{T, N} where N where T, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.default_discrete_highlight_color), Tuple{Array{ColorTypes.Color{T, N} where N where T, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.default_discrete_highlight_color), Tuple{Base.Broadcast.Extruded{Array{ColorTypes.Color{T, N} where N where T, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.default_discrete_highlight_color), Tuple{Array{ColorTypes.Color{T, N} where N where T, 1}}}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.StrokePrimitive, 1}, Base.Generator{Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, getfield(Compose, Symbol("#42#43"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, getfield(Compose, Symbol("#42#43"))}})
precompile(Tuple{typeof(Compose.stroke), Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.FillPrimitive, 1}, Base.Generator{Array{ColorTypes.Color{T, N} where N where T, 1}, getfield(Compose, Symbol("#44#45"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{ColorTypes.Color{T, N} where N where T, 1}, getfield(Compose, Symbol("#44#45"))}})
precompile(Tuple{typeof(Base.fill), Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{getfield(Compose, Symbol("#44#45")), ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}, Compose.Property{Compose.StrokePrimitive}, Compose.Property{Compose.FillPrimitive}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Property{Compose.StrokePrimitive}, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.vect), Measures.Length{:mm, Float64}})
precompile(Tuple{getfield(Compose, Symbol("##text#26")), Symbol, typeof(Compose.text), Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Length{:cy, Int64}, 1}, Array{AbstractString, 1}, Array{Compose.HLeft, 1}, Array{Compose.VCenter, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Length{:cy, Int64}, 1}, Array{AbstractString, 1}, Array{Compose.HLeft, 1}, Array{Compose.VCenter, 1}})
precompile(Tuple{Type{Compose.TextPrimitive{P, R, O} where O<:(Tuple{Vararg{Measures.Measure, N}} where N) where R<:(Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)) where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, String, Compose.HLeft, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Compose.context), Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#9#17")){getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}}, Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Array{ColorTypes.Color{T, N} where N where T, 1}, getfield(Gadfly.Guide, Symbol("#9#17")){getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{ColorTypes.Color{T, N} where N where T, 1}, getfield(Gadfly.Guide, Symbol("#9#17")){getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#9#17")){getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}}, ColorTypes.RGB{Float32}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#10#18")), Array{String, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{String, 1}, getfield(Gadfly.Guide, Symbol("#10#18"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{String, 1}, getfield(Gadfly.Guide, Symbol("#10#18"))}})
precompile(Tuple{typeof(Compose.jscall), Array{String, 1}, Array{Array{Measures.Measure, 1}, 1}})
precompile(Tuple{typeof(Compose.jscall), Array{String, 1}})
precompile(Tuple{typeof(Base.:(+)), Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.JSCallPrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.JSCallPrimitive, 1}, Compose.JSCallPrimitive, Base.Generator{Array{Compose.JSCallPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.JSCallPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Base.findnext), String, String, Int64})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.JSCallPrimitive}, Type{Compose.Property{Compose.JSCallPrimitive}}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.JSCallPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.JSCallPrimitive})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Int64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:cx, Int64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.UnitBox{Int64, Int64, Int64, Int64}})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.Context, Compose.IdentityTransform, Compose.UnitBox{Int64, Int64, Int64, Int64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.JSCallPrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.JSCallPrimitive, 1}, Compose.JSCallPrimitive, Base.Generator{Array{Compose.JSCallPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.JSCallPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGClassPrimitive, 1}, Compose.SVGClassPrimitive, Base.Generator{Array{Compose.SVGClassPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Type})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.JSCallPrimitive}, Type{Compose.Property{Compose.JSCallPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.SVGClassPrimitive}, Type{Compose.Property{Compose.SVGClassPrimitive}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FillPrimitive, 1}, Compose.FillPrimitive, Base.Generator{Array{Compose.FillPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.FontSizePrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FontSizePrimitive, 1}, Compose.FontSizePrimitive, Base.Generator{Array{Compose.FontSizePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.FontSizePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FontPrimitive, 1}, Compose.FontPrimitive, Base.Generator{Array{Compose.FontPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HLeft, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FillOpacityPrimitive, 1}, Compose.FillOpacityPrimitive, Base.Generator{Array{Compose.FillOpacityPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.StrokePrimitive, 1}, Compose.StrokePrimitive, Base.Generator{Array{Compose.StrokePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FillOpacityPrimitive}, Type{Compose.Property{Compose.FillOpacityPrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.FillOpacityPrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.fill), Float64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FillOpacityPrimitive, 1}, Compose.FillOpacityPrimitive, Base.Generator{Array{Float64, 1}, Type{Compose.FillOpacityPrimitive}}, Int64})
precompile(Tuple{typeof(Compose.fillopacity), Array{Float64, 1}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokePrimitive}, Type{Compose.Property{Compose.StrokePrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillOpacityPrimitive}, Type{Compose.Property{Compose.FillOpacityPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillPrimitive}, Type{Compose.Property{Compose.FillPrimitive}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Base.Generator{Array{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Tuple{Measures.Length{:mm, Float64}, Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{Type{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Symbol})
precompile(Tuple{typeof(Base.isempty), Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.fillstroke), Compose.Image{Compose.PDFBackend}, Bool})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{Type{Base.Pair{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}}, Any, Any})
precompile(Tuple{typeof(Base.convert), Type{Type}, Type{T} where T})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FillOpacityPrimitive})
precompile(Tuple{typeof(Base.getproperty), Compose.Property{Compose.FillOpacityPrimitive}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.StrokePrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.FillOpacityPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.FillPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.JSCallPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.SVGClassPrimitive}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:mm, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HLeft, Compose.VBottom, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.vect), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Vararg{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, N} where N})
precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Array{Array{T, 1} where T, 1}, getfield(Compose, Symbol("#1#2"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{T, 1} where T, 1}, getfield(Compose, Symbol("#1#2"))}})
precompile(Tuple{typeof(Compose.narrow_polygon_point_types), Array{Array{T, 1} where T, 1}})
precompile(Tuple{typeof(Compose.clip), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{getfield(Compose, Symbol("#1#2")), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.type_params), Type{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base._array_for), Type{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Base.HasShape{1}})
precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Int64})
precompile(Tuple{Type{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Base.getindex), Type{Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, Base.IndexLinear, Array{Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{Type{Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}}, Array{Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Type{Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, Int64})
precompile(Tuple{typeof(Base.allocatedinline), Type{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.push!), Array{Tuple{Int64, Int64, Compose.Container}, 1}, Tuple{Int64, Int64, Compose.Context}})
precompile(Tuple{typeof(Base.isless), Tuple{Compose.Context}, Tuple{Compose.Context}})
precompile(Tuple{typeof(Base.Order.lt), Base.Order.ForwardOrdering, Tuple{Int64, Int64, Compose.Context}, Tuple{Int64, Int64, Compose.Context}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGAttributePrimitive, 1}, Compose.SVGAttributePrimitive, Base.Generator{Array{Compose.SVGAttributePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.SVGAttributePrimitive}, Type{Compose.Property{Compose.SVGAttributePrimitive}}})
precompile(Tuple{Type{Compose.ImagePropertyState}, ColorTypes.RGBA{Float64}, ColorTypes.RGBA{Float64}, Array{Float64, 1}, Compose.LineCapButt, Compose.LineJoinMiter, Bool, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Bool})
precompile(Tuple{typeof(Base.getindex), Array{Compose.SVGAttributePrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.SVGAttributePrimitive})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Base.Generator{Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Compose.batch), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#48#49")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.StrokeDashPrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.StrokeDashPrimitive, 1}, Compose.StrokeDashPrimitive, Base.Generator{Array{Compose.StrokeDashPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.StrokeDashPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#48#49")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Length{:mm, Float64}}, Array{Measures.Measure, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#48#49")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#48#49")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{Type{Compose.StrokeDashPrimitive}, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.LineWidthPrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.LineWidthPrimitive, 1}, Compose.LineWidthPrimitive, Base.Generator{Array{Compose.LineWidthPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.LineWidthPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{Type{Compose.LineWidthPrimitive}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.StrokeDashPrimitive}, Type{Compose.Property{Compose.StrokeDashPrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.LineWidthPrimitive}, Type{Compose.Property{Compose.LineWidthPrimitive}}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.StrokeDashPrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#141#142")){Compose.Image{Compose.PDFBackend}}}, Int64, Int64})
precompile(Tuple{typeof(Base._collect), Array{Measures.Measure, 1}, Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#141#142")){Compose.Image{Compose.PDFBackend}}}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.StrokeDashPrimitive})
precompile(Tuple{getfield(Compose, Symbol("#141#142")){Compose.Image{Compose.PDFBackend}}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.LineWidthPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.LineWidthPrimitive})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}, Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Length{:cy, Float64}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.isempty), Array{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.batch), Compose.Form{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Base.Math.hypot), Float64, Float64})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Measures.Length{:mm, Float64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Compose.arrowhead), Compose.Image{Compose.PDFBackend}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Float64, Float64})
precompile(Tuple{typeof(Compose.arrow), Compose.Image{Compose.PDFBackend}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Float64}, Measures.Length{:h, Float64}}})
precompile(Tuple{Type{Compose.StrokeDashPrimitive}, Array{Any, 1}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokeDashPrimitive}, Type{Compose.Property{Compose.StrokeDashPrimitive}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.StrokeDashPrimitive}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#54#63")){Gadfly.Theme, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{getfield(Compose, Symbol("##text#26")), Symbol, typeof(Compose.text), Array{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{Float64, 1}, Array{AbstractString, 1}, Array{Compose.HRight, 1}, Array{Compose.VCenter, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{Float64, 1}, Array{AbstractString, 1}, Array{Compose.HRight, 1}, Array{Compose.VCenter, 1}})
precompile(Tuple{Type{Compose.TextPrimitive{P, R, O} where O<:(Tuple{Vararg{Measures.Measure, N}} where N) where R<:(Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)) where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, String, Compose.HRight, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HRight, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#74#76")){Gadfly.Guide.YLabel, Gadfly.Theme, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.text), Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HCenter, Compose.VCenter, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HCenter, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Cairo.destroy), Cairo.CairoSurfaceIOStream{UInt32}})
precompile(Tuple{typeof(Cairo.destroy), Cairo.CairoContext})
precompile(Tuple{typeof(Parsers.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#33#38")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#34#39")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#35#40")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#36#41")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#37#42")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Compat.Sys.__init__)})
precompile(Tuple{typeof(FilePathsBase.__init__)})
precompile(Tuple{typeof(CSV.__init__)})
precompile(Tuple{typeof(Base.active_project), Bool})
precompile(Tuple{typeof(Base.load_path_expand), String})
precompile(Tuple{typeof(Base.load_path)})
precompile(Tuple{getfield(Base, Symbol("#681#682")){String}, Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#681#682")){String}, String})
precompile(Tuple{typeof(Base.project_deps_get), String, String})
precompile(Tuple{typeof(Base.identify_package), String})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Any, Int64}, Symbol})
precompile(Tuple{getfield(Base, Symbol("#689#690")){Base.UUID, String}, Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#689#690")){Base.UUID, String}, String})
precompile(Tuple{typeof(Base.manifest_deps_get), String, Base.PkgId, String})
precompile(Tuple{typeof(Base.identify_package), Base.PkgId, String})
precompile(Tuple{typeof(Base.manifest_uuid_path), String, Base.PkgId})
precompile(Tuple{typeof(Base.locate_package), Base.PkgId})
precompile(Tuple{typeof(Base.stat), Base.Libc.RawFD})
precompile(Tuple{typeof(Base.isvalid_file_crc), Base.IOStream})
precompile(Tuple{typeof(Base.stale_cachefile), String, String})
precompile(Tuple{typeof(Base.register_root_module), Module})
precompile(Tuple{typeof(Base._include_from_serialized), String, Array{Any, 1}})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, String})
precompile(Tuple{typeof(Base._require_search_from_serialized), Base.PkgId, String})
precompile(Tuple{typeof(Base.compilecache_path), Base.PkgId})
precompile(Tuple{typeof(Base.load_path_setup_code), Bool})
precompile(Tuple{typeof(Base.create_expr_cache), String, String, Array{Base.Pair{Base.PkgId, UInt64}, 1}, Nothing})
precompile(Tuple{typeof(Base.compilecache), Base.PkgId, String})
precompile(Tuple{typeof(Base._include_dependency), Module, String})
precompile(Tuple{typeof(Base.include_relative), Module, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, Nothing})
precompile(Tuple{typeof(Base._require_from_serialized), String})
precompile(Tuple{typeof(Base._require), Base.PkgId})
precompile(Tuple{typeof(Base.require), Base.PkgId})
precompile(Tuple{typeof(Base.require), Module, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.IdDict{Module, Base.PkgId}, Any, Any})
precompile(Tuple{typeof(Base.include_dependency), String})
precompile(Tuple{typeof(Rmath_jll.__init__)})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##load_overrides#3")), Bool, typeof(Pkg.Artifacts.load_overrides)})
precompile(Tuple{typeof(Pkg.Artifacts.process_overrides), Base.Dict{String, Any}, Base.UUID})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_meta#20")), Pkg.BinaryPlatforms.Platform, typeof(Pkg.Artifacts.artifact_meta), String, Base.Dict{String, Any}, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##artifact_meta")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.artifact_meta), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.unpack_platform), Base.Dict{String, Any}, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}, Base.Dict{String, Any}})
precompile(Tuple{Type{Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Generator{Array{Base.Dict{String, Any}, 1}, getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}}})
precompile(Tuple{typeof(Base.mapfilter), getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, typeof(Base.push!), Base.KeySet{Pkg.BinaryPlatforms.Platform, Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Set{Pkg.BinaryPlatforms.Platform}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.query_override), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_paths#9")), Bool, typeof(Pkg.Artifacts.artifact_paths), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_exists#11")), Bool, typeof(Pkg.Artifacts.artifact_exists), Base.SHA1})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple, 1}, getfield(Pkg.PlatformEngines, Symbol("#36#61"))}})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##probe_cmd#14")), Bool, typeof(Pkg.PlatformEngines.probe_cmd), Base.Cmd})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple, 1}, getfield(Pkg.PlatformEngines, Symbol("#40#65"))}})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##probe_platform_engines!#15")), Bool, typeof(Pkg.PlatformEngines.probe_platform_engines!)})
precompile(Tuple{typeof(Base.read), Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#280#281")){String}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##verify#98")), Bool, Bool, String, typeof(Pkg.PlatformEngines.verify), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download#82")), Bool, typeof(Pkg.PlatformEngines.download), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify#83")), Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify), String, String, String})
precompile(Tuple{typeof(Base.convert), Type{Nothing}, Base.SubString{String}})
precompile(Tuple{typeof(Base.convert), Type{Base.Pair{Nothing, String}}, Base.Pair{Base.SubString{String}, String}})
precompile(Tuple{typeof(Base.setindex!), Array{Base.Pair{Nothing, String}, 1}, Base.Pair{Base.SubString{String}, String}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.Pair{Nothing, String}, 1}, Base.Pair{Base.SubString{String}, String}, Base.Generator{Array{Array{Union{Nothing, Base.SubString{String}}, 1}, 1}, getfield(Pkg.PlatformEngines, Symbol("#88#90"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{Union{Nothing, Base.SubString{String}}, 1}, 1}, getfield(Pkg.PlatformEngines, Symbol("#88#90"))}})
precompile(Tuple{typeof(Pkg.PlatformEngines.list_tarball_symlinks), String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("#kw##cptree")), NamedTuple{(:force, :follow_symlinks), Tuple{Bool, Bool}}, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{typeof(Base.Filesystem.sendfile), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cptree#11")), Bool, Bool, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cp#12")), Bool, Bool, typeof(Base.Filesystem.cp), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##artifact_paths")), NamedTuple{(:honor_overrides,), Tuple{Bool}}, typeof(Pkg.Artifacts.artifact_paths), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_path#10")), Bool, typeof(Pkg.Artifacts.artifact_path), Base.SHA1})
precompile(Tuple{typeof(Base.Filesystem.rename), String, String})
precompile(Tuple{typeof(Pkg.GitTools.set_readonly), String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.artifact_path), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##query_override#7")), Base.Dict{Symbol, Base.Dict{K, V} where V where K}, typeof(Pkg.Artifacts.query_override), Base.SHA1})
precompile(Tuple{typeof(Random.make_seed)})
precompile(Tuple{Type{Random.MersenneTwister}, Nothing})
precompile(Tuple{typeof(Random.default_rng), Int64})
precompile(Tuple{typeof(Base.rand)})
precompile(Tuple{typeof(Base.randn)})
precompile(Tuple{typeof(Random.randexp)})
precompile(Tuple{typeof(Rmath.__init__)})
precompile(Tuple{typeof(Requires.__init__)})
precompile(Tuple{typeof(Requires.loadpkg), Base.PkgId})
precompile(Tuple{typeof(ArrayInterface.__init__)})
precompile(Tuple{typeof(Requires.listenpkg), Any, Base.PkgId})
precompile(Tuple{typeof(Requires.withpath), Any, String})
precompile(Tuple{getfield(ArrayInterface, Symbol("#15#36"))})
precompile(Tuple{typeof(Requires.withnotifications), String, Vararg{Any, N} where N})
precompile(Tuple{getfield(ArrayInterface, Symbol("#16#37"))})
precompile(Tuple{typeof(Base.catch_backtrace)})
precompile(Tuple{typeof(Requires.err), Any, Module, String})
precompile(Tuple{getfield(ArrayInterface, Symbol("#17#38"))})
precompile(Tuple{typeof(Base.get!), getfield(Requires, Symbol("#1#2")), Base.Dict{Base.PkgId, Array{Function, 1}}, Base.PkgId})
precompile(Tuple{getfield(ArrayInterface, Symbol("#18#39"))})
precompile(Tuple{getfield(ArrayInterface, Symbol("#19#40"))})
precompile(Tuple{getfield(ArrayInterface, Symbol("#20#41"))})
precompile(Tuple{typeof(Base.stat), Base.Libc.RawFD})
precompile(Tuple{typeof(Base.isvalid_file_crc), Base.IOStream})
precompile(Tuple{typeof(Base.stale_cachefile), String, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, String})
precompile(Tuple{typeof(Base._require_search_from_serialized), Base.PkgId, String})
precompile(Tuple{typeof(Base.create_expr_cache), String, String, Array{Base.Pair{Base.PkgId, UInt64}, 1}, Nothing})
precompile(Tuple{typeof(Base.compilecache), Base.PkgId, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, Nothing})
precompile(Tuple{typeof(Base._require_from_serialized), String})
precompile(Tuple{typeof(Base._require), Base.PkgId})
precompile(Tuple{typeof(Base.require), Base.PkgId})
precompile(Tuple{typeof(FiniteDiff.__init__)})
precompile(Tuple{typeof(CompilerSupportLibraries_jll.__init__)})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##load_overrides#3")), Bool, typeof(Pkg.Artifacts.load_overrides)})
precompile(Tuple{typeof(Pkg.Artifacts.process_overrides), Base.Dict{String, Any}, Base.UUID})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##artifact_meta")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.artifact_meta), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.unpack_platform), Base.Dict{String, Any}, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}, Base.Dict{String, Any}})
precompile(Tuple{Type{Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Generator{Array{Base.Dict{String, Any}, 1}, getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}}})
precompile(Tuple{typeof(Base.ntuple), getfield(Base, Symbol("#457#458")){Array{Base.SubString{String}, 1}}, Int64})
precompile(Tuple{Type{Base.VersionNumber}, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#nover#17")), String})
precompile(Tuple{typeof(Base.:(==)), Base.VersionNumber, Base.VersionNumber})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:libgfortran_version, :libstdcxx_version, :cxxstring_abi), Tuple{Base.VersionNumber, Nothing, Nothing}}, Type{Pkg.BinaryPlatforms.CompilerABI}})
precompile(Tuple{typeof(Base.mapfilter), getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, typeof(Base.push!), Base.KeySet{Pkg.BinaryPlatforms.Platform, Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Set{Pkg.BinaryPlatforms.Platform}})
precompile(Tuple{getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, Pkg.BinaryPlatforms.Linux})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.query_override), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_paths#9")), Bool, typeof(Pkg.Artifacts.artifact_paths), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_exists#11")), Bool, typeof(Pkg.Artifacts.artifact_exists), Base.SHA1})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##probe_platform_engines!#15")), Bool, typeof(Pkg.PlatformEngines.probe_platform_engines!)})
precompile(Tuple{typeof(Base.read), Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#280#281")){String}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##verify#98")), Bool, Bool, String, typeof(Pkg.PlatformEngines.verify), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify#83")), Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify), String, String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("#kw##cptree")), NamedTuple{(:force, :follow_symlinks), Tuple{Bool, Bool}}, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{typeof(Base.Filesystem.sendfile), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cptree#11")), Bool, Bool, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cp#12")), Bool, Bool, typeof(Base.Filesystem.cp), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##artifact_paths")), NamedTuple{(:honor_overrides,), Tuple{Bool}}, typeof(Pkg.Artifacts.artifact_paths), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_path#10")), Bool, typeof(Pkg.Artifacts.artifact_path), Base.SHA1})
precompile(Tuple{typeof(Base.Filesystem.rename), String, String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.artifact_path), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##query_override#7")), Base.Dict{Symbol, Base.Dict{K, V} where V where K}, typeof(Pkg.Artifacts.query_override), Base.SHA1})
precompile(Tuple{typeof(Base.foreach), getfield(OpenSpecFun_jll, Symbol("#7#9")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(OpenSpecFun_jll, Symbol("#8#10")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(OpenSpecFun_jll.__init__)})
precompile(Tuple{typeof(OpenBLAS_jll.__init__)})
precompile(Tuple{typeof(Pkg.Artifacts.process_overrides), Base.Dict{String, Any}, Base.UUID})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{typeof(Pkg.Artifacts.unpack_platform), Base.Dict{String, Any}, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}, Base.Dict{String, Any}})
precompile(Tuple{Type{Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Generator{Array{Base.Dict{String, Any}, 1}, getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}}})
precompile(Tuple{typeof(Base.:(==)), Base.VersionNumber, Base.VersionNumber})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:libgfortran_version, :libstdcxx_version, :cxxstring_abi), Tuple{Base.VersionNumber, Nothing, Nothing}}, Type{Pkg.BinaryPlatforms.CompilerABI}})
precompile(Tuple{getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, Pkg.BinaryPlatforms.Linux})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Base.stat), Base.Libc.RawFD})
precompile(Tuple{typeof(Base.read), Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#280#281")){String}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##verify#98")), Bool, Bool, String, typeof(Pkg.PlatformEngines.verify), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify#83")), Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify), String, String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("#kw##cptree")), NamedTuple{(:force, :follow_symlinks), Tuple{Bool, Bool}}, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{typeof(Base.Filesystem.sendfile), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cptree#11")), Bool, Bool, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cp#12")), Bool, Bool, typeof(Base.Filesystem.cp), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{typeof(Base.Filesystem.rename), String, String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Base.foreach), getfield(Arpack_jll, Symbol("#7#9")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Arpack_jll, Symbol("#8#10")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Arpack_jll.__init__)})
precompile(Tuple{typeof(FFTW_jll.__init__)})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(FFTW.__init__)})
precompile(Tuple{typeof(DocStringExtensions.__init__)})
precompile(Tuple{typeof(Compose.__init__)})
precompile(Tuple{typeof(Base.copyto!), Array{Function, 1}, Tuple{typeof(Compose.circle), typeof(Gadfly.Shape.square), typeof(Gadfly.Shape.diamond), typeof(Gadfly.Shape.cross), typeof(Gadfly.Shape.xcross), typeof(Gadfly.Shape.utriangle), typeof(Gadfly.Shape.dtriangle), typeof(Gadfly.Shape.star1), typeof(Gadfly.Shape.star2), typeof(Gadfly.Shape.hexagon), typeof(Gadfly.Shape.octagon), typeof(Gadfly.Shape.hline), typeof(Gadfly.Shape.vline), typeof(Gadfly.Shape.ltriangle), typeof(Gadfly.Shape.rtriangle)}})
precompile(Tuple{getfield(Gadfly, Symbol("##Theme#57")), ColorTypes.LCHab{Float32}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Function, Function, Array{Function, 1}, Measures.Length{:mm, Float64}, Array{Symbol, 1}, Array{Float64, 1}, Nothing, Nothing, Float64, Nothing, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Int64, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, typeof(Gadfly.default_stroke_color), Measures.Length{:mm, Float64}, typeof(Gadfly.default_discrete_highlight_color), typeof(Gadfly.default_continuous_highlight_color), typeof(Gadfly.default_lowlight_color), typeof(Gadfly.default_middle_color), Measures.Length{:mm, Float64}, Symbol, Symbol, typeof(Gadfly.Shape.square), Nothing, Nothing, Symbol, Nothing, Measures.Length{:mm, Float64}, Int64, Float64, Float64, Float64, Measures.Length{:mm, Float64}, Int64, Gadfly.Scale.DiscreteColorScale, Gadfly.Scale.ContinuousColorScale, Type{Gadfly.Theme}})
precompile(Tuple{Type{Gadfly.Theme}})
precompile(Tuple{typeof(Gadfly.push_theme), Symbol})
precompile(Tuple{typeof(Gadfly.__init__)})
precompile(Tuple{getfield(Gadfly, Symbol("#2#9"))})
precompile(Tuple{getfield(Gadfly, Symbol("#3#10"))})
precompile(Tuple{getfield(Gadfly, Symbol("#4#11"))})
precompile(Tuple{typeof(Base.isvalid_file_crc), Base.IOStream})
precompile(Tuple{typeof(Base.stale_cachefile), String, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, String})
precompile(Tuple{typeof(Base._require_search_from_serialized), Base.PkgId, String})
precompile(Tuple{typeof(Base.create_expr_cache), String, String, Array{Base.Pair{Base.PkgId, UInt64}, 1}, Nothing})
precompile(Tuple{typeof(Base.compilecache), Base.PkgId, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, Nothing})
precompile(Tuple{typeof(Base._require_from_serialized), String})
precompile(Tuple{typeof(Base._require), Base.PkgId})
precompile(Tuple{typeof(Base.require), Base.PkgId})
precompile(Tuple{typeof(Gadfly.link_dataframes)})
precompile(Tuple{typeof(Base.require), Module, Symbol})
precompile(Tuple{typeof(Pixman_jll.__init__)})
precompile(Tuple{getfield(Base.Cartesian, Symbol("#@nloops")), LineNumberNode, Module, Any, Any, Any, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.Cartesian.exprresolve_arith), Expr})
precompile(Tuple{typeof(Base.Cartesian.exprresolve_conditional), Expr})
precompile(Tuple{typeof(Base.Cartesian.exprresolve), Expr})
precompile(Tuple{typeof(Base.Cartesian.inlineanonymous), Expr, Int64})
precompile(Tuple{typeof(Base.Cartesian._nloops), Int64, Symbol, Expr, Expr})
precompile(Tuple{typeof(Base.Cartesian.lreplace!), Expr, Base.Cartesian.LReplace{String}})
precompile(Tuple{typeof(Base.Cartesian.lreplace), Expr, Symbol, Int64})
precompile(Tuple{getfield(Base, Symbol("##s66#142")), Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{DataFrames.RowIndexMap, 1}}})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{typeof(Pkg.Artifacts.unpack_platform), Base.Dict{String, Any}, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}, Base.Dict{String, Any}})
precompile(Tuple{Type{Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Generator{Array{Base.Dict{String, Any}, 1}, getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##probe_platform_engines!#15")), Bool, typeof(Pkg.PlatformEngines.probe_platform_engines!)})
precompile(Tuple{typeof(Base.convert), Type{Nothing}, Base.SubString{String}})
precompile(Tuple{typeof(Base.convert), Type{Base.Pair{Nothing, String}}, Base.Pair{Base.SubString{String}, String}})
precompile(Tuple{typeof(Base.setindex!), Array{Base.Pair{Nothing, String}, 1}, Base.Pair{Base.SubString{String}, String}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.Pair{Nothing, String}, 1}, Base.Pair{Base.SubString{String}, String}, Base.Generator{Array{Array{Union{Nothing, Base.SubString{String}}, 1}, 1}, getfield(Pkg.PlatformEngines, Symbol("#88#90"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{Union{Nothing, Base.SubString{String}}, 1}, 1}, getfield(Pkg.PlatformEngines, Symbol("#88#90"))}})
precompile(Tuple{typeof(Pkg.PlatformEngines.list_tarball_symlinks), String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(PCRE_jll.__init__)})
precompile(Tuple{typeof(Libiconv_jll.__init__)})
precompile(Tuple{typeof(Libffi_jll.__init__)})
precompile(Tuple{typeof(Zlib_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(XML2_jll, Symbol("#13#15")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(XML2_jll, Symbol("#14#16")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(XML2_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Gettext_jll, Symbol("#7#9")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Gettext_jll, Symbol("#8#10")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Gettext_jll.__init__)})
precompile(Tuple{typeof(Glib_jll.__init__)})
precompile(Tuple{typeof(Libuuid_jll.__init__)})
precompile(Tuple{typeof(Libgpg_error_jll.__init__)})
precompile(Tuple{typeof(Libgcrypt_jll.__init__)})
precompile(Tuple{typeof(Bzip2_jll.__init__)})
precompile(Tuple{typeof(FreeType2_jll.__init__)})
precompile(Tuple{typeof(Expat_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Fontconfig_jll, Symbol("#34#36")), Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Fontconfig_jll, Symbol("#35#37")), Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Fontconfig_jll.__init__)})
precompile(Tuple{typeof(XSLT_jll.__init__)})
precompile(Tuple{typeof(Xorg_libXdmcp_jll.__init__)})
precompile(Tuple{typeof(libpng_jll.__init__)})
precompile(Tuple{typeof(Xorg_libXau_jll.__init__)})
precompile(Tuple{typeof(Xorg_libpthread_stubs_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libxcb_jll, Symbol("#7#9")), Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libxcb_jll, Symbol("#8#10")), Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Xorg_libxcb_jll.__init__)})
precompile(Tuple{typeof(Xorg_xtrans_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libX11_jll, Symbol("#7#9")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libX11_jll, Symbol("#8#10")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Xorg_libX11_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libXrender_jll, Symbol("#7#9")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libXrender_jll, Symbol("#8#10")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Xorg_libXrender_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libXext_jll, Symbol("#7#9")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libXext_jll, Symbol("#8#10")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Xorg_libXext_jll.__init__)})
precompile(Tuple{typeof(LZO_jll.__init__)})
precompile(Tuple{getfield(Base.Cartesian, Symbol("#@nexprs")), LineNumberNode, Module, Int64, Expr})
precompile(Tuple{typeof(Cairo_jll.__init__)})
precompile(Tuple{typeof(Graphite2_jll.__init__)})
precompile(Tuple{typeof(HarfBuzz_jll.__init__)})
precompile(Tuple{typeof(FriBidi_jll.__init__)})
precompile(Tuple{typeof(Pango_jll.__init__)})
precompile(Tuple{typeof(Cairo.__init__)})
precompile(Tuple{getfield(Compose, Symbol("#114#120"))})
precompile(Tuple{getfield(Compose, Symbol("#115#121"))})
precompile(Tuple{getfield(Compose, Symbol("#116#122"))})
precompile(Tuple{typeof(Compose.link_cairo)})
precompile(Tuple{typeof(Compose.docfunc), Symbol, String})
precompile(Tuple{getfield(DocStringExtensions, Symbol("#20#21")){typeof(DocStringExtensions.template_hook)}, LineNumberNode, Vararg{Any, N} where N})
precompile(Tuple{typeof(DocStringExtensions.template_hook), LineNumberNode, Module, String, Symbol})
precompile(Tuple{typeof(Base.Docs.docerror), Any})
precompile(Tuple{typeof(Base.Docs.docm), LineNumberNode, Module, Any, Any, Bool})
precompile(Tuple{typeof(Base.Docs.docm), LineNumberNode, Module, Any, Any})
precompile(Tuple{typeof(Base.Docs.objectdoc), Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Base.Docs.splitexpr), Expr})
precompile(Tuple{typeof(Base.Docs.bindingexpr), Any})
precompile(Tuple{typeof(Base.Docs.objectdoc), Any, Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Base.Docs.docstr), Any, Any})
precompile(Tuple{typeof(Base.Docs._docstr), Core.SimpleVector, Any})
precompile(Tuple{typeof(Base.:(==)), Module, WeakRef})
precompile(Tuple{typeof(Base.Docs.doc!), Module, Base.Docs.Binding, Base.Docs.DocStr, Any})
precompile(Tuple{typeof(Base.print_to_string), Expr})
precompile(Tuple{typeof(Base.string), Expr})
precompile(Tuple{typeof(Base.show_list), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Any, 1}, String, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.show_list), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Any, 1}, Symbol, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.show_enclosed_list), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Array{Any, 1}, String, String, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.show_generator), Base.GenericIOBuffer{Array{UInt8, 1}}, Expr, Int64})
precompile(Tuple{typeof(Base.show_list), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Any, 1}, Char, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.show_block), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Array{Any, 1}, Expr, Int64})
precompile(Tuple{typeof(Base.show_unquoted), Base.GenericIOBuffer{Array{UInt8, 1}}, Expr, Int64, Int64})
precompile(Tuple{typeof(Base.show_call), Base.GenericIOBuffer{Array{UInt8, 1}}, Symbol, Symbol, Array{Any, 1}, Int64})
precompile(Tuple{getfield(Printf, Symbol("#@sprintf")), LineNumberNode, Module, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.Printf.gen), String})
precompile(Tuple{typeof(Base.Printf._printf), String, Expr, String, Tuple{Expr, Expr}})
precompile(Tuple{typeof(Base.Printf._printf), String, Expr, String, Tuple{Symbol, Expr}})
precompile(Tuple{getfield(Base.Cartesian, Symbol("#@ncall")), LineNumberNode, Module, Int64, Any, Vararg{Any, N} where N})
precompile(Tuple{typeof(CSV.isvaliddelim), Char})
precompile(Tuple{typeof(Base._all), typeof(CSV.isvaliddelim), String, Base.Colon})
precompile(Tuple{typeof(CSV.checkvaliddelim), String})
precompile(Tuple{typeof(Mmap.mmap), String, Type{Array{UInt8, 1}}})
precompile(Tuple{typeof(CSV.getsource), String, Bool})
precompile(Tuple{typeof(CSV.skiptorow), CSV.ReversedBuf, Int64, Int64, UInt8, UInt8, UInt8, Int64, Int64})
precompile(Tuple{typeof(CSV.skiptorow), Array{UInt8, 1}, Int64, Int64, UInt8, UInt8, UInt8, Int64, Int64})
precompile(Tuple{typeof(CSV.checkcommentandemptyline), Array{UInt8, 1}, Int64, Int64, Nothing, Bool})
precompile(Tuple{typeof(CSV.detectheaderdatapos), Array{UInt8, 1}, Int64, Int64, UInt8, UInt8, UInt8, Nothing, Bool, Int64, Int64})
precompile(Tuple{typeof(CSV.detectdelimandguessrows), Array{UInt8, 1}, Int64, Int64, Int64, UInt8, UInt8, UInt8, UInt8, Nothing, Bool})
precompile(Tuple{Type{Parsers.Options{ignorerepeated, Q, debug, S, D, DF} where DF where D where S where debug where Q where ignorerepeated}, Base.Missing, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, Nothing, Nothing, Nothing, Bool, Bool, Bool, Bool, Bool})
precompile(Tuple{typeof(Base.sort!), Array{Base.Pair{String, UInt64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(CSV, Symbol("#21#29"))}})
precompile(Tuple{typeof(Base.sort!), Array{Base.Pair{String, UInt64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.By{getfield(CSV, Symbol("#21#29"))}, Array{Base.Pair{String, UInt64}, 1}})
precompile(Tuple{typeof(Random.make_seed)})
precompile(Tuple{Type{Random.MersenneTwister}, Nothing})
precompile(Tuple{typeof(Random.default_rng), Int64})
precompile(Tuple{typeof(Base.rand), Type{Bool}})
precompile(Tuple{getfield(CSV, Symbol("#22#30")){Array{UInt8, 1}, UInt8, Array{Type, 1}, Array{Union{Nothing, Array{String, 1}}, 1}, Int64}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(CSV, Symbol("#22#30")){Array{UInt8, 1}, UInt8, Array{Type, 1}, Array{Union{Nothing, Array{String, 1}}, 1}, Int64}}})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Any, Any}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}})
precompile(Tuple{typeof(Base._all), getfield(Base, Symbol("#240#242")), Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}, Base.Colon})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{Base.Pair{String, UInt64}, 1}, getfield(CSV, Symbol("#20#28"))}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Base.Generator{Array{String, 1}, typeof(Parsers.ptrlen)}, Int64, Int64})
precompile(Tuple{typeof(Base._collect), Array{String, 1}, Base.Generator{Array{String, 1}, typeof(Parsers.ptrlen)}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Parsers, Symbol("#1#2"))}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.By{getfield(Parsers, Symbol("#1#2"))}, Array{Tuple{Ptr{UInt8}, Int64}, 1}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.ReverseOrdering{Base.Order.By{getfield(Parsers, Symbol("#1#2"))}}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.ReverseOrdering{Base.Order.By{getfield(Parsers, Symbol("#1#2"))}}, Array{Tuple{Ptr{UInt8}, Int64}, 1}})
precompile(Tuple{typeof(Parsers.prepare), Array{String, 1}})
precompile(Tuple{Type{Parsers.Options{ignorerepeated, Q, debug, S, D, DF} where DF where D where S where debug where Q where ignorerepeated}, Array{String, 1}, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, Nothing, Nothing, Nothing, Bool, Bool, Bool, Bool, Bool})
precompile(Tuple{Type{Parsers.Options{ignorerepeated, Q, debug, S, D, DF} where DF where D where S where debug where Q where ignorerepeated}, Base.Missing, UInt8, UInt8, UInt8, UInt8, UInt8, String, UInt8, Nothing, Nothing, Nothing, Bool, Bool, Bool, Bool, Bool})
precompile(Tuple{Type{Parsers.Options{ignorerepeated, Q, debug, S, D, DF} where DF where D where S where debug where Q where ignorerepeated}, Array{String, 1}, UInt8, UInt8, UInt8, UInt8, UInt8, String, UInt8, Nothing, Nothing, Nothing, Bool, Bool, Bool, Bool, Bool})
precompile(Tuple{typeof(CSV.detectdelimandguessrows), Array{UInt8, 1}, Int64, Int64, Int64, UInt8, UInt8, UInt8, String, Nothing, Bool})
precompile(Tuple{typeof(CSV.file), String, Int64, Bool, Int64, Nothing, Int64, Int64, Bool, Nothing, Bool, Bool, Array{String, 1}, String, String, Bool, Char, Nothing, Nothing, Char, Nothing, UInt8, Nothing, Nothing, Nothing, Nothing, Base.Dict{Int8, Int8}, Bool, Float64, Bool, Bool, Nothing, Bool, Bool, Nothing})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:header, :normalizenames, :delim, :quotechar, :escapechar, :categorical, :strict), Tuple{Int64, Bool, String, Char, Char, Bool, Bool}}, Type{CSV.File{threaded} where threaded}, String})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{AbstractArray{T, 1} where T, 1}, Base.IndexLinear, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("##make_unique!#1")), Bool, typeof(DataFrames.make_unique!), Array{Symbol, 1}, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{AbstractArray{T, 1} where T, 1}, getfield(DataFrames, Symbol("#100#103"))}})
precompile(Tuple{getfield(DataFrames, Symbol("#DataFrame#99#102")), Bool, Type{DataFrames.DataFrame}, Array{AbstractArray{T, 1} where T, 1}, DataFrames.Index})
precompile(Tuple{getfield(DataFrames, Symbol("##DataFrame#114")), Bool, Bool, Type{DataFrames.DataFrame}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}, Array{Symbol, 1}})
precompile(Tuple{getfield(CSV, Symbol("#kw##read")), NamedTuple{(:header, :normalizenames, :delim, :quotechar, :escapechar, :categorical, :strict), Tuple{Int64, Bool, String, Char, Char, Bool, Bool}}, typeof(CSV.read), String})
precompile(Tuple{typeof(Mmap.grow!), Base.IOStream, Int64, Int64})
precompile(Tuple{getfield(Mmap, Symbol("##mmap#1")), Bool, Bool, typeof(Mmap.mmap), Base.IOStream, Type{Array{UInt8, 1}}, Tuple{Int64}, Int64})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Mmap, Symbol("#7#8")){Array{UInt8, 1}, Bool, Bool, Tuple{Int64}, Int64}, String, Vararg{String, N} where N})
precompile(Tuple{Type{Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}}, Array{String, 1}, Base.Missing, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, Nothing, Nothing, Nothing, Bool, Bool})
precompile(Tuple{typeof(Base.collect_to!), Array{Symbol, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(CSV, Symbol("#8#11"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(CSV, Symbol("#8#11"))}})
precompile(Tuple{typeof(CSV.unescape), CSV.PointerString, UInt8})
precompile(Tuple{typeof(CSV.columnname), Array{UInt8, 1}, Int64, Int64, Int16, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64})
precompile(Tuple{typeof(Base.map), getfield(CSV, Symbol("#4#5")), Base.SubString{String}})
precompile(Tuple{typeof(CSV.normalizename), String})
precompile(Tuple{typeof(Base.collect_to!), Array{Symbol, 1}, Base.Generator{Array{String, 1}, getfield(CSV, Symbol("#9#12")){Bool}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{String, 1}, getfield(CSV, Symbol("#9#12")){Bool}}})
precompile(Tuple{typeof(CSV.makeunique), Array{Symbol, 1}})
precompile(Tuple{typeof(CSV.detectcolumnnames), Array{UInt8, 1}, Int64, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Bool})
precompile(Tuple{getfield(Parsers, Symbol("##s52#15")), Any, Any, Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Dates.character_codes), Type{Dates.DateFormat{Symbol("yyyy-mm-dd"), Tuple{Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Parsers, Symbol("#16#17")), Tuple{DataType, DataType, DataType}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{Type{Tuple}, Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Type, 1}, getfield(Parsers, Symbol("#19#20"))}})
precompile(Tuple{getfield(Parsers, Symbol("##s52#18")), Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Dates._directives), Type{Dates.DateFormat{Symbol("yyyy-mm-dd"), Tuple{Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}}}}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Type, 1}, getfield(Parsers, Symbol("#19#20"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Array{Type, 1}, getfield(Parsers, Symbol("#19#20"))}, Int64})
precompile(Tuple{typeof(Dates.character_codes), Type{Dates.DateFormat{Symbol("yyyy-mm-dd\THH:MM:SS.s"), Tuple{Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x73000000)}}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Parsers, Symbol("#16#17")), Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{Type{Tuple}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Any, 1}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{typeof(Dates._directives), Type{Dates.DateFormat{Symbol("yyyy-mm-dd\THH:MM:SS.s"), Tuple{Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x73000000)}}}}})
precompile(Tuple{typeof(Dates.character_codes), Type{Dates.DateFormat{Symbol("HH:MM:SS.s"), Tuple{Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x73000000)}}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Parsers, Symbol("#16#17")), Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{Type{Tuple}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Any, 1}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{typeof(Dates._directives), Type{Dates.DateFormat{Symbol("HH:MM:SS.s"), Tuple{Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x73000000)}}}}})
precompile(Tuple{typeof(Parsers.codes), Int16})
precompile(Tuple{typeof(CSV.fatalerror), Array{UInt8, 1}, Int64, Int64, Int16, Int64, Int64})
precompile(Tuple{typeof(CSV.reallocatetape), Int64, Int64, Int64})
precompile(Tuple{typeof(CSV.notenoughcolumns), Int64, Int64, Int64})
precompile(Tuple{typeof(CSV.toomanycolumns), Int64, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{String, UInt64}, CSV.PointerString})
precompile(Tuple{typeof(Base.power_by_squaring), Int64, Int64})
precompile(Tuple{typeof(Parsers.pow10), Type{Float64}, Int64})
precompile(Tuple{typeof(Parsers.roundQuotient), Base.GMP.BigInt, Base.GMP.BigInt})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Int64, Int64})
precompile(Tuple{typeof(Parsers.BigInt!), Base.GMP.BigInt, Int128})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Int128, Int64})
precompile(Tuple{typeof(Parsers.pow10), Type{Float64}, Int128})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Int128, Int128})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Base.GMP.BigInt, Int64})
precompile(Tuple{typeof(Parsers.pow10), Type{Float64}, Base.GMP.BigInt})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Base.GMP.BigInt, Base.GMP.BigInt})
precompile(Tuple{typeof(Parsers._typeparser), Type{Float64}, Array{UInt8, 1}, Int64, Int64, UInt8, Int16, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Type{Base.GMP.BigInt}})
precompile(Tuple{typeof(Parsers._typeparser), Type{Float64}, Array{UInt8, 1}, Int64, Int64, UInt8, Int16, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Type{Int128}})
precompile(Tuple{typeof(CSV.detect), Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Base.Dict{Int8, Int8}, Float64, Array{Base.Dict{String, UInt64}, 1}, Array{UInt64, 1}, Array{Int64, 1}, Bool, Array{Int8, 1}, Bool, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Float64}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Dates.Date}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Dates.DateTime}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Dates.Time}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Bool}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsetape), Base.Val{false}, Bool, Int64, Base.Dict{Int8, Int8}, Array{Array{UInt64, 1}, 1}, Array{Array{UInt64, 1}, 1}, Array{UInt8, 1}, Int64, Int64, Int64, Nothing, Array{Int64, 1}, Float64, Array{Base.Dict{String, UInt64}, 1}, Array{UInt64, 1}, Int64, Array{Int8, 1}, Array{Int64, 1}, Bool, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Bool})
precompile(Tuple{typeof(Base.nonmissingtype), Type{CSV.PooledString}})
precompile(Tuple{typeof(CSV.sentinelvalue), Type{CSV.PooledString}})
precompile(Tuple{Type{CSV.Column{String, CSV.PooledString}}, Array{UInt64, 1}, Int64, UInt8, Bool, Array{String, 1}, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(Base.nonmissingtype), Type{Union{Base.Missing, CSV.PooledString}}})
precompile(Tuple{Type{CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}}, Array{UInt64, 1}, Int64, UInt8, Bool, Array{String, 1}, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(CSV._eltype), Type{Union{Base.Missing, Float64}}})
precompile(Tuple{Type{CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}}, Array{UInt64, 1}, Int64, UInt8, Bool, Nothing, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(CSV._eltype), Type{Dates.Date}})
precompile(Tuple{Type{CSV.Column{Dates.Date, Dates.Date}}, Array{UInt64, 1}, Int64, UInt8, Bool, Nothing, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(CSV._eltype), Type{Int64}})
precompile(Tuple{typeof(CSV.uint64), Int64})
precompile(Tuple{Type{CSV.Column{Int64, Int64}}, Array{UInt64, 1}, Int64, UInt8, Bool, Nothing, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(CSV._eltype), Type{Union{Base.Missing, Int64}}})
precompile(Tuple{Type{CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}}, Array{UInt64, 1}, Int64, UInt8, Bool, Nothing, Array{UInt8, 1}, UInt64})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{String, CSV.PooledString}}})
precompile(Tuple{Type{Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}}})
precompile(Tuple{typeof(Base.empty), Base.Dict{Any, Any}, Type{Symbol}, Type{CSV.Column{String, CSV.PooledString}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, CSV.Column{String, CSV.PooledString}, Symbol})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}, Tuple{Int64, Int64}})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}}})
precompile(Tuple{Type{Base.Dict{Symbol, CSV.Column{T, P} where P where T}}})
precompile(Tuple{typeof(Base.empty), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, Type{Symbol}, Type{CSV.Column{T, P} where P where T}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{String, CSV.PooledString}, Symbol})
precompile(Tuple{typeof(Base.merge!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Symbol})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}, Tuple{Int64, Int64}})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Symbol})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Dates.Date, Dates.Date}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Dates.Date, Dates.Date}, Symbol})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Int64, Int64}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Int64, Int64}, Symbol})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Symbol})
precompile(Tuple{Type{Base.Dict{Symbol, AbstractArray{T, 1} where T}}, Base.Dict{Symbol, CSV.Column{T, P} where P where T}})
precompile(Tuple{Type{CSV.File{false}}, String, Array{Symbol, 1}, Array{Type, 1}, Int64, Int64, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}, Base.Dict{Symbol, CSV.Column{T, P} where P where T}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{String, CSV.PooledString}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Int64, Int64}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Dates.Date, Dates.Date}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{String, CSV.PooledString}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Dates.Date, Dates.Date}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Int64, Int64}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Int64})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{String, CSV.PooledString}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{AbstractArray{T, 1} where T, 1}, getfield(DataFrames, Symbol("#100#103"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Array{AbstractArray{T, 1} where T, 1}, getfield(DataFrames, Symbol("#100#103"))}, Int64})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Dates.Date, Dates.Date}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Int64, Int64}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}})
precompile(Tuple{typeof(DataFrames.nrow), DataFrames.DataFrame})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Int64, Symbol}, 1}, Base.Generator{Base.KeySet{Symbol, Base.Dict{Symbol, Int64}}, getfield(DataFrames, Symbol("#15#20")){String}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.KeySet{Symbol, Base.Dict{Symbol, Int64}}, getfield(DataFrames, Symbol("#15#20")){String}}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataFrames, Symbol("#16#21")){Array{Tuple{Int64, Symbol}, 1}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(DataFrames, Symbol("#16#21")){Array{Tuple{Int64, Symbol}, 1}}}})
precompile(Tuple{typeof(Base.grow_to!), Array{Symbol, 1}, Base.Generator{Base.Iterators.Filter{getfield(DataFrames, Symbol("#19#24")){Int64}, Array{Tuple{Int64, Symbol}, 1}}, getfield(DataFrames, Symbol("#18#23"))}, Int64})
precompile(Tuple{typeof(Base.grow_to!), Array{Symbol, 1}, Base.Generator{Base.Iterators.Filter{getfield(DataFrames, Symbol("#19#24")){Int64}, Array{Tuple{Int64, Symbol}, 1}}, getfield(DataFrames, Symbol("#18#23"))}})
precompile(Tuple{typeof(DataFrames.fuzzymatch), Base.Dict{Symbol, Int64}, Symbol})
precompile(Tuple{getfield(Main, Symbol("#3#4")), DataFrames.DataFrameRow{DataFrames.DataFrame, DataFrames.Index}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#3#4"))}}, Tuple{Base.OneTo{Int64}, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#3#4"))}}})
precompile(Tuple{typeof(Base.filter), getfield(Main, Symbol("#3#4")), DataFrames.DataFrame})
precompile(Tuple{typeof(Base.length), CSV.Column{String, CSV.PooledString}})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrameRow{DataFrames.DataFrame, DataFrames.Index}, Symbol})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{String, CSV.PooledString}, Tuple{Int64}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{String, CSV.PooledString}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{String, CSV.PooledString}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{String, CSV.PooledString}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Tuple{Int64}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Dates.Date, Dates.Date}, Tuple{Int64}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Dates.Date, Dates.Date}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Dates.Date, Dates.Date}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Dates.Date, Dates.Date}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Int64, Int64}, Tuple{Int64}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Int64, Int64}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Int64, Int64}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Int64, Int64}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Array{Int64, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{String, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Union{Base.Missing, String}, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Union{Base.Missing, Float64}, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Dates.Date, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Int64, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{getfield(Main, Symbol("#5#6")), DataFrames.DataFrameRow{DataFrames.DataFrame, DataFrames.Index}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#5#6"))}}, Tuple{Base.OneTo{Int64}, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#5#6"))}}})
precompile(Tuple{typeof(Base.filter), getfield(Main, Symbol("#5#6")), DataFrames.DataFrame})
precompile(Tuple{Type{Measures.Length{U, T} where T where U}, Symbol, Float64})
precompile(Tuple{typeof(Base.:(*)), Int64, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Measures.Length{:mm, Float64}}, Float64})
precompile(Tuple{Type{NamedTuple{(:point_size, :line_width, :major_label_font_size, :minor_label_font_size, :point_label_font_size, :key_title_font_size, :key_label_font_size), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Gadfly.current_theme)})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:point_size, :line_width, :major_label_font_size, :minor_label_font_size, :point_label_font_size, :key_title_font_size, :key_label_font_size), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Gadfly.Theme}, Gadfly.Theme})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##style")), NamedTuple{(:point_size, :line_width, :major_label_font_size, :minor_label_font_size, :point_label_font_size, :key_title_font_size, :key_label_font_size), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, typeof(Gadfly.style)})
precompile(Tuple{getfield(Gadfly, Symbol("##Theme#58")), ColorTypes.LCHab{Float32}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Function, Function, Array{Function, 1}, Measures.Length{:mm, Float64}, Array{Symbol, 1}, Array{Float64, 1}, Nothing, Nothing, Float64, Nothing, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Int64, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, typeof(Gadfly.default_stroke_color), Measures.Length{:mm, Float64}, typeof(Gadfly.default_discrete_highlight_color), typeof(Gadfly.default_continuous_highlight_color), typeof(Gadfly.default_lowlight_color), typeof(Gadfly.default_middle_color), Measures.Length{:mm, Float64}, Symbol, Symbol, typeof(Gadfly.Shape.square), Nothing, Nothing, Symbol, Nothing, Measures.Length{:mm, Float64}, Int64, Float64, Float64, Float64, Measures.Length{:mm, Float64}, Int64, Gadfly.Scale.DiscreteColorScale, Gadfly.Scale.ContinuousColorScale, Type{Gadfly.Theme}, Gadfly.Theme})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, typeof(Base.:(!)), Symbol})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.min), Base.IndexLinear, Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.minimum), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:xmin, :ymin), Tuple{Int64, Int64}}, Type{Gadfly.Coord.Cartesian}})
precompile(Tuple{typeof(Base.vect), Int64, Vararg{Any, N} where N})
precompile(Tuple{getfield(Gadfly.Geom, Symbol("#kw##smooth")), NamedTuple{(:method, :smoothing), Tuple{Symbol, Float64}}, typeof(Gadfly.Geom.smooth)})
precompile(Tuple{typeof(Gadfly.cleanmapping), Base.Dict{Symbol, Symbol}})
precompile(Tuple{Type{Gadfly.Plot}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Col.GroupedColumn, 1}, getfield(Gadfly, Symbol("#116#118")){Base.Set{Symbol}}}})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Int64}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Int64}, Int64, Symbol})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(DataFrames, Symbol("#100#103"))}})
precompile(Tuple{getfield(DataFrames, Symbol("#DataFrame#99#102")), Bool, Type{DataFrames.DataFrame}, Array{Any, 1}, DataFrames.Index})
precompile(Tuple{typeof(Base.throw_boundserror), DataFrames.DataFrameColumns{DataFrames.DataFrame, AbstractArray{T, 1} where T}, Tuple{Int64}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.eltype), Tuple{Base.Broadcast.Extruded{DataFrames.DataFrameColumns{DataFrames.DataFrame, AbstractArray{T, 1} where T}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Gadfly.meltdata), DataFrames.DataFrame, Array{Gadfly.Col.GroupedColumn, 1}})
precompile(Tuple{typeof(Gadfly._evalmapping!), Base.Dict{Symbol, Any}, DataFrames.DataFrame, Gadfly.Data})
precompile(Tuple{typeof(Gadfly._evalmapping!), Base.Dict{Symbol, Any}, Gadfly.MeltedData{DataFrames.DataFrame}, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.evalmapping!), Base.Dict{Symbol, Any}, DataFrames.DataFrame, Gadfly.Data})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Plot, Symbol, DataFrames.DataFrame})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Gadfly.plot), DataFrames.DataFrame, Base.Dict{Symbol, Symbol}, Gadfly.Coord.Cartesian, Gadfly.Geom.LineGeometry, Gadfly.Theme})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##plot")), NamedTuple{(:x, :y, :color), Tuple{Symbol, Symbol, Symbol}}, typeof(Gadfly.plot), DataFrames.DataFrame, Gadfly.Coord.Cartesian, Gadfly.Geom.LineGeometry, Gadfly.Theme})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Base.Colon, Symbol})
precompile(Tuple{typeof(Gadfly.evalmapping), DataFrames.DataFrame, Symbol})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, AbstractString}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, AbstractString}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractString}, String, Symbol})
precompile(Tuple{typeof(Base.convert), Type{Any}, DataFrames.DataFrame})
precompile(Tuple{typeof(Base.eltype), Type{C}} where C<:(ColorTypes.Colorant{T, N} where N where T))
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Colorant{T, N}}} where N where T)
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.ColorAlpha{ColorTypes.RGB{Float64}, Float64, 4}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGBA{Float64}}})
precompile(Tuple{typeof(ColorTypes.basetype), Type{T} where T})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.RGBA{Float64}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.ColorAlpha{ColorTypes.RGB{Float64}, Float64, 4}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.RGBA{Float64}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.ColorAlpha{ColorTypes.RGB{T}, T, 4} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.RGBA{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Compose.PDF), String, Vararg{Any, N} where N})
precompile(Tuple{getfield(Compose, Symbol("##PDF#135")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Compose.PDF), String, Vararg{Any, N} where N})
precompile(Tuple{typeof(Cairo.write_to_stream_callback), Base.IOStream, Ptr{UInt8}, UInt32})
precompile(Tuple{typeof(Base.:(==)), WeakRef, Nothing})
precompile(Tuple{Type{Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}}})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:width, :height, :owns_surface, :emit_on_finish, :ppmm, :ownedfile, :filename), Tuple{Float64, Float64, Bool, Bool, Float64, Bool, String}}, Type{Compose.Image{Compose.PDFBackend}}, Cairo.CairoSurfaceIOStream{UInt32}, Cairo.CairoContext, Base.IOStream})
precompile(Tuple{getfield(Compose, Symbol("##_#131")), Int64, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:ownedfile, :filename), Tuple{Bool, String}}}, Type{Compose.Image{Compose.PDFBackend}}, Base.IOStream, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Bool})
precompile(Tuple{Type{Compose.Image{Compose.PDFBackend}}, String, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AbstractRGB{FixedPointNumbers.Normed{UInt8, 8}}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}}})
precompile(Tuple{typeof(Base.convert), Type{ColorTypes.RGBA{Float64}}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{getfield(Compose, Symbol("##_#130")), Float64, Float64, ColorTypes.RGBA{Float64}, ColorTypes.RGBA{Float64}, Array{Any, 1}, Compose.LineCapButt, Compose.LineJoinMiter, Bool, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Nothing, Bool, Array{Compose.ImagePropertyState, 1}, Array{Compose.ImagePropertyFrame, 1}, Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Bool, Bool, String, Bool, Bool, Float64, Nothing, Nothing, Type{Compose.Image{Compose.PDFBackend}}, Cairo.CairoSurfaceIOStream{UInt32}, Cairo.CairoContext, Base.IOStream})
precompile(Tuple{typeof(Base.allocatedinline), Type{Gadfly.StatisticElement}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Gadfly.Data, 1}}})
precompile(Tuple{typeof(Base.allocatedinline), Type{Gadfly.Data}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Gadfly.Aesthetics, 1}}})
precompile(Tuple{typeof(Base.allocatedinline), Type{Gadfly.Aesthetics}})
precompile(Tuple{Type{StaticArrays.Size{S} where S}, Int64})
precompile(Tuple{Type{StaticArrays.Size{(1,)}}})
precompile(Tuple{getfield(StaticArrays, Symbol("##s19#12")), Any, Any, Any, Any})
precompile(Tuple{typeof(StaticArrays.tuple_length), Type{Tuple{1}}})
precompile(Tuple{typeof(StaticArrays.tuple_prod), Type{Tuple{1}}})
precompile(Tuple{getfield(StaticArrays, Symbol("##s19#6")), Any, Any, Any, Any, Any, Type{T} where T, Type{T} where T, Type{T} where T, Any})
precompile(Tuple{typeof(Base._all), getfield(StaticArrays, Symbol("#7#8")), Core.SimpleVector, Base.Colon})
precompile(Tuple{typeof(StaticArrays.tuple_minimum), Type{Tuple{1}}})
precompile(Tuple{getfield(StaticArrays, Symbol("##s19#2")), Any, Any, Any, Any, Any})
precompile(Tuple{getfield(StaticArrays, Symbol("#3#4")), Int64})
precompile(Tuple{typeof(Base.ntuple), getfield(StaticArrays, Symbol("#3#4")), Base.Val{1}})
precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{Tuple{1}}})
precompile(Tuple{typeof(Base.prod), StaticArrays.Size{(1,)}})
precompile(Tuple{typeof(StaticArrays._axes), StaticArrays.Size{(1,)}})
precompile(Tuple{typeof(Base.iterate), StaticArrays.SOneTo{1}})
precompile(Tuple{typeof(Base.eltype), Type})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AbstractRGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AlphaColor{ColorTypes.RGB{T}, T, 4} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.ARGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.ARGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.AlphaColor{ColorTypes.RGB{T}, T, 4} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.ARGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}})
precompile(Tuple{Type{Gadfly.Coord.Cartesian}, Array{Symbol, 1}, Array{Symbol, 1}, Nothing, Nothing, Nothing, Nothing, Bool, Bool, Bool, Nothing, Bool})
precompile(Tuple{Type{Gadfly.Coord.Cartesian}})
precompile(Tuple{typeof(Base.mapreduce_impl), getfield(Gadfly, Symbol("#85#97")){Base.Set{Symbol}}, typeof(Base.:(|)), Array{Symbol, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), getfield(Gadfly, Symbol("#85#97")){Base.Set{Symbol}}, typeof(Base.:(|)), Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{Type{Base.Dict{Symbol, Gadfly.ScaleElement}}})
precompile(Tuple{typeof(Base.copyto!), Array{Gadfly.StatisticElement, 1}, Int64, Array{Gadfly.StatisticElement, 1}, Int64, Int64})
precompile(Tuple{typeof(Base._collect), Array{Gadfly.StatisticElement, 1}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, getfield(Base, Symbol("#3#4")){getfield(Gadfly, Symbol("#87#100")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#89#102")){Gadfly.Plot}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#90#103")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}})
precompile(Tuple{Type{Base.Dict{Gadfly.StatisticElement, Nothing}}})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.XTicks})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Gadfly.StatisticElement, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.StatisticElement, Nothing}, Gadfly.Stat.Identity})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Gadfly.StatisticElement, Nothing}, Nothing, Gadfly.Stat.Identity})
precompile(Tuple{getfield(Gadfly, Symbol("#92#105")){Gadfly.Plot, Array{Gadfly.Data, 1}}, Array{Symbol, 1}, String})
precompile(Tuple{Type{Base.Dict{Gadfly.ScaleElement, Int64}}})
precompile(Tuple{typeof(Base.vcat), Array{Gadfly.Data, 1}, Array{Gadfly.Data, 1}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, Gadfly.ScaleElement}, Symbol})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, Gadfly.ScaleElement}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, Gadfly.ScaleElement}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Scale.DiscreteColorScale, Symbol})
precompile(Tuple{typeof(Base.copyto!), Array{Gadfly.StatisticElement, 1}, Base.Set{Gadfly.StatisticElement}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Base.Missing, Base.Generator{Array{Gadfly.Aesthetics, 1}, getfield(Gadfly, Symbol("#93#106")){Symbol}}, Int64})
precompile(Tuple{typeof(Base.convert), Type{Base.Missing}, Bool})
precompile(Tuple{typeof(Base.setindex!), Array{Base.Missing, 1}, Bool, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.Missing, 1}, Bool, Base.Generator{Array{Gadfly.Aesthetics, 1}, getfield(Gadfly, Symbol("#93#106")){Symbol}}, Int64})
precompile(Tuple{getfield(Gadfly, Symbol("#93#106")){Symbol}, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Aesthetics, 1}, getfield(Gadfly, Symbol("#93#106")){Symbol}}})
precompile(Tuple{typeof(Base.map), getfield(DataStructures, Symbol("#82#83")){Int64}, Tuple{DataStructures.SparseIntSet, DataStructures.SparseIntSet}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.StatisticElement, Nothing}, Gadfly.Stat.TickStatistic})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Gadfly.StatisticElement, Nothing}, Nothing, Gadfly.Stat.TickStatistic})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.YTicks})
precompile(Tuple{typeof(Gadfly.scale_exists), Symbol, Symbol})
precompile(Tuple{typeof(Gadfly.get_scale), Symbol, Symbol, Gadfly.Theme})
precompile(Tuple{typeof(Base.mapreduce_impl), getfield(Gadfly, Symbol("#86#98")){Base.Set{Symbol}}, typeof(Base.:(|)), Array{Symbol, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), getfield(Gadfly, Symbol("#86#98")){Base.Set{Symbol}}, typeof(Base.:(|)), Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#82#94"))}, Int64})
precompile(Tuple{typeof(Gadfly.render_prepare), Gadfly.Plot})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Plot})
precompile(Tuple{typeof(Measures.width), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Measures.height), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.root_box), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{Type{Compose.Context}, Compose.Context})
precompile(Tuple{typeof(Compose.excise_vector_children!), Compose.Context})
precompile(Tuple{Type{Base.Dict{UInt64, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}}})
precompile(Tuple{Type{Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{UInt64, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{UInt64, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}, UInt64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt64, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}, UInt64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}, UInt64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, UInt64})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}, UInt64})
precompile(Tuple{typeof(Compose.optimize_batching), Compose.Context})
precompile(Tuple{typeof(Base.convert), Type{Compose.Transform}, Compose.Mirror})
precompile(Tuple{typeof(Base.convert), Type{Compose.Transform}, Compose.Shear})
precompile(Tuple{Type{Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Compose.isscalar), Tuple{Base.Broadcast.Extruded{Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{Type{Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Base.Generator{Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, getfield(Compose, Symbol("#137#139"))}})
precompile(Tuple{Type{Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Base.Generator{Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, getfield(Compose, Symbol("#138#140"))}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Type{T} where T})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base._delete!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64})
precompile(Tuple{Type{Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}}, Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}})
precompile(Tuple{typeof(Compose.save_property_state), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Compose.push_property_frame), Compose.Image{Compose.PDFBackend}, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}})
precompile(Tuple{typeof(Compose.canbatch), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Int64, Int64, Compose.Container}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Int64, Int64, Compose.Container}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.ForwardOrdering, Array{Tuple{Int64, Int64, Compose.Container}, 1}})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, Nothing})
precompile(Tuple{typeof(Compose.restore_property_state), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.pop_property_frame), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.Context, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.finish), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Context})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Gadfly.Plot})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Layer, Symbol, DataFrames.DataFrame})
precompile(Tuple{typeof(Gadfly.element_coordinate_type), Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Base.vect), Gadfly.Stat.SmoothStatistic})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Gadfly.StatisticElement, 1}, Base.IndexLinear, Array{Gadfly.Stat.SmoothStatistic, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Gadfly.Stat.SmoothStatistic, 1}, Int64})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Base.mapreduce_impl), getfield(Gadfly, Symbol("#83#95")){Array{Symbol, 1}}, typeof(Base.:(|)), Array{Symbol, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), getfield(Gadfly, Symbol("#83#95")){Array{Symbol, 1}}, typeof(Base.:(|)), Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.mapreduce_impl), getfield(Gadfly, Symbol("#84#96")){Array{Symbol, 1}}, typeof(Base.:(|)), Array{Symbol, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), getfield(Gadfly, Symbol("#84#96")){Array{Symbol, 1}}, typeof(Base.:(|)), Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{typeof(Gadfly.input_aesthetics), Gadfly.Stat.SmoothStatistic})
precompile(Tuple{typeof(Base._similar_for), Array{Gadfly.StatisticElement, 1}, Type{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64})
precompile(Tuple{typeof(Base._array_for), Type{Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}, Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, 1}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, getfield(Base, Symbol("#3#4")){getfield(Gadfly, Symbol("#87#100")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}}, Int64, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, getfield(Base, Symbol("#3#4")){getfield(Gadfly, Symbol("#87#100")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base._array_for), Type{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}}, Array{Gadfly.Layer, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#90#103")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#90#103")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64})
precompile(Tuple{typeof(Base.Iterators.flatten), Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Tuple{}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Int64})
precompile(Tuple{typeof(Gadfly.default_scales), Gadfly.Geom.LineGeometry, Gadfly.Theme})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Tuple{Int64, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Int64})
precompile(Tuple{typeof(Gadfly.default_scales), Gadfly.Stat.SmoothStatistic, Gadfly.Theme})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Tuple{Int64, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Int64}})
precompile(Tuple{typeof(Gadfly.classify_data), Array{String, 1}})
precompile(Tuple{typeof(Base.methods), Any, Any})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Scale.DiscreteColorScale})
precompile(Tuple{typeof(Gadfly.classify_data), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:numerical}, Base.Val{:y}, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Scale.ContinuousScale, Symbol})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:numerical}, Base.Val{:x}, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:categorical}, Base.Val{:group}, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Scale.DiscreteScale})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Scale.DiscreteScale, Symbol})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:categorical}, Base.Val{:linestyle}, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.PanelBackground})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.QuestionMark})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.HelpScreen})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.CrossHair})
precompile(Tuple{getfield(Gadfly.Stat, Symbol("#kw##xticks")), NamedTuple{(:ticks,), Tuple{Symbol}}, typeof(Gadfly.Stat.xticks)})
precompile(Tuple{getfield(Gadfly.Stat, Symbol("#kw##yticks")), NamedTuple{(:ticks,), Tuple{Symbol}}, typeof(Gadfly.Stat.yticks)})
precompile(Tuple{getfield(Gadfly, Symbol("#91#104")){Base.Set{Symbol}, Base.Set{Symbol}}, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.iterate), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Gadfly.Scale.apply_scales), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.Scale.apply_scales), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Gadfly.Data})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Gadfly.ScaleElement, Int64}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteScale})
precompile(Tuple{typeof(Base.get!), getfield(Base, Symbol("#243#244")){Int64}, Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteScale})
precompile(Tuple{typeof(Base.get!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteScale, Int64})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.DiscreteScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Base.get!), getfield(Base, Symbol("#243#244")){Int64}, Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Base.get!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.ContinuousScale, Int64})
precompile(Tuple{typeof(Gadfly.Scale.make_labeler), Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.ContinuousScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.isconcrete), Int64})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale_typed!), Array{Int64, 1}, Array{Union{Base.Missing, Int64}, 1}, Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteColorScale})
precompile(Tuple{typeof(Base.get!), getfield(Base, Symbol("#243#244")){Int64}, Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteColorScale})
precompile(Tuple{typeof(Base.get!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteColorScale, Int64})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.DiscreteColorScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(OrderedCollections.rehash!), OrderedCollections.OrderedDict{Any, Nothing}, Int64})
precompile(Tuple{typeof(OrderedCollections.ht_keyindex2), OrderedCollections.OrderedDict{Any, Nothing}, String})
precompile(Tuple{typeof(OrderedCollections._setindex!), OrderedCollections.OrderedDict{Any, Nothing}, Nothing, String, Int64})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{Any, Nothing}, Nothing, String})
precompile(Tuple{typeof(Base.push!), OrderedCollections.OrderedSet{Any}, String})
precompile(Tuple{typeof(OrderedCollections.hashindex), String, Int64})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedSet{Any}})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedSet{Any}, Int64})
precompile(Tuple{typeof(Base.allocatedinline), Type{ColorTypes.LCHab{Float32}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Color{Float64, 3}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LCHab{Float64}}})
precompile(Tuple{typeof(ColorTypes.issupported), Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Lab{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.XYZ{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Color{T, 3} where T<:AbstractFloat}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LCHab{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AbstractRGB{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB{Float64}}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.LCHab{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(ColorTypes.issupported), Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, Type{Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LMS{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.LMS{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(ColorTypes.issupported), Type{ColorTypes.LMS{T} where T<:AbstractFloat}, Type{Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LMS{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Color{Float32, 3}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LCHab{Float32}}})
precompile(Tuple{typeof(ColorTypes.issupported), Type{ColorTypes.LMS{T} where T<:AbstractFloat}, Type{Float32}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.XYZ{Float32}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Lab{Float32}}})
precompile(Tuple{typeof(Base._linspace1), Type{Float64}, Float64, Float64, Int64})
precompile(Tuple{typeof(Base._linspace), Type{Float64}, Int64, Int64, Int64, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.LCHab{Float32}, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LCHab{Float64}}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Colors.interpolate_table), Array{Float64, 2}, Float64, Float64, Int64})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LMS{Float64}}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(Colors.deuteranopic), ColorTypes.Lab{Float64}, Float64, ColorTypes.LMS{Float32}})
precompile(Tuple{typeof(Base.copyto!), Array{ColorTypes.LCHab{Float32}, 1}, Int64, Array{ColorTypes.LCHab{Float32}, 1}, Int64, Int64})
precompile(Tuple{typeof(Colors.deuteranopic), ColorTypes.LCHab{Float32}, Float64, ColorTypes.LMS{Float32}})
precompile(Tuple{typeof(Colors._colordiff), ColorTypes.Lab{Float64}, ColorTypes.Lab{Float64}, Colors.DE_2000})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LCHab{Float32}}, ColorTypes.Lab{Float64}})
precompile(Tuple{getfield(Colors, Symbol("##distinguishable_colors#11")), Bool, getfield(Gadfly.Scale, Symbol("#51#52")), Array{Float64, 1}, Array{Float64, 1}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, typeof(Colors.distinguishable_colors), Int64, Array{ColorTypes.LCHab{Float32}, 1}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{ColorTypes.Color{T, N} where N where T, 1}, Base.IndexLinear, Array{ColorTypes.LCHab{Float32}, 1}})
precompile(Tuple{typeof(Gadfly.Scale.default_discrete_colors), Int64})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float64}}, ColorTypes.Lab{Float64}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.RGB{Float64}}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.RGB{Float64}}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float64}}, ColorTypes.RGB{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.Lab{Float64}}, ColorTypes.XYZ{Float64}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.Lab{Float64}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, ColorTypes.RGB{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.LMS{Float64}}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float64}}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.Lab{Float64}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LMS{Float32}}, ColorTypes.XYZ{Float32}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.LMS{Float32}}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float32}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float32}}, ColorTypes.Lab{Float32}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.XYZ{Float32}}, Type{ColorTypes.XYZ{T} where T<:AbstractFloat}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float32}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LCHab{Float32}}, ColorTypes.Lab{Float32}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.LCHab{Float32}}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float32}}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.Lab{Float32}}, ColorTypes.XYZ{Float32}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.Lab{Float32}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AbstractRGB{Float32}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB{Float32}}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.RGB{Float32}}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{ColorTypes.RGB{Float32}, 1}, Base.IndexLinear, Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{typeof(Base.convert), Type{Array{ColorTypes.RGB{Float32}, 1}}, Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{ColorTypes.RGB{Float32}, 1}, ColorTypes.LCHab{Float32}, Int64})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.RGB{Float32}}, ColorTypes.XYZ{Float32}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.RGB{Float32}}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float32}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Scale, Symbol("#61#65")), Base.Iterators.Zip{Tuple{Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{ColorTypes.RGB{Float32}, String}, 1}, Tuple{ColorTypes.RGB{Float32}, String}, Base.Generator{Base.Iterators.Zip{Tuple{Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, getfield(Gadfly.Scale, Symbol("#61#65"))}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Zip{Tuple{Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, getfield(Gadfly.Scale, Symbol("#61#65"))}})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, String}}})
precompile(Tuple{typeof(Base.hash), ColorTypes.RGB{Float32}, UInt64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.RGB{Float32}, String}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.RGB{Float32}, String}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.RGB{Float32}, String}, String, ColorTypes.RGB{Float32}})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, String}}, Array{Tuple{ColorTypes.RGB{Float32}, String}, 1}})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Array{Tuple{ColorTypes.RGB{Float32}, String}, 1}})
precompile(Tuple{Type{Base.Iterators.Filter{F, I} where I where F}, getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Scale, Symbol("#63#68")), Base.Iterators.Filter{getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}}})
precompile(Tuple{typeof(Base.grow_to!), Array{String, 1}, Base.Generator{Base.Iterators.Filter{getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}}, getfield(Gadfly.Scale, Symbol("#63#68"))}, Int64})
precompile(Tuple{typeof(Base.grow_to!), Array{String, 1}, Base.Generator{Base.Iterators.Filter{getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}}, getfield(Gadfly.Scale, Symbol("#63#68"))}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Filter{getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}}, getfield(Gadfly.Scale, Symbol("#63#68"))}})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{String, 1}, Array{String, 1}})
precompile(Tuple{typeof(Gadfly.Scale.discretize), Array{String, 1}, Array{String, 1}})
precompile(Tuple{typeof(Base.getproperty), IndirectArrays.IndirectArray{String, 1, Array{Int64, 1}, Array{String, 1}}, Symbol})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{ColorTypes.RGB{Float32}, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.RGB{Float32}, 1}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, Int64}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.RGB{Float32}, Int64}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.RGB{Float32}, Int64}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.get!), getfield(Base, Symbol("#243#244")){Int64}, Base.Dict{ColorTypes.RGB{Float32}, Int64}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.get), Base.Dict{ColorTypes.RGB{Float32}, Int64}, ColorTypes.RGB{Float32}, Nothing})
precompile(Tuple{typeof(Base.indexin), Array{ColorTypes.RGB{Float32}, 1}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{ColorTypes.RGB{Float32}, 1}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{ColorTypes.RGB{Float32}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(OrderedCollections.rehash!), OrderedCollections.OrderedDict{Any, Any}, Int64})
precompile(Tuple{typeof(OrderedCollections.ht_keyindex2), OrderedCollections.OrderedDict{Any, Any}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections._setindex!), OrderedCollections.OrderedDict{Any, Any}, Int64, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{Any, Any}, Int64, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections.hashindex), ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{ColorTypes.RGB{Float32}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.isequal), ColorTypes.RGB{Float32}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}, Type{Nothing}})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Nothing, 1}, Nothing})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Array{Nothing, 1}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Array{Nothing, 1}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}}}})
precompile(Tuple{typeof(Base.:(==)), Nothing, WeakRef})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Array{Nothing, 1}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}}}}})
precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!), Base.BitArray{1}, Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Base.Missing, Int64, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Union{Base.Missing, Bool}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!), Array{Union{Base.Missing, Bool}, 1}, Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Base.Missing, Int64, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!), Base.BitArray{1}, Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Bool, Int64, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Gadfly.Aesthetics, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Gadfly.Aesthetics, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Gadfly.Aesthetics, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Gadfly.Aesthetics, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Gadfly.Data, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Gadfly.Data, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Gadfly.Data, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Gadfly.Data, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Gadfly.Aesthetics, 1}, Vararg{Any, N} where N})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}}}})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistics), Array{Gadfly.StatisticElement, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{Type{Core.Compiler.Signature}, Distances.Euclidean, Core.Compiler.Const, Array{Any, 1}, Type{T} where T})
precompile(Tuple{getfield(Base, Symbol("##s66#120")), Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Base.Grisu.fastfixedtoa), Float64, Int64, Int64, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float64, Int64, Int64, Array{UInt8, 1}, Array{Base.Grisu.Bignums.Bignum, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float64, Int64, Int64, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.Grisu._show), Base.GenericIOBuffer{Array{UInt8, 1}}, Float64, Int64, Int64, Bool, Bool})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Float64})
precompile(Tuple{typeof(Base.print_to_string), Float64})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistic), Gadfly.Stat.SmoothStatistic, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.undefined_aesthetics), Gadfly.Aesthetics, Symbol, Vararg{Symbol, N} where N})
precompile(Tuple{typeof(Base.filter), getfield(Gadfly, Symbol("#46#47")){Gadfly.Aesthetics}, Array{Symbol, 1}})
precompile(Tuple{typeof(Gadfly.assert_aesthetics_equal_length), String, Gadfly.Aesthetics, Symbol, Vararg{Symbol, N} where N})
precompile(Tuple{typeof(Base.:(!=)), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Nothing})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, Nothing}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.RGB{Float32}, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.RGB{Float32}, Nothing}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.RGB{Float32}, Nothing}, Nothing, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.RGB{Float32}, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.unique), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.unique), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{ColorTypes.RGB{Float32}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.copy), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.unaliascopy), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Any, Any}, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}}})
precompile(Tuple{typeof(Base._all), getfield(Base, Symbol("#240#242")), Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}}, Base.Colon})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}}})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}}})
precompile(Tuple{typeof(Base.empty), Base.Dict{Any, Any}, Type{ColorTypes.RGB{Float32}}, Type{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}}, Int64})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, Array{Int64, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, AbstractArray{T, 2} where T, AbstractArray{T, 1} where T, Distributions.Distribution{F, S} where S<:Distributions.ValueSupport where F<:Distributions.VariateForm, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Type{ColorTypes.RGB{Float32}}})
precompile(Tuple{typeof(Base._iterate), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.min), Base.IndexLinear, Array{Float64, 1}})
precompile(Tuple{typeof(Base.minimum), Array{Float64, 1}})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.max), Base.IndexLinear, Array{Float64, 1}})
precompile(Tuple{typeof(Base.maximum), Array{Float64, 1}})
precompile(Tuple{typeof(Loess.tnormalize!), Array{Float64, 2}, Float64})
precompile(Tuple{typeof(Distances.euclidean), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Loess.diameter), Array{Float64, 2}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Float64, 1}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#1#2")){Array{Float64, 2}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#1#2")){Array{Float64, 2}}}})
precompile(Tuple{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}, Int64})
precompile(Tuple{typeof(Base.Order.lt), Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}, Int64, Int64})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.PartialQuickSort{Int64}, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Sort.PartialQuickSort{Int64}, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}, Int64})
precompile(Tuple{typeof(Base.Order.lt), Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}, Int64, Int64})
precompile(Tuple{typeof(Base.sort!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Sort.PartialQuickSort{Base.UnitRange{Int64}}, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Loess.build_kdtree), Array{Float64, 2}, Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Float64, 2}, Int64, Float64, Base.Set{Array{Float64, 1}}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.PartialQuickSort{Base.UnitRange{Int64}}, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Loess.build_kdtree), Array{Float64, 2}, Array{Int64, 1}, Array{Float64, 2}, Int64, Float64, Base.Set{Array{Float64, 1}}})
precompile(Tuple{Type{Loess.KDTree{T} where T<:AbstractFloat}, Array{Float64, 2}, Float64, Float64})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#10#12")){Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#10#12")){Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.PartialQuickSort{Int64}, Base.Order.By{getfield(Loess, Symbol("#10#12")){Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#11#13")){Array{Float64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.getproperty), LinearAlgebra.QRPivoted{Float64, Array{Float64, 2}}, Symbol})
precompile(Tuple{typeof(LinearAlgebra.ldiv!), LinearAlgebra.QRPivoted{Float64, Array{Float64, 2}}, Array{Float64, 2}, Float64})
precompile(Tuple{typeof(LinearAlgebra.ldiv!), LinearAlgebra.QRPivoted{Float64, Array{Float64, 2}}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.:(\)), LinearAlgebra.QRPivoted{Float64, Array{Float64, 2}}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.:(\)), Array{Float64, 2}, Array{Float64, 1}})
precompile(Tuple{getfield(Loess, Symbol("##loess#9")), Bool, Float64, Int64, typeof(Loess.loess), Array{Float64, 2}, Array{Float64, 1}})
precompile(Tuple{getfield(Loess, Symbol("#kw##loess")), NamedTuple{(:span,), Tuple{Float64}}, typeof(Loess.loess), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{Type{Loess.KDInternalNode{Float64}}, Int64, Float64, Loess.KDLeafNode, Loess.KDLeafNode})
precompile(Tuple{Type{Loess.KDInternalNode{Float64}}, Int64, Float64, Loess.KDLeafNode, Loess.KDInternalNode{Float64}})
precompile(Tuple{Type{Loess.KDInternalNode{Float64}}, Int64, Float64, Loess.KDInternalNode{Float64}, Loess.KDInternalNode{Float64}})
precompile(Tuple{typeof(Loess.predict), Loess.LoessModel{Float64}, Array{Float64, 2}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Float64, 1}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#7#8")){Array{Float64, 2}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#7#8")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Loess.bounds_verts), Array{Float64, 2}})
precompile(Tuple{typeof(Loess.traverse), Loess.KDTree{Float64}, Array{Float64, 1}})
precompile(Tuple{typeof(Loess.evalpoly), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Loess.predict), Loess.LoessModel{Float64}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.getproperty), Loess.KDInternalNode{Float64}, Symbol})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float64, 1}, Float64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Float64, Array{Float64, 1}})
precompile(Tuple{Type{Distributions.TDist{T} where T<:Real}, Int64})
precompile(Tuple{typeof(Statistics.quantile), Distributions.TDist{Float64}, Float64})
precompile(Tuple{typeof(Base.fill!), Array{ColorTypes.RGB{Float32}, 1}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.fill), ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.allocatedinline), Type{ColorTypes.RGB{Float32}}})
precompile(Tuple{typeof(Base.copyto!), Array{ColorTypes.RGB{Float32}, 1}, Int64, Array{ColorTypes.RGB{Float32}, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.append!), Array{ColorTypes.RGB{Float32}, 1}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float64, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.unique), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{Type{NamedTuple{(:linestyle,), T} where T<:Tuple}, Tuple{Array{String, 1}}})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:linestyle,), Tuple{Array{String, 1}}}, Type{Gadfly.Data}}precompile(Tuple{typeof(Base.Printf.decode_hex), UInt64, Base.CodeUnits{UInt8, String}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.arg_decl_parts), Method})
precompile(Tuple{typeof(Base.show_method_params), Base.IOContext{Base.PipeEndpoint}, Array{Any, 1}})
precompile(Tuple{getfield(Base, Symbol("##show#393")), Nothing, typeof(Base.show), Base.IOContext{Base.PipeEndpoint}, Method})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.PipeEndpoint}, Core.MethodInstance})
precompile(Tuple{getfield(Base, Symbol("##show#379")), Symbol, typeof(Base.show), Base.IOContext{Base.PipeEndpoint}, Core.CodeInfo})
precompile(Tuple{typeof(Base.StackTraces.show_spec_linfo), Base.IOContext{Base.PipeEndpoint}, Base.StackTraces.StackFrame})
precompile(Tuple{getfield(Base.StackTraces, Symbol("##show#9")), Bool, typeof(Base.show), Base.IOContext{Base.PipeEndpoint}, Base.StackTraces.StackFrame})
precompile(Tuple{getfield(Base, Symbol("##show_trace_entry#673")), String, typeof(Base.show_trace_entry), Base.IOContext{Base.PipeEndpoint}, Base.StackTraces.StackFrame, Int64})
precompile(Tuple{getfield(Base, Symbol("#kw##show_trace_entry")), NamedTuple{(:prefix,), Tuple{String}}, typeof(Base.show_trace_entry), Base.IOContext{Base.PipeEnprecompile(Tuple{typeof(Gadfly.concat), Gadflyprecompile(Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.PipeEndpoint}, Array{Any, 1}, Char, Char, Char, Bool, Int64, Int64})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.PipeEndpoint}, Type})
precompile(Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.PipeEndpoint}, Tuple{Symbol}, Char, Char, Char, Bool, Int64, Int64})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.PipeEndpoint}, Tuple{Symbol}})
precompile(Tuple{typeof(Base.show_circular), Base.IOContext{Base.PipeEndpoint}, Any})
precompile(Tuple{Type{Base.Pair{Symbol, DataType}}, Any, Any})
precompile(Tuple{typeof(Base.show_unquoted_quote_expr), Base.IOContext{Base.PipeEndpoint}, Any, Int64, Int64})
precompile(Tuple{typeof(Cairo.destroy), Cairo.CairoContext})
precompile(Tuple{typeof(Cairo.destroy), Cairo.CairoSurfaceIOStream{UInt32}})
eld(Base, Symbol("#240#242")), Base.Dict{Symbol, AbstractString}, Base.Colon})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Dict{Symbol, AbstractString}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, Base.Dict{Symbol, AbstractString}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Function, Function})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Base.Missing, Base.Missing})
precompile(Tuple{typeof(Gadfly.input_aesthetics), Gadfly.Stat.TickStatistic})
precompile(Tuple{typeof(Gadfly.concrete_length), Base.Iterators.Flatten{Array{Any, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(-)), Tuple{Base.Broadcast.Extruded{Array{Int64, 1}, Tuple{Bool}, Tuple{Int64}}, Float64}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.min), Array{Int64, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Dates.Millisecond, 1}, Tuple{Dates.Day, Dates.Hour, Dates.Minute, Dates.Second, Dates.Millisecond, Dates.Millisecond, Dates.Millisecond}})
precompile(Tuple{typeof(Dates.yearmonthday), Int64})
precompile(Tuple{typeof(Base.:(+)), Dates.Date, Dates.Month})
precompile(Tuple{typeof(Base.:(+)), Dates.DateTime, Dates.Month})
precompile(Tuple{typeof(Base.:(+)), Dates.DateTime, Dates.Year})
precompile(Tuple{typeof(Gadfly.bounding_order_of_magnitude), Int64})
precompile(Tuple{typeof(Base.Math.throw_exp_domainerror), Float64})
precompile(Tuple{typeof(Gadfly.optimize_ticks_typed), Int64, Int64, Bool, Array{Tuple{Float64, Float64}, 1}, Int64, Int64, Int64, Float64, Float64, Float64, Float64, Bool})
precompile(Tuple{Type{Dates.DateTime}, Float64, Int64, Int64, Int64, Int64, Int64, Int64, Dates.AMPM})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Float64, Float64}, 1}, Tuple{Float64, Float64}, Base.Generator{Array{Tuple{Float64, Float64}, 1}, getfield(Gadfly, Symbol("#26#27"))}, Int64})
precompile(Tuple{getfield(Gadfly, Symbol("##optimize_ticks#29")), Bool, Nothing, Nothing, Symbol, Nothing, Nothing, Nothing, Nothing, Bool, typeof(Gadfly.optimize_ticks), Dates.DateTime, Dates.DateTime})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Array{Dates.DateTime, 0}, Float64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Array{Dates.DateTime, 1}, Float64})
precompile(Tuple{getfield(Gadfly, Symbol("##multilevel_ticks#32")), Array{Symbol, 1}, typeof(Gadfly.multilevel_ticks), Dates.DateTime, Dates.DateTime})
precompile(Tuple{typeof(Gadfly.multilevel_ticks), Dates.DateTime, Dates.DateTime})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.ValueIterator{Base.Dict{Any, Any}}, typeof(Base.length)}})
precompile(Tuple{typeof(Gadfly.multilevel_ticks), Dates.Date, Dates.Date})
precompile(Tuple{getfield(Gadfly, Symbol("##optimize_ticks#29")), Bool, Nothing, Nothing, Symbol, Float64, Float64, Float64, Float64, Bool, typeof(Gadfly.optimize_ticks), Dates.DateTime, Dates.DateTime})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Any, 1}, getfield(Gadfly.Stat, Symbol("#13#16"))}, Int64})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistic), Gadfly.Stat.TickStatistic, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{Type{Symbol}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Base.vcat), Array{Float64, 1}, Base.Missing, Base.Missing})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Union{Base.Missing, Float64}, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.__cat), Array{Union{Base.Missing, Float64}, 1}, Tuple{Int64}, Tuple{Bool}, Array{Float64, 1}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.cat_indices), Array{Float64, 1}, Int64})
precompile(Tuple{typeof(Base.cat_size), Array{Float64, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Union{Base.Missing, Float64}, 1}, Array{Float64, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.__subarray_throw_boundserror), Type{Base.SubArray{Union{Base.Missing, Float64}, 1, Array{Union{Base.Missing, Float64}, 1}, Tuple{Base.UnitRange{Int64}}, true}}, Array{Union{Base.Missing, Float64}, 1}, Tuple{Base.UnitRange{Int64}}, Int64, Int64, Tuple{Int64}})
precompile(Tuple{typeof(Base.fill!), Base.SubArray{Union{Base.Missing, Float64}, 1, Array{Union{Base.Missing, Float64}, 1}, Tuple{Base.UnitRange{Int64}}, true}, Base.Missing})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Union{Base.Missing, Float64}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.isconcrete), Tuple{Array{Union{Base.Missing, Float64}, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Union{Base.Missing, Float64}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Union{Base.Missing, Float64}, 1}}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Union{Base.Missing, Float64}, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Union{Base.Missing, Float64}, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, Float64}, 1}, Base.BitArray{1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}}})
precompile(Tuple{typeof(Gadfly.concrete_length), Array{Float64, 1}})
precompile(Tuple{typeof(Gadfly.bounding_order_of_magnitude), Float64})
precompile(Tuple{typeof(Gadfly.optimize_ticks_typed), Float64, Float64, Bool, Array{Tuple{Float64, Float64}, 1}, Int64, Int64, Int64, Float64, Float64, Float64, Float64, Bool})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##optimize_ticks")), NamedTuple{(:extend_ticks, :granularity_weight, :simplicity_weight, :coverage_weight, :niceness_weight, :strict_span), Tuple{Bool, Float64, Float64, Float64, Float64, Bool}}, typeof(Gadfly.optimize_ticks), Float64, Float64})
precompile(Tuple{getfield(Gadfly, Symbol("##multilevel_ticks#30")), Array{Float64, 1}, typeof(Gadfly.multilevel_ticks), Float64, Float64})
precompile(Tuple{typeof(Gadfly.multilevel_ticks), Float64, Float64})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.ValueIterator{Base.Dict{Any, Any}}, typeof(Base.length)}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Base.ValueIterator{Base.Dict{Any, Any}}, typeof(Base.length)}, Int64})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistic), Gadfly.Stat.Identity, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.isconcrete), Tuple{Array{Union{Base.Missing, Int64}, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Union{Base.Missing, Int64}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Union{Base.Missing, Int64}, 1}}}})
precompile(Tuple{typeof(Gadfly.concrete_length), Array{Int64, 1}})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##optimize_ticks")), NamedTuple{(:extend_ticks, :granularity_weight, :simplicity_weight, :coverage_weight, :niceness_weight, :strict_span), Tuple{Bool, Float64, Float64, Float64, Float64, Bool}}, typeof(Gadfly.optimize_ticks), Int64, Int64})
precompile(Tuple{typeof(Base.vect), Gadfly.Aesthetics, Vararg{Gadfly.Aesthetics, N} where N})
precompile(Tuple{typeof(Base._array_for), Type{Bool}, Array{Gadfly.Aesthetics, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Array{Gadfly.Aesthetics, 1}, getfield(Gadfly, Symbol("#93#106")){Symbol}}, Int64, Int64})
precompile(Tuple{Type{Gadfly.Guide.ColorKey}})
precompile(Tuple{typeof(Base.push!), Array{Gadfly.GuideElement, 1}, Gadfly.Guide.ColorKey})
precompile(Tuple{typeof(Gadfly.render_prepared), Gadfly.Plot, Gadfly.Coord.Cartesian, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Array{Gadfly.GuideElement, 1}})
precompile(Tuple{typeof(Gadfly.Coord.aesthetics_type), Array{Gadfly.Aesthetics, 1}, Array{Symbol, 1}})
precompile(Tuple{typeof(Gadfly.Coord.first_concrete_aesthetic_value), Array{Gadfly.Aesthetics, 1}, Array{Symbol, 1}})
precompile(Tuple{typeof(Gadfly.Coord.apply_coordinate), Gadfly.Coord.Cartesian, Array{Gadfly.Aesthetics, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}})
precompile(Tuple{typeof(Base.setindex!), Array{Gadfly.Theme, 1}, Nothing, Int64})
precompile(Tuple{typeof(Gadfly.get_stroke_vector), Symbol})
precompile(Tuple{typeof(Gadfly.jsplotdata), String, String, Array{Measures.Measure, 1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#33#42"))}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#34#43"))}})
precompile(Tuple{typeof(Base.getproperty), Gadfly.Guide.XTicks, Symbol})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.XTicks, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#52#61"))}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#53#62"))}})
precompile(Tuple{typeof(Base.getproperty), Gadfly.Guide.YTicks, Symbol})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.YTicks, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}, getfield(Gadfly, Symbol("#19#20")){Int64}}})
precompile(Tuple{getfield(Gadfly, Symbol("##render_prepared#107")), Bool, Bool, typeof(Gadfly.render_prepared), Gadfly.Plot, Gadfly.Coord.Cartesian, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Array{Gadfly.GuideElement, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Gadfly.Aesthetics, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.__cat), Array{Gadfly.Aesthetics, 1}, Tuple{Int64}, Tuple{Bool}, Gadfly.Aesthetics, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.__subarray_throw_boundserror), Type{Base.SubArray{Gadfly.Aesthetics, 1, Array{Gadfly.Aesthetics, 1}, Tuple{Base.UnitRange{Int64}}, true}}, Array{Gadfly.Aesthetics, 1}, Tuple{Base.UnitRange{Int64}}, Int64, Int64, Tuple{Int64}})
precompile(Tuple{typeof(Base.fill!), Base.SubArray{Gadfly.Aesthetics, 1, Array{Gadfly.Aesthetics, 1}, Tuple{Base.UnitRange{Int64}}, true}, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.cat_indices), Array{Gadfly.Aesthetics, 1}, Int64})
precompile(Tuple{typeof(Base.cat_size), Array{Gadfly.Aesthetics, 1}, Int64})
precompile(Tuple{typeof(Base.throw_setindex_mismatch), Array{Gadfly.Aesthetics, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.setindex!), Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Aesthetics, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Gadfly.concrete_minmax), Array{Int64, 1}, Int64, Int64})
precompile(Tuple{typeof(Gadfly.isconcrete), Float64})
precompile(Tuple{typeof(Gadfly.concrete_minmax), Array{Float64, 1}, Float64, Float64})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:leftpad, :rightpad, :toppad, :bottompad), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Compose.UnitBox{S, T, U, V} where V where U where T where S}, Int64, Float64, Float64, Float64})
precompile(Tuple{Type{NamedTuple{(:units, :raster), T} where T<:Tuple}, Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Bool}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:units, :raster), Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Bool}}, typeof(Compose.context)})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}, Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}}})
precompile(Tuple{getfield(Gadfly.Geom, Symbol("#143#157")), Gadfly.Layer})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Gadfly.StatisticElement, 1}, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly.Geom, Symbol("#143#157"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly.Geom, Symbol("#143#157"))}})
precompile(Tuple{getfield(Gadfly, Symbol("##inherit!#52")), Array{Any, 1}, typeof(Gadfly.inherit!), Gadfly.Aesthetics, Gadfly.Aesthetics})
precompile(Tuple{Type{Gadfly.Aesthetics}, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.copyto!), Array{Gadfly.ScaleElement, 1}, Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##render_prepared")), NamedTuple{(:table_only,), Tuple{Bool}}, typeof(Gadfly.render_prepared), Gadfly.Plot, Gadfly.Coord.Cartesian, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Array{Gadfly.GuideElement, 1}})
precompile(Tuple{typeof(Compose.pad_outer), Compose.Context, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.Context, 1}, Compose.Context, Base.Generator{Array{Compose.Context, 1}, getfield(Compose, Symbol("#126#127")){Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{typeof(Base._collect), Array{Compose.Context, 1}, Base.Generator{Array{Compose.Context, 1}, getfield(Compose, Symbol("#126#127")){Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Geom.SubplotGrid, Gadfly.Theme, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}})
precompile(Tuple{getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}, Tuple{Gadfly.Layer, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}, Gadfly.Theme}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.Context, 1}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}}, getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}}, Int64, Tuple{Int64, Int64, Int64, Int64, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}}, getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB24}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.ColorAlpha{ColorTypes.HSL{T}, T, 4} where T<:AbstractFloat}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.HSLA{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Geom.LineGeometry, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Geom.LineGeometry, Gadfly.Theme, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}})
precompile(Tuple{typeof(Base.length), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.length), IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{Type{IndirectArrays.IndirectArray{UInt8, N, A, V} where V<:AbstractArray{UInt8, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N}, Array{Int64, 1}})
precompile(Tuple{Type{IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.fill!), Array{ColorTypes.LCHab{Float32}, 1}, ColorTypes.LCHab{Float32}})
precompile(Tuple{typeof(Base.fill), ColorTypes.LCHab{Float32}, Int64})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, Array{ColorTypes.LCHab{Float32}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, Array{ColorTypes.LCHab{Float32}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, Array{Int64, 1}})
precompile(Tuple{getfield(Gadfly, Symbol("##Aesthetics#45")), Array{Int64, 1}, Array{Float64, 1}, Nothing, Nothing, Nothing, Nothing, Nothing, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Nothing, IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Nothing, Nothing, Nothing, Nothing, Array{Float64, 1}, Array{Float64, 1}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, OrderedCollections.OrderedDict{Any, Any}, String, Nothing, Nothing, Base.Dict{Symbol, AbstractString}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(Gadfly.Scale.identity_formatter), typeof(Gadfly.Scale.identity_formatter), typeof(Showoff.showoff), typeof(Showoff.showoff), getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, typeof(Showoff.showoff), typeof(Showoff.showoff), typeof(Showoff.showoff), typeof(Showoff.showoff), Base.Missing, Base.Missing, Type{Gadfly.Aesthetics}, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.:(==)), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Function})
precompile(Tuple{typeof(Base.:(==)), IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Function})
precompile(Tuple{typeof(Base.:(==)), OrderedCollections.OrderedDict{Any, Any}, Function})
precompile(Tuple{typeof(Base.sortperm), Array{Int64, 1}})
precompile(Tuple{getfield(Base.Sort, Symbol("##sortperm#11")), Base.Sort.QuickSortAlg, Function, Function, Nothing, Base.Order.ForwardOrdering, typeof(Base.sortperm), Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, IndirectArrays.IndirectArray{Int64, 1, Array{UInt8, 1}, Array{Int64, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), IndirectArrays.IndirectArray{Int64, 1, Array{UInt8, 1}, Array{Int64, 1}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), IndirectArrays.IndirectArray{Int64, 1, Array{UInt8, 1}, Array{Int64, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.vect), Array{Int64, 1}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.promote_typeof), Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.promote_typeof), Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.copyto!), Array{Array{T, 1} where T, 1}, Tuple{Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Geom, Symbol("#131#132")), Array{Array{T, 1} where T, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Array{T, 1} where T, 1}, getfield(Gadfly.Geom, Symbol("#131#132"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{T, 1} where T, 1}, getfield(Gadfly.Geom, Symbol("#131#132"))}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.isconcrete), Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Int64, 1}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Int64, 1}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Int64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Int64, 1}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}}}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{ColorTypes.RGB{Float32}, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.RGB{Float32}, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.RGB{Float32}, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.unique), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.iterate), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.copyto!), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Base.Iterators.Zip{Tuple{Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.collect), Type{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}}, Base.Iterators.Zip{Tuple{Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}, Array{Int64, 1}}}})
precompile(Tuple{Type{Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}}})
precompile(Tuple{typeof(Base.hash), Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, UInt64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}, Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}, Nothing, Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}, Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}})
precompile(Tuple{typeof(Base.unique), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{typeof(Base.unique), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{typeof(Base.length), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{Type{Array{ColorTypes.RGB{Float32}, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.vect), Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Extruded{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}}}})
precompile(Tuple{typeof(Base.first), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{ColorTypes.RGB{Float32}, 1}, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.get_stroke_vector), Tuple{Array{Symbol, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.get_stroke_vector), Tuple{Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.get_stroke_vector), Tuple{Array{Symbol, 1}}}})
precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.get_stroke_vector), Tuple{Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{Array{Any, 1}}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Any, 1}, Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!), Array{Array{Any, 1}, 1}, Array{Array{Any, 1}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.get_stroke_vector), Tuple{Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Array{Any, 1}, Int64, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Array{Any, 1}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.get_stroke_vector), Tuple{Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.getindex), Base.Dict{ColorTypes.RGB{Float32}, String}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}}})
precompile(Tuple{getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.svg_color_class_from_label), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Gadfly.svg_color_class_from_label), String})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.svg_color_class_from_label), Tuple{Base.Broadcast.Extruded{Array{String, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.svg_color_class_from_label), Tuple{Array{String, 1}}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Array{Tuple{Int64, Float64}, 1}, 1}, getfield(Compose, Symbol("#1#2"))}, Int64})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Int64, Float64}, 1}, 1}, Symbol})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.StrokePrimitive, 1}, Compose.StrokePrimitive, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Compose, Symbol("#42#43"))}, Int64})
precompile(Tuple{typeof(Compose.stroke), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Measures.Measure, 1}, Base.IndexLinear, Array{Any, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.StrokeDashPrimitive, 1}, Base.Generator{Array{Array{Any, 1}, 1}, getfield(Compose, Symbol("#46#47"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{Any, 1}, 1}, getfield(Compose, Symbol("#46#47"))}})
precompile(Tuple{typeof(Compose.strokedash), Array{Array{Any, 1}, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGClassPrimitive, 1}, Compose.SVGClassPrimitive, Base.Generator{Array{String, 1}, Type{Compose.SVGClassPrimitive}}, Int64})
precompile(Tuple{typeof(Compose.svgclass), Array{String, 1}})
precompile(Tuple{typeof(Compose.compose), Compose.Context, Compose.Context})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Nothing, Nothing, Nothing, Nothing, Compose.ListNull{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Nothing, Float64, Symbol})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Context})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.PanelBackground, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.PanelBackground, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.:(!=)), Array{Gadfly.Guide.PositionedGuide, 1}, Nothing})
precompile(Tuple{typeof(Base.copyto!), Array{Any, 1}, Int64, Array{Gadfly.Guide.PositionedGuide, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.append!), Array{Any, 1}, Array{Gadfly.Guide.PositionedGuide, 1}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.Lab{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Lab{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.QuestionMark, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.QuestionMark, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.fill), ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.SVGClassPrimitive}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.SVGClassPrimitive}, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.HelpScreen, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.HelpScreen, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{getfield(Colors, Symbol("##distinguishable_colors#11")), Bool, typeof(Base.identity), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, typeof(Colors.distinguishable_colors), Int64, Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}})
precompile(Tuple{getfield(Colors, Symbol("##distinguishable_colors#12")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Colors.distinguishable_colors), Int64, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Colors.distinguishable_colors), Int64, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Base.allocatedinline), Type{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}}})
precompile(Tuple{typeof(Base.copyto!), Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, Int64, Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, Int64, Int64})
precompile(Tuple{typeof(Colors.invert_srgb_compand), FixedPointNumbers.Normed{UInt8, 8}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float64}}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.Lab{Float64}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{AbstractString, AbstractString}, String})
precompile(Tuple{getfield(Compose, Symbol("#112#113")), Base.SubString{String}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{Base.SubString{String}, 1}, getfield(Compose, Symbol("#112#113"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Base.SubString{String}, 1}, getfield(Compose, Symbol("#112#113"))}})
precompile(Tuple{typeof(Compose.levenshtein), String, String})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{AbstractString, AbstractString}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{AbstractString, AbstractString}, String})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, AbstractString}, String, String})
precompile(Tuple{typeof(Compose.match_font), String})
precompile(Tuple{typeof(Compose.max_text_extents), String, Measures.Length{:mm, Float64}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Compose.text_width), Base.Dict{String, Any}, Base.SubString{String}, Float64})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}, Float64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.:(+)), Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Base.Generator{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Base.Generator{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{getfield(Compose, Symbol("##text#27")), Symbol, typeof(Compose.text), Array{Measures.Length{:w, Float64}, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{String, 1}, Array{Compose.HCenter, 1}, Array{Compose.VCenter, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Measures.Length{:w, Float64}, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{String, 1}, Array{Compose.HCenter, 1}, Array{Compose.VCenter, 1}})
precompile(Tuple{typeof(Base.:(/)), Measures.Length{:mm, Float64}, Int64})
precompile(Tuple{typeof(Base.:(*)), Measures.Length{:mm, Float64}, Float64})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(*)), Measures.Length{:mm, Float64}, Int64})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.rectangle), Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Tuple{Compose.Context, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.Property{Compose.FontPrimitive}, Compose.Property{Compose.FontSizePrimitive}, Compose.Property{Compose.FillPrimitive}}, Tuple{Compose.Context, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.Property{Compose.FillPrimitive}}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.CrossHair, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.CrossHair, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Gadfly.issomething), Array{Float64, 1}})
precompile(Tuple{typeof(IterTools.groupby), getfield(Gadfly.Guide, Symbol("#30#39")), Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#30#39"))}, Nothing})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#30#39"))}})
precompile(Tuple{typeof(Showoff.concrete_minimum), Array{Float64, 1}})
precompile(Tuple{typeof(Showoff.concrete_maximum), Array{Float64, 1}})
precompile(Tuple{typeof(Base.Grisu.fastfixedtoa), Float32, Int64, Int64, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float32, Int64, Int64, Array{UInt8, 1}, Array{Base.Grisu.Bignums.Bignum, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float32, Int64, Int64})
precompile(Tuple{typeof(Showoff.plain_precision_heuristic), Array{Float64, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float64, Int64, Int64})
precompile(Tuple{typeof(Showoff.format_fixed), Float64, Int64})
precompile(Tuple{getfield(Showoff, Symbol("#1#2")), Float64})
precompile(Tuple{typeof(Base.grow_to!), Array{Float64, 1}, Base.Generator{Base.Iterators.Filter{typeof(Base.isfinite), Array{Float64, 1}}, getfield(Showoff, Symbol("#1#2"))}, Int64})
precompile(Tuple{typeof(Base.grow_to!), Array{Float64, 1}, Base.Generator{Base.Iterators.Filter{typeof(Base.isfinite), Array{Float64, 1}}, getfield(Showoff, Symbol("#1#2"))}})
precompile(Tuple{typeof(Showoff.format_fixed_scientific), Float64, Int64, Bool})
precompile(Tuple{typeof(Showoff.showoff), Array{Float64, 1}, Symbol})
precompile(Tuple{typeof(Gadfly.Scale.identity_formatter), Array{Float64, 1}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#30#39"))}, Tuple{Bool, Float64, Tuple{Float64, Float64}, Tuple{Int64, Int64}}})
precompile(Tuple{typeof(Gadfly.get_stroke_vector), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#31#40")), Array{Float64, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}, Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#31#40"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#31#40"))}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}, getfield(Compose, Symbol("#1#2"))}, Int64})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}, Symbol})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}})
precompile(Tuple{typeof(Compose.stroke), ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Measures.Measure, 1}, Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Compose.strokedash), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#32#41")), Array{Float64, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}, Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#32#41"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#32#41"))}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.VisiblePrimitive, 1}, Compose.VisiblePrimitive, Base.Generator{Array{Bool, 1}, Type{Compose.VisiblePrimitive}}, Int64})
precompile(Tuple{typeof(Compose.visible), Array{Bool, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGAttributePrimitive, 1}, Compose.SVGAttributePrimitive, Base.Generator{Array{Float64, 1}, getfield(Compose, Symbol("#50#51")){String}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Compose, Symbol("#50#51")){String}}})
precompile(Tuple{typeof(Compose.svgattribute), String, Array{Float64, 1}})
precompile(Tuple{typeof(Base.Printf.decode_hex), Int64, Base.CodeUnits{UInt8, String}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.hex), ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Compose.text_extents), String, Measures.Length{:mm, Float64}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Base.afoldl), typeof(Base.:(*)), Float64, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Length{:mm, Float64}}, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#33#42"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#33#42"))}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#34#43"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#34#43"))}, Int64})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Measures.Length{:mm, Float64}, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}, Base.LogicalIndex{Int64, Array{Bool, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Measures.Length{:mm, Float64}, 1}, Tuple{Base.LogicalIndex{Int64, Array{Bool, 1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Measures.Length{:mm, Float64}, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.add_sum), Array{Measures.Length{:mm, Float64}, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.add_sum), Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.sum), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.add_sum), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Measures.Length{:mm, Float64}, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.max), Array{Measures.Length{:mm, Float64}, 1}, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.max), Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.maximum), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.max), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(+)), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, typeof(Compose.context)})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight, :penalty), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Int64}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight, :penalty), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Int64}}, typeof(Compose.context)})
precompile(Tuple{typeof(IterTools.groupby), getfield(Gadfly.Guide, Symbol("#49#58")), Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#49#58"))}, Nothing})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#49#58"))}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#49#58"))}, Tuple{Bool, Float64, Tuple{Float64, Float64}, Tuple{Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#50#59")), Array{Float64, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}, Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#50#59"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#50#59"))}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}, getfield(Compose, Symbol("#1#2"))}, Int64})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}, Symbol})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#51#60")), Array{Float64, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}, Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#51#60"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#51#60"))}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Context, Compose.Context})
precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, Stprecompiprecompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}},precompile(Tupleprecompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}}precompile(Tuple{typeof(precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#52precompile(Tuple{typeof(precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbprecompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#53#62"))}, Int64, Int64})
precompile(Tuple{typeof(precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.vprecompile(Tuple{typeof(Base.getproperty), Gadfly.Guide.XLabel, Symbol})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.XLabel, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.XLabel, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.getproperty), Gadfly.Guide.YLabel, Symbol})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.YLabel, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.YLabel, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{Type{Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}}})
precompile(Tuple{typeof(OrderedCollections.rehash!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Int64})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Int64})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.ColorKey, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.ColorKey, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(precompile(Tuple{typeof(Base.isempty), OrderedCollections.precompile(Tuple{typeof(Base.:(!=)), OrderedCollections.OrderedDict{Any, Any}, Nothing})
precompile(Tuple{typeof(precompile(Tuple{typeof(Base.keys), OrderedCollections.precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{Any, Any}})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{Any, Any}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}}, Int64, Int64})
precompile(Tuple{typeof(precompile(Tuple{typeof(Base.collect), Base.Generator{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGprecompile(Tuple{getfielprecompile(Tuple{getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Base.KeySet{Any, OrderedCollections.Oprecompile(Tuple{Type{Baprecompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypeprecompile(Tuple{getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(precompile(Tuple{typeof(Base.Iterators.zip), Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, Vprecompile(Tuple{Type{Baprecompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Anyprecompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, Array{String, 1}}}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{ColorTypes.RGB{Float32}, String}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{ColorTypes.RGB{Float32}, String}, Int64, Int64})
precompile(Tuple{typeof(precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}, Coprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.in), ColorTypes.RGB{Float32}, Base.Set{ColorTypes.Color{Tprecompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}, Int64})
precompile(Tuple{typeof(precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}, Coprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}, Nothing, Coprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.push!), Base.Set{ColorTypes.Color{T, N} where N where T}, Coprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.push!), Array{ColorTypes.Color{T, N} where N where T, 1}, Coprecompile(Tuple{typeof(OrderedCollections.ht_keyindex2), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections._setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Base.Set{AbstractString}, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Base.Set{AbstractString}, Coprecompile(Tuple{typeof(OrderedCollections.ht_keyindex), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, ColorTypes.RGB{Float32}, Bool})
precompile(Tuple{typeof(precompile(Tuple{typeof(Base.getindex), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Coprecompile(Tuple{typeof(Base.rehash!), Base.Dict{AbstractString, Nothing}, Int64})
precompile(Tuple{typeof(precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{AbstractStrprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, Nothprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.push!), Base.Set{Abprecompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, Array{String, 1}}}, Tuple{Int64, Int64}})
precompile(Tuple{Type{Baprecompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, Basprecompile(Tuple{typeof(OrderedCollections.rehash!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, Int64})
precompile(Tuple{typeof(precompile(Tuple{typeof(OrderedCollections.ht_keyindex2), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, Coprecompile(Tuple{typeof(precompile(Tuple{typeof(OrderedCollections._setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, String, ColorTypeprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, String, Coprecompile(Tuple{typeof(Gadfly.Guide.render_key_title), String, Gadfly.Theme})
precompile(Tuple{typeof(precompile(Tuple{typeof(Compose.text), Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}, String, Compose.Hprecompile(Tuple{typeof(precompile(Tuple{typeof(Compose.context), Measures.Length{:w, Float64}, Measures.Length{:h, Float64}, Measures.Length{:w, Float64}, Measuresprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guiprecompile(Tuple{typeof(precompile(Tuple{typeof(Gadfly.Guide.render_discrete_color_key), Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Fprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N wheprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.iterate), Base.ValueIterator{OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N wherprecompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, String})
precompile(Tuple{typeof(precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Aprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.iterate), Base.ValueIterator{OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Abprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#4precompile(Tuple{typeof(precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symprecompile(Tuple{typeof(Base.map), Function, Base.UnitRange{Int64}})
precompile(Tuple{Type{Baprecompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, precompile(Tuple{typeof(precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.add_sum), Array{Measures.Measure, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.add_sum), Base.IndexLinear, Array{Measures.Measure, 1}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.Context, 1}, Compose.Context, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_similar), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Lprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.allocatedinline), Type{Tuple{Measures.Measurprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.throw_boundserror), Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Measures.Measure, Measures.Measure}, 1}, precompile(Tuple{Type{Baprecompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#5#13")), Array{Tuple{Measures.Measure, precompile(Tuple{typeof(precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guiprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#5#13"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.setindex!), Array{Measures.Measure, 1}, Measures.Lengthprecompile(Tuple{Type{Naprecompile(Tuple{Type{NamedTuple{(:minwidth, :minheight, :units), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Compose.UnitBox{Float64, Float6precompile(Tuple{getfielprecompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight, :units), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Compose.UnitBox{Float64, Float64, Float64, Float64}}}, typrecompile(Tuple{Type{Gaprecompile(Tuple{Type{Gadfly.Guide.PositionedGuide}, Array{Compose.Context, 1}, Int64, Gadfly.Guiprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.iterate), DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}})
precompile(Tuple{typeof(Base.:(==)), WeakRef, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.iterate), DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.BottomGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.OverGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.UnderGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.RightGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.LeftGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.BottomGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.BottomGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.TopGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.:(==)), WeakRef, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Gadfly.Guide.layout_guides), Compose.Context, Gadfly.Coord.Cartesian, Gadfly.Theme, Gadfly.Guide.PositionedGuide, Vararg{Gadfly.Guide.Positiprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guiprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.push!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Tuple{Array{Compose.Context, 1}, Int64}})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guide.BottomGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.RightGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.RightGuidePosition, Gadfly.Gprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Gadfly.Guide, Symbol("#83#88"))}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.By{getfield(Gadfly.Guide, Symbol("#83#88"))}, Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{getfield(Base, Symbol("#kw##sort!")), NamedTuple{(:by,), Tuple{getfield(Gadfly.Guide, Symbol("#83#88"))}}, typeof(Base.sort!), Array{Tuple{Array{Compose.Coprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.BottomGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.BottomGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.BottomGuidePosition, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.UnderGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.UnderGuidePosition, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.OverGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.OverGuidePosition, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.LeftGuidePosition, Gadfly.Guprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Gadfly.Guide, Symbol("#82#87"))}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.By{getfield(Gadfly.Guide, Symbol("#82#87"))}, Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{getfield(Base, Symbol("#kw##sort!")), NamedTuple{(:by,), Tuple{getfield(Gadfly.Guide, Symbol("#82#87"))}}, typeof(Base.sort!), Array{Tuple{Array{Compose.Coprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.isequal), Gadfly.Guide.TopGuidePosition, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{typeof(Base.length), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.isequal), Gadfly.Guide.TopGuidePosition, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{Type{NamedTuple{(:units, :aspect_ratio), T} where T<:Tuple}, Tuple{Compose.UnitBox{Int64, Float64, Float6precompile(Tuple{getfielprecompile(Tuple{getfield(Compose, Symbol("##Table#55")), Nothing, Nothing, Nothing, Compose.UnitBox{Int64, Float64, Float64, Float64}, Int64, Bool, Bool, Array{Any, 1}, Type{Compose.Table}, Int64, Int64, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:units, :aspect_ratio), Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Nothing}}, Type{Compose.Table}, Int64, Int64, Base.UnitRange{Int64}, precompile(Tuple{typeof(precompile(Tuple{typeof(Base.iterate), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{Compose.Context, 1}, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{Compose.Context, 1}, Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.iterate), Array{Compose.Context, 1}})
precompile(Tuple{typeof(Base.getproperty), Coprecompile(Tuple{getfielprecompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:toppad, :bottompad), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Compose.UnitBox{S, T, U, V} where V where U where T where S}, Compose.UnitBox{Int64, Floatprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.setproperty!), Compose.Context, Symbol, Compose.UnitBox{Int64, Floatprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.UnitBox{S, T, U, V} where V where U where T where S}}, Compose.UnitBox{Int64, Float64, Float64, Float64}})
precompile(Tuple{typeof(Base.iterate), Array{Compose.Context, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Compose.Table, Array{Compose.Context, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.iterate), Array{Tuple{Array{Compose.Context, precompile(Tuple{getfielprecompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:leftpad, :rightpad), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Compose.UnitBox{S, T, U, V} where V where U where T where S}, Compose.UnitBox{Int64, Floatprecompile(Tuple{Type{Naprecompile(Tuple{Type{NamedTuple{(:minwidth, :minheight, :units, :clip), T} where T<:Tuple}, Tuple{Nothing, Nothing, Compose.UnitBox{Int64, Float64, Floprecompile(Tuple{getfielprecompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight, :units, :clip), Tuple{Nothing, Nothing, Compose.UnitBox{Int64, Float64, Float64, Float64}, Bool}}, typrecompile(Tuple{Type{Baprecompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#84#89")), Array{Tuple{Array{Compose.Coprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Compose.Context, 1}, 1}, Array{Compose.Context, 1}, Base.Generator{Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, getfield(Gadfly.Guide, Symbol("#84#89"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, getfield(Gadfly.Guidprecompile(Tuple{Type{Baprecompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#85#90")), Array{Tuple{Array{Compose.Coprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Compose.Context, 1}, 1}, Array{Compose.Context, 1}, Base.Generator{Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, getfield(Gadfly.Guide, Symbol("#85#90"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, getfield(Gadfly.Guidprecompile(Tuple{typeof(precompile(Tuple{typeof(Compose.compose!), Compose.Context, Array{Any, 1}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Array{Any, 1}, Array{Any, 1}, Tuple{Compose.Context, Compose.Context}, Vprecompile(Tuple{typeof(precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Compose.Context, 1}}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Array{Compose.Context, 1}, Array{Compose.Context, 1}, Arraprecompile(Tuple{typeof(precompile(Tuple{typeof(Compose.compose!), Compose.Context})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Array{Any, 1}, Tuple{Compose.Context, Compose.Context}, Compose.Property{Comprecompile(Tuple{Type{Coprecompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Nothing, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Notprecompile(Tuple{Type{Coprecompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Nothing, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Notprecompile(Tuple{typeof(precompile(Tuple{typeof(Compose.pad_inner), Compose.Context, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.pad_inner), Compose.Context, Measuresprecompile(Tuple{getfielprecompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight), Tuple{Nothing, Nothing}}, typeof(Compose.context), Measures.Length{:w, Float64}, Measures.Length{:h, Float64}, Measures.Length{:w, Float64}, Measureprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.:(*)), Float64, Measuresprecompile(Tuple{Type{Meprecompile(Tuple{Type{Measures.BoundingBox{P1, P2} where P2<:(Tuple{Vararg{Measures.Measure, N}} where N) where P1<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Measures.Length{:mm, Float64}, Measuresprecompile(Tuple{typeof(precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.precompile(Tuple{Type{Meprecompile(Tuple{Type{Measures.BoundingBox{P1, P2} where P2<:(Tuple{Vararg{Measures.Measure, N}} where N) where P1<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.precompile(Tuple{typeof(precompile(Tuple{typeof(Base.getproperty), Compose.ListNode{Compose.Container}, Symbol})
precompile(Tuple{typeof(Compose.orprecompile(Tuple{typeof(precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Add{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Leprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.getproperty), Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Symbol})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Composprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.JSIncludePrimitive, 1}, Compose.JSIncludePrimitive, Base.Generator{Array{Compose.JSIncludePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Composprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Composprecompile(Tuple{typeof(precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compoprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGClassPrimitive, 1}, Compose.SVGClassPrimitive, Base.Generator{Array{Compose.SVGClassPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compoprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compoprecompile(Tuple{getfielprecompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Composprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.rehash!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Type})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.JSIncludePrimitive}, Type{Compose.Property{Composeprecompile(Tuple{getfielprecompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compoprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.SVGClassPrimitive}, Type{Compose.Property{Compose.SVGClassPrimitive}}})
precompile(Tuple{Type{Compose.ImagePropertyState}, ColorTypes.RGBA{Float64}, ColorTypes.RGBA{Float64}, Array{Float64, 1}, Compose.LineCapButt, Compose.LineJoinMiter, Bool, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Nothing, Bool})
precompile(Tuple{typeof(Base.getindex), Array{Compose.SVGClassPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.SVGClassPrimitive})
precompile(Tuple{typeof(Base.getindex), Array{Compose.JSIncludePrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.JSIncludePrimitive})
precompile(Tuple{typeof(Compose.order), Compose.Table})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 2}, Int64, Base.Generator{Array{Array{Compose.Context, 1}, 2}, typeof(Base.length)}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{Compose.Context, 1}, 2}, typeof(Base.length)}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(Compose, Symbol("#61#66"))}})
precompile(Tuple{getfield(Compose, Symbol("#update_mincolrow_sizes!#65")){Compose.Table, Int64, Int64}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{getfield(Compose, Symbol("#update_focused_col_widths!#63")){Compose.Table, Compose.ParentDrawContext, Array{Float64, 1}}, Array{Float64, 1}})
precompile(Tuple{getfield(Compose, Symbol("#update_focused_row_heights!#64")){Compose.Table, Compose.ParentDrawContext, Array{Float64, 1precompile(Tuple{typeof(precompile(Tuple{typeof(Compose.force_aspect_ratio!), Compose.Table, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Compose.realize_brute_force), Compose.Table, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.Table, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Lprecompile(Tuple{getfielprecompile(Tuple{getfield(Compose, Symbol("#61#66")), Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Base.UnitRange{Int64}, 1}, Base.Generator{Array{Any, 1}, getfield(Compose, Symbol("#61#66"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.UnitRange{Int64}, 1}, Base.UnitRange{Int64}, Base.Generator{Array{Any, 1}, getfield(Compose, Symbol("#61#66"))}, Int64})
precompile(Tuple{Type{NamedTuple{(:units, :order), T} where T<:Tuple}, Tuple{Compose.UnitBox{Int64, Float64, Floaprecompile(Tuple{getfielprecompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:units, :order), Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Int64}}, typrecompile(Tuple{Type{Coprecompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Compose.UnitBox{Int64, Float64, Float64, Float64}, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Float64, Floprecompile(Tuple{Type{Meprecompile(Tuple{Type{Measures.BoundingBox{P1, P2} where P2<:(Tuple{Vararg{Measures.Measure, N}} where N) where P1<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measuresprecompile(Tuple{Type{Coprecompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Compose.UnitBox{Int64, Float64, Float64, Float64}, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Notprecompile(Tuple{Type{Coprecompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Float64, Floprecompile(Tuple{typeof(precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.UnitBox{Int64, Floatprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.:(>=)), Measures.Length{:mm, Float64}, Measuresprecompile(Tuple{typeof(precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Lprecompile(Tuple{typeof(precompile(Tuple{typeof(Compose.order), Compose.precompile(Tuple{typeof(precompile(Tuple{typeof(Compose.realize), Compose.AdhocContainerPromise, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.AdhocContainerPromise, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Lprecompile(Tuple{getfielprecompile(Tuple{getfield(Gadfly.Guide, Symbol("#68#70")){Gadfly.Guide.XLabel, Gadfly.Theme, Measures.Length{:mm, Float64}}, Compprecompile(Tuple{typeof(precompile(Tuple{typeof(Compose.text), Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, String, Compose.precompile(Tuple{typeof(precompile(Tuple{typeof(Base.getproperty), Compose.ListNode{Compose.Form{P} where P<:Compose.Fprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mmprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Lengtprecompile(Tuple{typeof(precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compoprecompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.FontSizePrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FontSizePrimitive, 1}, Compose.FontSizePrimitive, Base.Generator{Array{Compose.FontSizePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.FontSizePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Coprecompile(Tuple{Type{Compose.FontSizePrimitive}, Measuresprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compoprecompile(Tuple{typeof(precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Cprecompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FontPrimitive, 1}, Compose.FontPrimitive, Base.Generator{Array{Compose.FontPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Cprecompile(Tuple{typeof(precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Cprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FillPrimitive, 1}, Compose.FillPrimitive, Base.Generator{Array{Compose.FillPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.Identprecompile(Tuple{typeof(precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Cprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Cprecompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.StrokePrimitive, 1}, Compose.StrokePrimitive, Base.Generator{Array{Compose.StrokePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Comprecompile(Tuple{getfielprecompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compoprecompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FontSizePrimitive}, Type{Compose.Property{Compose.FontSizePrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FontPrimitive}, Type{Compose.Property{Compose.FontPrimitive}}})
precompile(Tuple{getfielprecompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Cprecompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FillPrimitive}, Type{Compose.Property{Compose.FillPrimitive}}})
precompile(Tuple{getfielprecompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Comprecompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.StrokePrimitive}, Type{Compose.Property{Compose.StrokePrimitive}}})
precompile(Tuple{typeof(precompile(Tuple{typeof(Base.getindex), Array{Compose.FontSizprecompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FontSizePrimitive})
precompile(Tuple{typeof(precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, Measuresprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.convert), Type{Measures.Length{:mm, Float64}}, Measuresprecompile(Tuple{typeof(Base.getindex), Array{Compose.FontPrimitive, 1}, Int64})
precompile(Tuple{typeof(precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, String})
precompile(Tuple{typeof(precompile(Tuple{typeof(Base.getindex), Array{Compose.Strokprecompile(Tuple{typeof(precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Coprecompile(Tuple{typeof(Base.getindex), Array{Compose.FillPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FillPrimitive})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Float64, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HCenter, Compose.VTop, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{Type{Compose.Form{P} where P<:Compose.FormPrimitive}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.isempty), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.batch), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Compose.vector_properties_require_push_pop), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.push_vector_properties), Compose.Image{Compose.PDFBackend}, Int64})
precompile(Tuple{typeof(Compose.rotate), Compose.Image{Compose.PDFBackend}, Float64, Float64, Float64})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Type{T} where T})
precompile(Tuple{typeof(Cairo.set_text), Cairo.CairoContext, String, Bool})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#35#44")){Gadfly.Theme, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{AbstractString, 1}, Base.LogicalIndex{Int64, Array{Bool, 1}}})
precompile(Tuple{typeof(Base.getindex), Array{AbstractString, 1}, Array{Bool, 1}})
precompile(Tuple{getfield(Compose, Symbol("##text#26")), Symbol, typeof(Compose.text), Array{Float64, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{AbstractString, 1}, Array{Compose.HCenter, 1}, Array{Compose.VTop, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Float64, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{AbstractString, 1}, Array{Compose.HCenter, 1}, Array{Compose.VTop, 1}})
precompile(Tuple{Type{Compose.TextPrimitive{P, R, O} where O<:(Tuple{Vararg{Measures.Measure, N}} where N) where R<:(Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)) where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, String, Compose.HCenter, Compose.VTop, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{getfield(Compose, Symbol("##text#26")), Symbol, typeof(Compose.text), Array{Float64, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{AbstractString, 1}, Array{Compose.HCenter, 1}, Array{Compose.VBottom, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Float64, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{AbstractString, 1}, Array{Compose.HCenter, 1}, Array{Compose.VBottom, 1}})
precompile(Tuple{Type{Compose.TextPrimitive{P, R, O} where O<:(Tuple{Vararg{Measures.Measure, N}} where N) where R<:(Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)) where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, String, Compose.HCenter, Compose.VBottom, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.Identprecompile(Tuple{typeof(precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.UnitBox{Float64, Floatprecompile(Tuple{getfield(Gadfly.Guide, Symbol("#7#15")){Measures.Length{:mm, Float64}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#7#15")){Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#8#16"))}})
precompile(Tuple{typeof(Base.copyto!), Array{AbstractString, 1}, Base.ValueIterator{OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#6#14")){Array{Int64, 1}, Measures.Length{:mm, Float64}, Array{Measures.Measure, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Gadfly.Theme, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.context), Measures.Length{:mm, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base.:(+)), Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:units,), Tuple{Compose.UnitBox{Int64, Int64, Int64, Int64}}}, typeof(Compose.context), Int64, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(precompile(Tuple{typeof(Base.:(-)), Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}}, Base.UnitRange{Intprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#7#15")){Measures.Length{:mm, Float64}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, 1}, Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#7#15")){Measures.Length{:precompile(Tuple{typeof(precompile(Tuple{typeof(Compose.rectangle), Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, 1}, Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Length{:mm, Float64}, 1}, Symbol})
precompile(Tuple{typeof(Compose.rectangle), Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, 1}, Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Lenprecompile(Tuple{typeof(precompile(Tuple{typeof(Base.allocatedinline), Type{ColorTypes.Color{Tprecompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.Color{T, N} where N where T, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.Color{T, N} where N where T, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.default_discrete_highlight_color), Tuple{Array{ColorTypes.Color{T, N} where N where T, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.default_discrete_highlight_color), Tuple{Base.Broadcast.Extruded{Array{ColorTypes.Color{T, N} where N where T, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.default_discrete_highlight_color), Tuple{Array{ColorTypes.Color{T, N} where N where T, 1}}}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.StrokePrimitive, 1}, Base.Generator{Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, getfield(Compose, Symbol("#42#43"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, getfield(Compose, Symbol("#42#43"))}})
precompile(Tuple{typeof(Compose.stroke), Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.FillPrimitive, 1}, Base.Generator{Array{ColorTypes.Color{T, N} where N where T, 1}, getfield(Compose, Symbol("#44#45"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{ColorTypes.Color{T, N} where N where T, 1}, getfield(Compose, Symbol("#44#45"))}})
precompile(Tuple{typeof(Base.fill), Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{getfield(Compose, Symbol("#44#45")), ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}, Compose.Property{Compose.StrokePrimitive}, Compose.Property{Compose.FillPrimitive}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Property{Compose.StrokePrimitive}, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.vect), Measures.Length{:mm, Float64}})
precompile(Tuple{getfield(Compose, Symbol("##text#26")), Symbol, typeof(Compose.text), Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Length{:cy, Int64}, 1}, Array{AbstractString, 1}, Array{Compose.HLeft, 1}, Array{Compose.VCenter, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Length{:cy, Int64}, 1}, Array{AbstractString, 1}, Array{Compose.HLeft, 1}, Array{Compose.VCenter, 1}})
precompile(Tuple{Type{Compose.TextPrimitive{P, R, O} where O<:(Tuple{Vararg{Measures.Measure, N}} where N) where R<:(Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)) where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, String, Compose.HLeft, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Compose.context), Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#9#17")){getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}}, Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Array{ColorTypes.Color{T, N} where N where T, 1}, getfield(Gadfly.Guide, Symbol("#9#17")){getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{ColorTypes.Color{T, N} where N where T, 1}, getfield(Gadfly.Guide, Symbol("#9#17")){getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#9#17")){getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}}, ColorTypes.RGB{Float32}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#10#18")), Array{String, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{String, 1}, getfield(Gadfly.Guide, Symbol("#10#18"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{String, 1}, getfield(Gadfly.Guide, Symbol("#10#18"))}})
precompile(Tuple{typeof(Compose.jscall), Array{String, 1}, Array{Array{Measures.Measure, 1}, 1}})
precompile(Tuple{typeof(Compose.jscall), Array{String, 1}})
precompile(Tuple{typeof(Base.:(+)), Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.JSCallPrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.JSCallPrimitive, 1}, Compose.JSCallPrimitive, Base.Generator{Array{Compose.JSCallPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.JSCallPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.JSCallPrimitive}, Type{Compose.Property{Compose.JSCallPrimitive}}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.JSCallPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.JSCallPrimitive})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Int64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:cx, Int64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.UnitBox{Int64, Int64, Int64, Int64}})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.Context, Compose.IdentityTransform, Compose.UnitBox{Int64, Int64, Int64, Int64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.JSCallPrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.JSCallPrimitive, 1}, Compose.JSCallPrimitive, Base.Generator{Array{Compose.JSCallPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.JSCallPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGClassPrimitive, 1}, Compose.SVGClassPrimitive, Base.Generator{Array{Compose.SVGClassPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Type})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.JSCallPrimitive}, Type{Compose.Property{Compose.JSCallPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.SVGClassPrimitive}, Type{Compose.Property{Compose.SVGClassPrimitive}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FillPrimitive, 1}, Compose.FillPrimitive, Base.Generator{Array{Compose.FillPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.FontSizePrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FontSizePrimitive, 1}, Compose.FontSizePrimitive, Base.Generator{Array{Compose.FontSizePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.FontSizePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FontPrimitive, 1}, Compose.FontPrimitive, Base.Generator{Array{Compose.FontPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HLeft, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FillOpacityPrimitive, 1}, Compose.FillOpacityPrimitive, Base.Generator{Array{Compose.FillOpacityPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.StrokePrimitive, 1}, Compose.StrokePrimitive, Base.Generator{Array{Compose.StrokePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FillOpacityPrimitive}, Type{Compose.Property{Compose.FillOpacityPrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.FillOpacityPrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FillOpacityPrimitive, 1}, Compose.FillOpacityPrimitive, Base.Generator{Array{Float64, 1}, Type{Compose.FillOpacityPrimitive}}, Int64})
precompile(Tuple{typeof(Compose.fillopacity), Array{Float64, 1}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokePrimitive}, Type{Compose.Property{Compose.StrokePrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillOpacityPrimitive}, Type{Compose.Property{Compose.FillOpacityPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillPrimitive}, Type{Compose.Property{Compose.FillPrimitive}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Base.Generator{Array{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Tuple{Measures.Length{:mm, Float64}, Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{Type{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Symbol})
precompile(Tuple{typeof(Base.isempty), Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.fillstroke), Compose.Image{Compose.PDFBackend}, Bool})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{Type{Base.Pair{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}}, Any, Any})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FillOpacityPrimitive})
precompile(Tuple{typeof(Base.getproperty), Compose.Property{Compose.FillOpacityPrimitive}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.StrokePrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.FillOpacityPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.FillPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.JSCallPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.SVGClassPrimitive}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:mm, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HLeft, Compose.VBottom, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.vect), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Vararg{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, N} where N})
precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Array{Array{T, 1} where T, 1}, getfield(Compose, Symbol("#1#2"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{T, 1} where T, 1}, getfield(Compose, Symbol("#1#2"))}})
precompile(Tuple{typeof(Compose.narrow_polygon_point_types), Array{Array{T, 1} where T, 1}})
precompile(Tuple{typeof(Compose.clip), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{getfield(Compose, Symbol("#1#2")), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.type_params), Type{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base._array_for), Type{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Base.HasShape{1}})
precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Int64})
precompile(Tuple{Type{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Base.getindex), Type{Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, Base.IndexLinear, Array{Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{Type{Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}}, Array{Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Type{Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, Int64})
precompile(Tuple{typeof(Base.allocatedinline), Type{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.push!), Array{Tuple{Int64, Int64, Compose.Container}, 1}, Tuple{Int64, Int64, Compose.Context}})
precompile(Tuple{typeof(Base.isless), Tuple{Compose.Context}, Tuple{Compose.Context}})
precompile(Tuple{typeof(Base.Order.lt), Base.Order.ForwardOrdering, Tuple{Int64, Int64, Compose.Context}, Tuple{Int64, Int64, Compose.Context}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGAttributePrimitive, 1}, Compose.SVGAttributePrimitive, Base.Generator{Array{Compose.SVGAttributePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.SVGAttributePrimitive}, Type{Compose.Property{Compose.SVGAttributePrimitive}}})
precompile(Tuple{Type{Compose.ImagePropertyState}, ColorTypes.RGBA{Float64}, ColorTypes.RGBA{Float64}, Array{Float64, 1}, Compose.LineCapButt, Compose.LineJoinMiter, Bool, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Bool})
precompile(Tuple{typeof(Base.getindex), Array{Compose.SVGAttributePrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.SVGAttributePrimitive})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Base.Generator{Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Compose.batch), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#48#49")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.StrokeDashPrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.StrokeDashPrimitive, 1}, Compose.StrokeDashPrimitive, Base.Generator{Array{Compose.StrokeDashPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.StrokeDashPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#48#49")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Length{:mm, Float64}}, Array{Measures.Measure, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#48#49")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#48#49")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{Type{Compose.StrokeDashPrimitive}, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.LineWidthPrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.LineWidthPrimitive, 1}, Compose.LineWidthPrimitive, Base.Generator{Array{Compose.LineWidthPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.LineWidthPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{Type{Compose.LineWidthPrimitive}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.StrokeDashPrimitive}, Type{Compose.Property{Compose.StrokeDashPrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.LineWidthPrimitive}, Type{Compose.Property{Compose.LineWidthPrimitive}}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.StrokeDashPrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#141#142")){Compose.Image{Compose.PDFBackend}}}, Int64, Int64})
precompile(Tuple{typeof(Base._collect), Array{Measures.Measure, 1}, Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#141#142")){Compose.Image{Compose.PDFBackend}}}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.StrokeDashPrimitive})
precompile(Tuple{getfield(Compose, Symbol("#141#142")){Compose.Image{Compose.PDFBackend}}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.LineWidthPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.LineWidthPrimitive})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}, Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Length{:cy, Float64}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.isempty), Array{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.batch), Compose.Form{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Measures.Length{:mm, Float64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Compose.arrowhead), Compose.Image{Compose.PDFBackend}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Float64, Float64})
precompile(Tuple{typeof(Compose.arrow), Compose.Image{Compose.PDFBackend}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Float64}, Measures.Length{:h, Float64}}})
precompile(Tuple{Type{Compose.StrokeDashPrimitive}, Array{Any, 1}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokeDashPrimitive}, Type{Compose.Property{Compose.StrokeDashPrimitive}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.StrokeDashPrimitive}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#54#63")){Gadfly.Theme, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{getfield(Compose, Symbol("##text#26")), Symbol, typeof(Compose.text), Array{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{Float64, 1}, Array{AbstractString, 1}, Array{Compose.HRight, 1}, Array{Compose.VCenter, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{Float64, 1}, Array{AbstractString, 1}, Array{Compose.HRight, 1}, Array{Compose.VCenter, 1}})
precompile(Tuple{Type{Compose.TextPrimitive{P, R, O} where O<:(Tuple{Vararg{Measures.Measure, N}} where N) where R<:(Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)) where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, String, Compose.HRight, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HRight, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#74#76")){Gadfly.Guide.YLabel, Gadfly.Theme, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.text), Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HCenter, Compose.VCenter, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HCenter, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Cairo.destroy), Cairo.CairoSurfaceIOStream{UInt32}})
precompile(Tuple{typeof(Cairo.destroy), Cairo.CairoContext})
), Cairo.CairoContext})
precompile(Tuple{typeof(Parsers.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#33#38")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#34#39")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#35#40")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#36#41")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#37#42")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Compat.Sys.__init__)})
precompile(Tuple{typeof(FilePathsBase.__init__)})
precompile(Tuple{typeof(CSV.__init__)})
precompile(Tuple{typeof(Base.active_project), Bool})
precompile(Tuple{typeof(Base.load_path_expand), String})
precompile(Tuple{typeof(Base.load_path)})
precompile(Tuple{getfield(Base, Symbol("#681#682")){String}, Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#681#682")){String}, String})
precompile(Tuple{typeof(Base.project_deps_get), String, String})
precompile(Tuple{typeof(Base.identify_package), String})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Any, Int64}, Symbol})
precompile(Tuple{getfield(Base, Symbol("#689#690")){Base.UUID, String}, Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#689#690")){Base.UUID, String}, String})
precompile(Tuple{typeof(Base.manifest_deps_get), String, Base.PkgId, String})
precompile(Tuple{typeof(Base.identify_package), Base.PkgId, String})
precompile(Tuple{typeof(Base.manifest_uuid_path), String, Base.PkgId})
precompile(Tuple{typeof(Base.locate_package), Base.PkgId})
precompile(Tuple{typeof(Base.stat), Base.Libc.RawFD})
precompile(Tuple{typeof(Base.isvalid_file_crc), Base.IOStream})
precompile(Tuple{typeof(Base.stale_cachefile), String, String})
precompile(Tuple{typeof(Base.register_root_module), Module})
precompile(Tuple{typeof(Base._include_from_serialized), String, Array{Any, 1}})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, String})
precompile(Tuple{typeof(Base._require_search_from_serialized), Base.PkgId, String})
precompile(Tuple{typeof(Base.compilecache_path), Base.PkgId})
precompile(Tuple{typeof(Base.load_path_setup_code), Bool})
precompile(Tuple{typeof(Base.create_expr_cache), String, String, Array{Base.Pair{Base.PkgId, UInt64}, 1}, Nothing})
precompile(Tuple{typeof(Base.compilecache), Base.PkgId, String})
precompile(Tuple{typeof(Base._include_dependency), Module, String})
precompile(Tuple{typeof(Base.include_relative), Module, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, Nothing})
precompile(Tuple{typeof(Base._require_from_serialized), String})
precompile(Tuple{typeof(Base._require), Base.PkgId})
precompile(Tuple{typeof(Base.require), Base.PkgId})
precompile(Tuple{typeof(Base.require), Module, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.IdDict{Module, Base.PkgId}, Any, Any})
precompile(Tuple{typeof(Base.include_dependency), String})
precompile(Tuple{typeof(Rmath_jll.__init__)})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##load_overrides#3")), Bool, typeof(Pkg.Artifacts.load_overrides)})
precompile(Tuple{typeof(Pkg.Artifacts.process_overrides), Base.Dict{String, Any}, Base.UUID})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_meta#20")), Pkg.BinaryPlatforms.Platform, typeof(Pkg.Artifacts.artifact_meta), String, Base.Dict{String, Any}, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##artifact_meta")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.artifact_meta), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.unpack_platform), Base.Dict{String, Any}, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}, Base.Dict{String, Any}})
precompile(Tuple{Type{Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Generator{Array{Base.Dict{String, Any}, 1}, getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}}})
precompile(Tuple{typeof(Base.mapfilter), getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, typeof(Base.push!), Base.KeySet{Pkg.BinaryPlatforms.Platform, Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Set{Pkg.BinaryPlatforms.Platform}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.query_override), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_paths#9")), Bool, typeof(Pkg.Artifacts.artifact_paths), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_exists#11")), Bool, typeof(Pkg.Artifacts.artifact_exists), Base.SHA1})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple, 1}, getfield(Pkg.PlatformEngines, Symbol("#36#61"))}})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##probe_cmd#14")), Bool, typeof(Pkg.PlatformEngines.probe_cmd), Base.Cmd})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple, 1}, getfield(Pkg.PlatformEngines, Symbol("#40#65"))}})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##probe_platform_engines!#15")), Bool, typeof(Pkg.PlatformEngines.probe_platform_engines!)})
precompile(Tuple{typeof(Base.read), Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#280#281")){String}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##verify#98")), Bool, Bool, String, typeof(Pkg.PlatformEngines.verify), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download#82")), Bool, typeof(Pkg.PlatformEngines.download), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify#83")), Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify), String, String, String})
precompile(Tuple{typeof(Base.convert), Type{Nothing}, Base.SubString{String}})
precompile(Tuple{typeof(Base.convert), Type{Base.Pair{Nothing, String}}, Base.Pair{Base.SubString{String}, String}})
precompile(Tuple{typeof(Base.setindex!), Array{Base.Pair{Nothing, String}, 1}, Base.Pair{Base.SubString{String}, String}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.Pair{Nothing, String}, 1}, Base.Pair{Base.SubString{String}, String}, Base.Generator{Array{Array{Union{Nothing, Base.SubString{String}}, 1}, 1}, getfield(Pkg.PlatformEngines, Symbol("#88#90"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{Union{Nothing, Base.SubString{String}}, 1}, 1}, getfield(Pkg.PlatformEngines, Symbol("#88#90"))}})
precompile(Tuple{typeof(Pkg.PlatformEngines.list_tarball_symlinks), String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("#kw##cptree")), NamedTuple{(:force, :follow_symlinks), Tuple{Bool, Bool}}, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{typeof(Base.Filesystem.sendfile), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cptree#11")), Bool, Bool, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cp#12")), Bool, Bool, typeof(Base.Filesystem.cp), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##artifact_paths")), NamedTuple{(:honor_overrides,), Tuple{Bool}}, typeof(Pkg.Artifacts.artifact_paths), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_path#10")), Bool, typeof(Pkg.Artifacts.artifact_path), Base.SHA1})
precompile(Tuple{typeof(Base.Filesystem.rename), String, String})
precompile(Tuple{typeof(Pkg.GitTools.set_readonly), String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.artifact_path), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##query_override#7")), Base.Dict{Symbol, Base.Dict{K, V} where V where K}, typeof(Pkg.Artifacts.query_override), Base.SHA1})
precompile(Tuple{typeof(Random.make_seed)})
precompile(Tuple{Type{Random.MersenneTwister}, Nothing})
precompile(Tuple{typeof(Random.default_rng), Int64})
precompile(Tuple{typeof(Base.rand)})
precompile(Tuple{typeof(Base.randn)})
precompile(Tuple{typeof(Random.randexp)})
precompile(Tuple{typeof(Rmath.__init__)})
precompile(Tuple{typeof(Requires.__init__)})
precompile(Tuple{typeof(Requires.loadpkg), Base.PkgId})
precompile(Tuple{typeof(ArrayInterface.__init__)})
precompile(Tuple{typeof(Requires.listenpkg), Any, Base.PkgId})
precompile(Tuple{typeof(Requires.withpath), Any, String})
precompile(Tuple{getfield(ArrayInterface, Symbol("#15#36"))})
precompile(Tuple{typeof(Requires.withnotifications), String, Vararg{Any, N} where N})
precompile(Tuple{getfield(ArrayInterface, Symbol("#16#37"))})
precompile(Tuple{typeof(Base.catch_backtrace)})
precompile(Tuple{typeof(Requires.err), Any, Module, String})
precompile(Tuple{getfield(ArrayInterface, Symbol("#17#38"))})
precompile(Tuple{typeof(Base.get!), getfield(Requires, Symbol("#1#2")), Base.Dict{Base.PkgId, Array{Function, 1}}, Base.PkgId})
precompile(Tuple{getfield(ArrayInterface, Symbol("#18#39"))})
precompile(Tuple{getfield(ArrayInterface, Symbol("#19#40"))})
precompile(Tuple{getfield(ArrayInterface, Symbol("#20#41"))})
precompile(Tuple{typeof(Base.stat), Base.Libc.RawFD})
precompile(Tuple{typeof(Base.isvalid_file_crc), Base.IOStream})
precompile(Tuple{typeof(Base.stale_cachefile), String, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, String})
precompile(Tuple{typeof(Base._require_search_from_serialized), Base.PkgId, String})
precompile(Tuple{typeof(Base.create_expr_cache), String, String, Array{Base.Pair{Base.PkgId, UInt64}, 1}, Nothing})
precompile(Tuple{typeof(Base.compilecache), Base.PkgId, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, Nothing})
precompile(Tuple{typeof(Base._require_from_serialized), String})
precompile(Tuple{typeof(Base._require), Base.PkgId})
precompile(Tuple{typeof(Base.require), Base.PkgId})
precompile(Tuple{typeof(FiniteDiff.__init__)})
precompile(Tuple{typeof(CompilerSupportLibraries_jll.__init__)})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##load_overrides#3")), Bool, typeof(Pkg.Artifacts.load_overrides)})
precompile(Tuple{typeof(Pkg.Artifacts.process_overrides), Base.Dict{String, Any}, Base.UUID})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##artifact_meta")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.artifact_meta), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.unpack_platform), Base.Dict{String, Any}, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}, Base.Dict{String, Any}})
precompile(Tuple{Type{Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Generator{Array{Base.Dict{String, Any}, 1}, getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}}})
precompile(Tuple{typeof(Base.ntuple), getfield(Base, Symbol("#457#458")){Array{Base.SubString{String}, 1}}, Int64})
precompile(Tuple{Type{Base.VersionNumber}, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#nover#17")), String})
precompile(Tuple{typeof(Base.:(==)), Base.VersionNumber, Base.VersionNumber})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:libgfortran_version, :libstdcxx_version, :cxxstring_abi), Tuple{Base.VersionNumber, Nothing, Nothing}}, Type{Pkg.BinaryPlatforms.CompilerABI}})
precompile(Tuple{typeof(Base.mapfilter), getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, typeof(Base.push!), Base.KeySet{Pkg.BinaryPlatforms.Platform, Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Set{Pkg.BinaryPlatforms.Platform}})
precompile(Tuple{getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, Pkg.BinaryPlatforms.Linux})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.query_override), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_paths#9")), Bool, typeof(Pkg.Artifacts.artifact_paths), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_exists#11")), Bool, typeof(Pkg.Artifacts.artifact_exists), Base.SHA1})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##probe_platform_engines!#15")), Bool, typeof(Pkg.PlatformEngines.probe_platform_engines!)})
precompile(Tuple{typeof(Base.read), Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#280#281")){String}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##verify#98")), Bool, Bool, String, typeof(Pkg.PlatformEngines.verify), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify#83")), Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify), String, String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("#kw##cptree")), NamedTuple{(:force, :follow_symlinks), Tuple{Bool, Bool}}, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{typeof(Base.Filesystem.sendfile), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cptree#11")), Bool, Bool, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cp#12")), Bool, Bool, typeof(Base.Filesystem.cp), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##artifact_paths")), NamedTuple{(:honor_overrides,), Tuple{Bool}}, typeof(Pkg.Artifacts.artifact_paths), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_path#10")), Bool, typeof(Pkg.Artifacts.artifact_path), Base.SHA1})
precompile(Tuple{typeof(Base.Filesystem.rename), String, String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.artifact_path), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##query_override#7")), Base.Dict{Symbol, Base.Dict{K, V} where V where K}, typeof(Pkg.Artifacts.query_override), Base.SHA1})
precompile(Tuple{typeof(Base.foreach), getfield(OpenSpecFun_jll, Symbol("#7#9")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(OpenSpecFun_jll, Symbol("#8#10")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(OpenSpecFun_jll.__init__)})
precompile(Tuple{typeof(OpenBLAS_jll.__init__)})
precompile(Tuple{typeof(Pkg.Artifacts.process_overrides), Base.Dict{String, Any}, Base.UUID})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{typeof(Pkg.Artifacts.unpack_platform), Base.Dict{String, Any}, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}, Base.Dict{String, Any}})
precompile(Tuple{Type{Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Generator{Array{Base.Dict{String, Any}, 1}, getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}}})
precompile(Tuple{typeof(Base.:(==)), Base.VersionNumber, Base.VersionNumber})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:libgfortran_version, :libstdcxx_version, :cxxstring_abi), Tuple{Base.VersionNumber, Nothing, Nothing}}, Type{Pkg.BinaryPlatforms.CompilerABI}})
precompile(Tuple{getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, Pkg.BinaryPlatforms.Linux})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Base.stat), Base.Libc.RawFD})
precompile(Tuple{typeof(Base.read), Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#280#281")){String}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##verify#98")), Bool, Bool, String, typeof(Pkg.PlatformEngines.verify), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify#83")), Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify), String, String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("#kw##cptree")), NamedTuple{(:force, :follow_symlinks), Tuple{Bool, Bool}}, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{typeof(Base.Filesystem.sendfile), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cptree#11")), Bool, Bool, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cp#12")), Bool, Bool, typeof(Base.Filesystem.cp), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{typeof(Base.Filesystem.rename), String, String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Base.foreach), getfield(Arpack_jll, Symbol("#7#9")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Arpack_jll, Symbol("#8#10")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Arpack_jll.__init__)})
precompile(Tuple{typeof(FFTW_jll.__init__)})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(FFTW.__init__)})
precompile(Tuple{typeof(DocStringExtensions.__init__)})
precompile(Tuple{typeof(Compose.__init__)})
precompile(Tuple{typeof(Base.copyto!), Array{Function, 1}, Tuple{typeof(Compose.circle), typeof(Gadfly.Shape.square), typeof(Gadfly.Shape.diamond), typeof(Gadfly.Shape.cross), typeof(Gadfly.Shape.xcross), typeof(Gadfly.Shape.utriangle), typeof(Gadfly.Shape.dtriangle), typeof(Gadfly.Shape.star1), typeof(Gadfly.Shape.star2), typeof(Gadfly.Shape.hexagon), typeof(Gadfly.Shape.octagon), typeof(Gadfly.Shape.hline), typeof(Gadfly.Shape.vline), typeof(Gadfly.Shape.ltriangle), typeof(Gadfly.Shape.rtriangle)}})
precompile(Tuple{getfield(Gadfly, Symbol("##Theme#57")), ColorTypes.LCHab{Float32}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Function, Function, Array{Function, 1}, Measures.Length{:mm, Float64}, Array{Symbol, 1}, Array{Float64, 1}, Nothing, Nothing, Float64, Nothing, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Int64, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, typeof(Gadfly.default_stroke_color), Measures.Length{:mm, Float64}, typeof(Gadfly.default_discrete_highlight_color), typeof(Gadfly.default_continuous_highlight_color), typeof(Gadfly.default_lowlight_color), typeof(Gadfly.default_middle_color), Measures.Length{:mm, Float64}, Symbol, Symbol, typeof(Gadfly.Shape.square), Nothing, Nothing, Symbol, Nothing, Measures.Length{:mm, Float64}, Int64, Float64, Float64, Float64, Measures.Length{:mm, Float64}, Int64, Gadfly.Scale.DiscreteColorScale, Gadfly.Scale.ContinuousColorScale, Type{Gadfly.Theme}})
precompile(Tuple{Type{Gadfly.Theme}})
precompile(Tuple{typeof(Gadfly.push_theme), Symbol})
precompile(Tuple{typeof(Gadfly.__init__)})
precompile(Tuple{getfield(Gadfly, Symbol("#2#9"))})
precompile(Tuple{getfield(Gadfly, Symbol("#3#10"))})
precompile(Tuple{getfield(Gadfly, Symbol("#4#11"))})
precompile(Tuple{typeof(Base.isvalid_file_crc), Base.IOStream})
precompile(Tuple{typeof(Base.stale_cachefile), String, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, String})
precompile(Tuple{typeof(Base._require_search_from_serialized), Base.PkgId, String})
precompile(Tuple{typeof(Base.create_expr_cache), String, String, Array{Base.Pair{Base.PkgId, UInt64}, 1}, Nothing})
precompile(Tuple{typeof(Base.compilecache), Base.PkgId, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, Nothing})
precompile(Tuple{typeof(Base._require_from_serialized), String})
precompile(Tuple{typeof(Base._require), Base.PkgId})
precompile(Tuple{typeof(Base.require), Base.PkgId})
precompile(Tuple{typeof(Gadfly.link_dataframes)})
precompile(Tuple{typeof(Base.require), Module, Symbol})
precompile(Tuple{typeof(Pixman_jll.__init__)})
precompile(Tuple{getfield(Base.Cartesian, Symbol("#@nloops")), LineNumberNode, Module, Any, Any, Any, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.Cartesian.exprresolve_arith), Expr})
precompile(Tuple{typeof(Base.Cartesian.exprresolve_conditional), Expr})
precompile(Tuple{typeof(Base.Cartesian.exprresolve), Expr})
precompile(Tuple{typeof(Base.Cartesian.inlineanonymous), Expr, Int64})
precompile(Tuple{typeof(Base.Cartesian._nloops), Int64, Symbol, Expr, Expr})
precompile(Tuple{typeof(Base.Cartesian.lreplace!), Expr, Base.Cartesian.LReplace{String}})
precompile(Tuple{typeof(Base.Cartesian.lreplace), Expr, Symbol, Int64})
precompile(Tuple{getfield(Base, Symbol("##s66#142")), Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{DataFrames.RowIndexMap, 1}}})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{typeof(Pkg.Artifacts.unpack_platform), Base.Dict{String, Any}, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}, Base.Dict{String, Any}})
precompile(Tuple{Type{Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Generator{Array{Base.Dict{String, Any}, 1}, getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##probe_platform_engines!#15")), Bool, typeof(Pkg.PlatformEngines.probe_platform_engines!)})
precompile(Tuple{typeof(Base.convert), Type{Nothing}, Base.SubString{String}})
precompile(Tuple{typeof(Base.convert), Type{Base.Pair{Nothing, String}}, Base.Pair{Base.SubString{String}, String}})
precompile(Tuple{typeof(Base.setindex!), Array{Base.Pair{Nothing, String}, 1}, Base.Pair{Base.SubString{String}, String}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.Pair{Nothing, String}, 1}, Base.Pair{Base.SubString{String}, String}, Base.Generator{Array{Array{Union{Nothing, Base.SubString{String}}, 1}, 1}, getfield(Pkg.PlatformEngines, Symbol("#88#90"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{Union{Nothing, Base.SubString{String}}, 1}, 1}, getfield(Pkg.PlatformEngines, Symbol("#88#90"))}})
precompile(Tuple{typeof(Pkg.PlatformEngines.list_tarball_symlinks), String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(PCRE_jll.__init__)})
precompile(Tuple{typeof(Libiconv_jll.__init__)})
precompile(Tuple{typeof(Libffi_jll.__init__)})
precompile(Tuple{typeof(Zlib_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(XML2_jll, Symbol("#13#15")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(XML2_jll, Symbol("#14#16")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(XML2_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Gettext_jll, Symbol("#7#9")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Gettext_jll, Symbol("#8#10")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Gettext_jll.__init__)})
precompile(Tuple{typeof(Glib_jll.__init__)})
precompile(Tuple{typeof(Libuuid_jll.__init__)})
precompile(Tuple{typeof(Libgpg_error_jll.__init__)})
precompile(Tuple{typeof(Libgcrypt_jll.__init__)})
precompile(Tuple{typeof(Bzip2_jll.__init__)})
precompile(Tuple{typeof(FreeType2_jll.__init__)})
precompile(Tuple{typeof(Expat_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Fontconfig_jll, Symbol("#34#36")), Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Fontconfig_jll, Symbol("#35#37")), Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Fontconfig_jll.__init__)})
precompile(Tuple{typeof(XSLT_jll.__init__)})
precompile(Tuple{typeof(Xorg_libXdmcp_jll.__init__)})
precompile(Tuple{typeof(libpng_jll.__init__)})
precompile(Tuple{typeof(Xorg_libXau_jll.__init__)})
precompile(Tuple{typeof(Xorg_libpthread_stubs_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libxcb_jll, Symbol("#7#9")), Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libxcb_jll, Symbol("#8#10")), Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Xorg_libxcb_jll.__init__)})
precompile(Tuple{typeof(Xorg_xtrans_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libX11_jll, Symbol("#7#9")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libX11_jll, Symbol("#8#10")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Xorg_libX11_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libXrender_jll, Symbol("#7#9")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libXrender_jll, Symbol("#8#10")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Xorg_libXrender_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libXext_jll, Symbol("#7#9")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libXext_jll, Symbol("#8#10")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Xorg_libXext_jll.__init__)})
precompile(Tuple{typeof(LZO_jll.__init__)})
precompile(Tuple{getfield(Base.Cartesian, Symbol("#@nexprs")), LineNumberNode, Module, Int64, Expr})
precompile(Tuple{typeof(Cairo_jll.__init__)})
precompile(Tuple{typeof(Graphite2_jll.__init__)})
precompile(Tuple{typeof(HarfBuzz_jll.__init__)})
precompile(Tuple{typeof(FriBidi_jll.__init__)})
precompile(Tuple{typeof(Pango_jll.__init__)})
precompile(Tuple{typeof(Cairo.__init__)})
precompile(Tuple{getfield(Compose, Symbol("#114#120"))})
precompile(Tuple{getfield(Compose, Symbol("#115#121"))})
precompile(Tuple{getfield(Compose, Symbol("#116#122"))})
precompile(Tuple{typeof(Compose.link_cairo)})
precompile(Tuple{typeof(Compose.docfunc), Symbol, String})
precompile(Tuple{getfield(DocStringExtensions, Symbol("#20#21")){typeof(DocStringExtensions.template_hook)}, LineNumberNode, Vararg{Any, N} where N})
precompile(Tuple{typeof(DocStringExtensions.template_hook), LineNumberNode, Module, String, Symbol})
precompile(Tuple{typeof(Base.Docs.docerror), Any})
precompile(Tuple{typeof(Base.Docs.docm), LineNumberNode, Module, Any, Any, Bool})
precompile(Tuple{typeof(Base.Docs.docm), LineNumberNode, Module, Any, Any})
precompile(Tuple{typeof(Base.Docs.objectdoc), Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Base.Docs.splitexpr), Expr})
precompile(Tuple{typeof(Base.Docs.bindingexpr), Any})
precompile(Tuple{typeof(Base.Docs.objectdoc), Any, Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Base.Docs.docstr), Any, Any})
precompile(Tuple{typeof(Base.Docs._docstr), Core.SimpleVector, Any})
precompile(Tuple{typeof(Base.:(==)), Module, WeakRef})
precompile(Tuple{typeof(Base.Docs.doc!), Module, Base.Docs.Binding, Base.Docs.DocStr, Any})
precompile(Tuple{typeof(Base.print_to_string), Expr})
precompile(Tuple{typeof(Base.string), Expr})
precompile(Tuple{typeof(Base.show_list), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Any, 1}, String, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.show_list), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Any, 1}, Symbol, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.show_enclosed_list), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Array{Any, 1}, String, String, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.show_generator), Base.GenericIOBuffer{Array{UInt8, 1}}, Expr, Int64})
precompile(Tuple{typeof(Base.show_list), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Any, 1}, Char, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.show_block), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Array{Any, 1}, Expr, Int64})
precompile(Tuple{typeof(Base.show_unquoted), Base.GenericIOBuffer{Array{UInt8, 1}}, Expr, Int64, Int64})
precompile(Tuple{typeof(Base.show_call), Base.GenericIOBuffer{Array{UInt8, 1}}, Symbol, Symbol, Array{Any, 1}, Int64})
precompile(Tuple{getfield(Printf, Symbol("#@sprintf")), LineNumberNode, Module, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.Printf.gen), String})
precompile(Tuple{typeof(Base.Printf._printf), String, Expr, String, Tuple{Expr, Expr}})
precompile(Tuple{typeof(Base.Printf._printf), String, Expr, String, Tuple{Symbol, Expr}})
precompile(Tuple{getfield(Base.Cartesian, Symbol("#@ncall")), LineNumberNode, Module, Int64, Any, Vararg{Any, N} where N})
precompile(Tuple{typeof(CSV.isvaliddelim), Char})
precompile(Tuple{typeof(Base._all), typeof(CSV.isvaliddelim), String, Base.Colon})
precompile(Tuple{typeof(CSV.checkvaliddelim), String})
precompile(Tuple{typeof(Mmap.mmap), String, Type{Array{UInt8, 1}}})
precompile(Tuple{typeof(CSV.getsource), String, Bool})
precompile(Tuple{typeof(CSV.skiptorow), CSV.ReversedBuf, Int64, Int64, UInt8, UInt8, UInt8, Int64, Int64})
precompile(Tuple{typeof(CSV.skiptorow), Array{UInt8, 1}, Int64, Int64, UInt8, UInt8, UInt8, Int64, Int64})
precompile(Tuple{typeof(CSV.checkcommentandemptyline), Array{UInt8, 1}, Int64, Int64, Nothing, Bool})
precompile(Tuple{typeof(CSV.detectheaderdatapos), Array{UInt8, 1}, Int64, Int64, UInt8, UInt8, UInt8, Nothing, Bool, Int64, Int64})
precompile(Tuple{typeof(CSV.detectdelimandguessrows), Array{UInt8, 1}, Int64, Int64, Int64, UInt8, UInt8, UInt8, UInt8, Nothing, Bool})
precompile(Tuple{Type{Parsers.Options{ignorerepeated, Q, debug, S, D, DF} where DF where D where S where debug where Q where ignorerepeated}, Base.Missing, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, Nothing, Nothing, Nothing, Bool, Bool, Bool, Bool, Bool})
precompile(Tuple{typeof(Base.sort!), Array{Base.Pair{String, UInt64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(CSV, Symbol("#21#29"))}})
precompile(Tuple{typeof(Base.sort!), Array{Base.Pair{String, UInt64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.By{getfield(CSV, Symbol("#21#29"))}, Array{Base.Pair{String, UInt64}, 1}})
precompile(Tuple{typeof(Random.make_seed)})
precompile(Tuple{Type{Random.MersenneTwister}, Nothing})
precompile(Tuple{typeof(Random.default_rng), Int64})
precompile(Tuple{typeof(Base.rand), Type{Bool}})
precompile(Tuple{getfield(CSV, Symbol("#22#30")){Array{UInt8, 1}, UInt8, Array{Type, 1}, Array{Union{Nothing, Array{String, 1}}, 1}, Int64}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(CSV, Symbol("#22#30")){Array{UInt8, 1}, UInt8, Array{Type, 1}, Array{Union{Nothing, Array{String, 1}}, 1}, Int64}}})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Any, Any}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}})
precompile(Tuple{typeof(Base._all), getfield(Base, Symbol("#240#242")), Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}, Base.Colon})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{Base.Pair{String, UInt64}, 1}, getfield(CSV, Symbol("#20#28"))}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Base.Generator{Array{String, 1}, typeof(Parsers.ptrlen)}, Int64, Int64})
precompile(Tuple{typeof(Base._collect), Array{String, 1}, Base.Generator{Array{String, 1}, typeof(Parsers.ptrlen)}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Parsers, Symbol("#1#2"))}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.By{getfield(Parsers, Symbol("#1#2"))}, Array{Tuple{Ptr{UInt8}, Int64}, 1}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.ReverseOrdering{Base.Order.By{getfield(Parsers, Symbol("#1#2"))}}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.ReverseOrdering{Base.Order.By{getfield(Parsers, Symbol("#1#2"))}}, Array{Tuple{Ptr{UInt8}, Int64}, 1}})
precompile(Tuple{typeof(Parsers.prepare), Array{String, 1}})
precompile(Tuple{Type{Parsers.Options{ignorerepeated, Q, debug, S, D, DF} where DF where D where S where debug where Q where ignorerepeated}, Array{String, 1}, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, Nothing, Nothing, Nothing, Bool, Bool, Bool, Bool, Bool})
precompile(Tuple{Type{Parsers.Options{ignorerepeated, Q, debug, S, D, DF} where DF where D where S where debug where Q where ignorerepeated}, Base.Missing, UInt8, UInt8, UInt8, UInt8, UInt8, String, UInt8, Nothing, Nothing, Nothing, Bool, Bool, Bool, Bool, Bool})
precompile(Tuple{Type{Parsers.Options{ignorerepeated, Q, debug, S, D, DF} where DF where D where S where debug where Q where ignorerepeated}, Array{String, 1}, UInt8, UInt8, UInt8, UInt8, UInt8, String, UInt8, Nothing, Nothing, Nothing, Bool, Bool, Bool, Bool, Bool})
precompile(Tuple{typeof(CSV.detectdelimandguessrows), Array{UInt8, 1}, Int64, Int64, Int64, UInt8, UInt8, UInt8, String, Nothing, Bool})
precompile(Tuple{typeof(CSV.file), String, Int64, Bool, Int64, Nothing, Int64, Int64, Bool, Nothing, Bool, Bool, Array{String, 1}, String, String, Bool, Char, Nothing, Nothing, Char, Nothing, UInt8, Nothing, Nothing, Nothing, Nothing, Base.Dict{Int8, Int8}, Bool, Float64, Bool, Bool, Nothing, Bool, Bool, Nothing})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:header, :normalizenames, :delim, :quotechar, :escapechar, :categorical, :strict), Tuple{Int64, Bool, String, Char, Char, Bool, Bool}}, Type{CSV.File{threaded} where threaded}, String})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{AbstractArray{T, 1} where T, 1}, Base.IndexLinear, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("##make_unique!#1")), Bool, typeof(DataFrames.make_unique!), Array{Symbol, 1}, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{AbstractArray{T, 1} where T, 1}, getfield(DataFrames, Symbol("#100#103"))}})
precompile(Tuple{getfield(DataFrames, Symbol("#DataFrame#99#102")), Bool, Type{DataFrames.DataFrame}, Array{AbstractArray{T, 1} where T, 1}, DataFrames.Index})
precompile(Tuple{getfield(DataFrames, Symbol("##DataFrame#114")), Bool, Bool, Type{DataFrames.DataFrame}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}, Array{Symbol, 1}})
precompile(Tuple{getfield(CSV, Symbol("#kw##read")), NamedTuple{(:header, :normalizenames, :delim, :quotechar, :escapechar, :categorical, :strict), Tuple{Int64, Bool, String, Char, Char, Bool, Bool}}, typeof(CSV.read), String})
precompile(Tuple{typeof(Mmap.grow!), Base.IOStream, Int64, Int64})
precompile(Tuple{getfield(Mmap, Symbol("##mmap#1")), Bool, Bool, typeof(Mmap.mmap), Base.IOStream, Type{Array{UInt8, 1}}, Tuple{Int64}, Int64})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Mmap, Symbol("#7#8")){Array{UInt8, 1}, Bool, Bool, Tuple{Int64}, Int64}, String, Vararg{String, N} where N})
precompile(Tuple{Type{Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}}, Array{String, 1}, Base.Missing, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, Nothing, Nothing, Nothing, Bool, Bool})
precompile(Tuple{typeof(Base.collect_to!), Array{Symbol, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(CSV, Symbol("#8#11"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(CSV, Symbol("#8#11"))}})
precompile(Tuple{typeof(CSV.unescape), CSV.PointerString, UInt8})
precompile(Tuple{typeof(CSV.columnname), Array{UInt8, 1}, Int64, Int64, Int16, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64})
precompile(Tuple{typeof(Base.map), getfield(CSV, Symbol("#4#5")), Base.SubString{String}})
precompile(Tuple{typeof(CSV.normalizename), String})
precompile(Tuple{typeof(Base.collect_to!), Array{Symbol, 1}, Base.Generator{Array{String, 1}, getfield(CSV, Symbol("#9#12")){Bool}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{String, 1}, getfield(CSV, Symbol("#9#12")){Bool}}})
precompile(Tuple{typeof(CSV.makeunique), Array{Symbol, 1}})
precompile(Tuple{typeof(CSV.detectcolumnnames), Array{UInt8, 1}, Int64, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Bool})
precompile(Tuple{getfield(Parsers, Symbol("##s52#15")), Any, Any, Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Dates.character_codes), Type{Dates.DateFormat{Symbol("yyyy-mm-dd"), Tuple{Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Parsers, Symbol("#16#17")), Tuple{DataType, DataType, DataType}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{Type{Tuple}, Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Type, 1}, getfield(Parsers, Symbol("#19#20"))}})
precompile(Tuple{getfield(Parsers, Symbol("##s52#18")), Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Dates._directives), Type{Dates.DateFormat{Symbol("yyyy-mm-dd"), Tuple{Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}}}}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Type, 1}, getfield(Parsers, Symbol("#19#20"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Array{Type, 1}, getfield(Parsers, Symbol("#19#20"))}, Int64})
precompile(Tuple{typeof(Dates.character_codes), Type{Dates.DateFormat{Symbol("yyyy-mm-dd\THH:MM:SS.s"), Tuple{Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x73000000)}}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Parsers, Symbol("#16#17")), Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{Type{Tuple}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Any, 1}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{typeof(Dates._directives), Type{Dates.DateFormat{Symbol("yyyy-mm-dd\THH:MM:SS.s"), Tuple{Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x73000000)}}}}})
precompile(Tuple{typeof(Dates.character_codes), Type{Dates.DateFormat{Symbol("HH:MM:SS.s"), Tuple{Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x73000000)}}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Parsers, Symbol("#16#17")), Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{Type{Tuple}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Any, 1}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{typeof(Dates._directives), Type{Dates.DateFormat{Symbol("HH:MM:SS.s"), Tuple{Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x73000000)}}}}})
precompile(Tuple{typeof(Parsers.codes), Int16})
precompile(Tuple{typeof(CSV.fatalerror), Array{UInt8, 1}, Int64, Int64, Int16, Int64, Int64})
precompile(Tuple{typeof(CSV.reallocatetape), Int64, Int64, Int64})
precompile(Tuple{typeof(CSV.notenoughcolumns), Int64, Int64, Int64})
precompile(Tuple{typeof(CSV.toomanycolumns), Int64, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{String, UInt64}, CSV.PointerString})
precompile(Tuple{typeof(Base.power_by_squaring), Int64, Int64})
precompile(Tuple{typeof(Parsers.pow10), Type{Float64}, Int64})
precompile(Tuple{typeof(Parsers.roundQuotient), Base.GMP.BigInt, Base.GMP.BigInt})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Int64, Int64})
precompile(Tuple{typeof(Parsers.BigInt!), Base.GMP.BigInt, Int128})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Int128, Int64})
precompile(Tuple{typeof(Parsers.pow10), Type{Float64}, Int128})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Int128, Int128})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Base.GMP.BigInt, Int64})
precompile(Tuple{typeof(Parsers.pow10), Type{Float64}, Base.GMP.BigInt})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Base.GMP.BigInt, Base.GMP.BigInt})
precompile(Tuple{typeof(Parsers._typeparser), Type{Float64}, Array{UInt8, 1}, Int64, Int64, UInt8, Int16, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Type{Base.GMP.BigInt}})
precompile(Tuple{typeof(Parsers._typeparser), Type{Float64}, Array{UInt8, 1}, Int64, Int64, UInt8, Int16, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Type{Int128}})
precompile(Tuple{typeof(CSV.detect), Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Base.Dict{Int8, Int8}, Float64, Array{Base.Dict{String, UInt64}, 1}, Array{UInt64, 1}, Array{Int64, 1}, Bool, Array{Int8, 1}, Bool, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Float64}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Dates.Date}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Dates.DateTime}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Dates.Time}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Bool}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsetape), Base.Val{false}, Bool, Int64, Base.Dict{Int8, Int8}, Array{Array{UInt64, 1}, 1}, Array{Array{UInt64, 1}, 1}, Array{UInt8, 1}, Int64, Int64, Int64, Nothing, Array{Int64, 1}, Float64, Array{Base.Dict{String, UInt64}, 1}, Array{UInt64, 1}, Int64, Array{Int8, 1}, Array{Int64, 1}, Bool, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Bool})
precompile(Tuple{typeof(Base.nonmissingtype), Type{CSV.PooledString}})
precompile(Tuple{typeof(CSV.sentinelvalue), Type{CSV.PooledString}})
precompile(Tuple{Type{CSV.Column{String, CSV.PooledString}}, Array{UInt64, 1}, Int64, UInt8, Bool, Array{String, 1}, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(Base.nonmissingtype), Type{Union{Base.Missing, CSV.PooledString}}})
precompile(Tuple{Type{CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}}, Array{UInt64, 1}, Int64, UInt8, Bool, Array{String, 1}, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(CSV._eltype), Type{Union{Base.Missing, Float64}}})
precompile(Tuple{Type{CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}}, Array{UInt64, 1}, Int64, UInt8, Bool, Nothing, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(CSV._eltype), Type{Dates.Date}})
precompile(Tuple{Type{CSV.Column{Dates.Date, Dates.Date}}, Array{UInt64, 1}, Int64, UInt8, Bool, Nothing, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(CSV._eltype), Type{Int64}})
precompile(Tuple{typeof(CSV.uint64), Int64})
precompile(Tuple{Type{CSV.Column{Int64, Int64}}, Array{UInt64, 1}, Int64, UInt8, Bool, Nothing, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(CSV._eltype), Type{Union{Base.Missing, Int64}}})
precompile(Tuple{Type{CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}}, Array{UInt64, 1}, Int64, UInt8, Bool, Nothing, Array{UInt8, 1}, UInt64})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{String, CSV.PooledString}}})
precompile(Tuple{Type{Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}}})
precompile(Tuple{typeof(Base.empty), Base.Dict{Any, Any}, Type{Symbol}, Type{CSV.Column{String, CSV.PooledString}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, CSV.Column{String, CSV.PooledString}, Symbol})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}, Tuple{Int64, Int64}})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}}})
precompile(Tuple{Type{Base.Dict{Symbol, CSV.Column{T, P} where P where T}}})
precompile(Tuple{typeof(Base.empty), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, Type{Symbol}, Type{CSV.Column{T, P} where P where T}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{String, CSV.PooledString}, Symbol})
precompile(Tuple{typeof(Base.merge!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Symbol})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}, Tuple{Int64, Int64}})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Symbol})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Dates.Date, Dates.Date}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Dates.Date, Dates.Date}, Symbol})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Int64, Int64}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Int64, Int64}, Symbol})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Symbol})
precompile(Tuple{Type{Base.Dict{Symbol, AbstractArray{T, 1} where T}}, Base.Dict{Symbol, CSV.Column{T, P} where P where T}})
precompile(Tuple{Type{CSV.File{false}}, String, Array{Symbol, 1}, Array{Type, 1}, Int64, Int64, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}, Base.Dict{Symbol, CSV.Column{T, P} where P where T}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{String, CSV.PooledString}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Int64, Int64}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Dates.Date, Dates.Date}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{String, CSV.PooledString}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Dates.Date, Dates.Date}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Int64, Int64}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Int64})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{String, CSV.PooledString}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{AbstractArray{T, 1} where T, 1}, getfield(DataFrames, Symbol("#100#103"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Array{AbstractArray{T, 1} where T, 1}, getfield(DataFrames, Symbol("#100#103"))}, Int64})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Dates.Date, Dates.Date}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Int64, Int64}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}})
precompile(Tuple{typeof(DataFrames.nrow), DataFrames.DataFrame})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Int64, Symbol}, 1}, Base.Generator{Base.KeySet{Symbol, Base.Dict{Symbol, Int64}}, getfield(DataFrames, Symbol("#15#20")){String}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.KeySet{Symbol, Base.Dict{Symbol, Int64}}, getfield(DataFrames, Symbol("#15#20")){String}}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataFrames, Symbol("#16#21")){Array{Tuple{Int64, Symbol}, 1}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(DataFrames, Symbol("#16#21")){Array{Tuple{Int64, Symbol}, 1}}}})
precompile(Tuple{typeof(Base.grow_to!), Array{Symbol, 1}, Base.Generator{Base.Iterators.Filter{getfield(DataFrames, Symbol("#19#24")){Int64}, Array{Tuple{Int64, Symbol}, 1}}, getfield(DataFrames, Symbol("#18#23"))}, Int64})
precompile(Tuple{typeof(Base.grow_to!), Array{Symbol, 1}, Base.Generator{Base.Iterators.Filter{getfield(DataFrames, Symbol("#19#24")){Int64}, Array{Tuple{Int64, Symbol}, 1}}, getfield(DataFrames, Symbol("#18#23"))}})
precompile(Tuple{typeof(DataFrames.fuzzymatch), Base.Dict{Symbol, Int64}, Symbol})
precompile(Tuple{getfield(Main, Symbol("#3#4")), DataFrames.DataFrameRow{DataFrames.DataFrame, DataFrames.Index}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#3#4"))}}, Tuple{Base.OneTo{Int64}, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#3#4"))}}})
precompile(Tuple{typeof(Base.filter), getfield(Main, Symbol("#3#4")), DataFrames.DataFrame})
precompile(Tuple{typeof(Base.length), CSV.Column{String, CSV.PooledString}})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrameRow{DataFrames.DataFrame, DataFrames.Index}, Symbol})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{String, CSV.PooledString}, Tuple{Int64}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{String, CSV.PooledString}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{String, CSV.PooledString}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{String, CSV.PooledString}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Tuple{Int64}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Dates.Date, Dates.Date}, Tuple{Int64}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Dates.Date, Dates.Date}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Dates.Date, Dates.Date}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Dates.Date, Dates.Date}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Int64, Int64}, Tuple{Int64}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Int64, Int64}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Int64, Int64}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Int64, Int64}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Array{Int64, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{String, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Union{Base.Missing, String}, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Union{Base.Missing, Float64}, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Dates.Date, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Int64, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{getfield(Main, Symbol("#5#6")), DataFrames.DataFrameRow{DataFrames.DataFrame, DataFrames.Index}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#5#6"))}}, Tuple{Base.OneTo{Int64}, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#5#6"))}}})
precompile(Tuple{typeof(Base.filter), getfield(Main, Symbol("#5#6")), DataFrames.DataFrame})
precompile(Tuple{Type{Measures.Length{U, T} where T where U}, Symbol, Float64})
precompile(Tuple{typeof(Base.:(*)), Int64, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Measures.Length{:mm, Float64}}, Float64})
precompile(Tuple{Type{NamedTuple{(:point_size, :line_width, :major_label_font_size, :minor_label_font_size, :point_label_font_size, :key_title_font_size, :key_label_font_size), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Gadfly.current_theme)})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:point_size, :line_width, :major_label_font_size, :minor_label_font_size, :point_label_font_size, :key_title_font_size, :key_label_font_size), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Gadfly.Theme}, Gadfly.Theme})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##style")), NamedTuple{(:point_size, :line_width, :major_label_font_size, :minor_label_font_size, :point_label_font_size, :key_title_font_size, :key_label_font_size), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, typeof(Gadfly.style)})
precompile(Tuple{getfield(Gadfly, Symbol("##Theme#58")), ColorTypes.LCHab{Float32}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Function, Function, Array{Function, 1}, Measures.Length{:mm, Float64}, Array{Symbol, 1}, Array{Float64, 1}, Nothing, Nothing, Float64, Nothing, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Int64, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, typeof(Gadfly.default_stroke_color), Measures.Length{:mm, Float64}, typeof(Gadfly.default_discrete_highlight_color), typeof(Gadfly.default_continuous_highlight_color), typeof(Gadfly.default_lowlight_color), typeof(Gadfly.default_middle_color), Measures.Length{:mm, Float64}, Symbol, Symbol, typeof(Gadfly.Shape.square), Nothing, Nothing, Symbol, Nothing, Measures.Length{:mm, Float64}, Int64, Float64, Float64, Float64, Measures.Length{:mm, Float64}, Int64, Gadfly.Scale.DiscreteColorScale, Gadfly.Scale.ContinuousColorScale, Type{Gadfly.Theme}, Gadfly.Theme})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, typeof(Base.:(!)), Symbol})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.min), Base.IndexLinear, Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.minimum), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:xmin, :ymin), Tuple{Int64, Int64}}, Type{Gadfly.Coord.Cartesian}})
precompile(Tuple{typeof(Base.vect), Int64, Vararg{Any, N} where N})
precompile(Tuple{getfield(Gadfly.Geom, Symbol("#kw##smooth")), NamedTuple{(:method, :smoothing), Tuple{Symbol, Float64}}, typeof(Gadfly.Geom.smooth)})
precompile(Tuple{typeof(Gadfly.cleanmapping), Base.Dict{Symbol, Symbol}})
precompile(Tuple{Type{Gadfly.Plot}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Col.GroupedColumn, 1}, getfield(Gadfly, Symbol("#116#118")){Base.Set{Symbol}}}})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Int64}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Int64}, Int64, Symbol})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(DataFrames, Symbol("#100#103"))}})
precompile(Tuple{getfield(DataFrames, Symbol("#DataFrame#99#102")), Bool, Type{DataFrames.DataFrame}, Array{Any, 1}, DataFrames.Index})
precompile(Tuple{typeof(Base.throw_boundserror), DataFrames.DataFrameColumns{DataFrames.DataFrame, AbstractArray{T, 1} where T}, Tuple{Int64}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.eltype), Tuple{Base.Broadcast.Extruded{DataFrames.DataFrameColumns{DataFrames.DataFrame, AbstractArray{T, 1} where T}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Gadfly.meltdata), DataFrames.DataFrame, Array{Gadfly.Col.GroupedColumn, 1}})
precompile(Tuple{typeof(Gadfly._evalmapping!), Base.Dict{Symbol, Any}, DataFrames.DataFrame, Gadfly.Data})
precompile(Tuple{typeof(Gadfly._evalmapping!), Base.Dict{Symbol, Any}, Gadfly.MeltedData{DataFrames.DataFrame}, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.evalmapping!), Base.Dict{Symbol, Any}, DataFrames.DataFrame, Gadfly.Data})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Plot, Symbol, DataFrames.DataFrame})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Gadfly.plot), DataFrames.DataFrame, Base.Dict{Symbol, Symbol}, Gadfly.Coord.Cartesian, Gadfly.Geom.LineGeometry, Gadfly.Theme})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##plot")), NamedTuple{(:x, :y, :color), Tuple{Symbol, Symbol, Symbol}}, typeof(Gadfly.plot), DataFrames.DataFrame, Gadfly.Coord.Cartesian, Gadfly.Geom.LineGeometry, Gadfly.Theme})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Base.Colon, Symbol})
precompile(Tuple{typeof(Gadfly.evalmapping), DataFrames.DataFrame, Symbol})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, AbstractString}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, AbstractString}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractString}, String, Symbol})
precompile(Tuple{typeof(Base.convert), Type{Any}, DataFrames.DataFrame})
precompile(Tuple{typeof(Base.eltype), Type{C}} where C<:(ColorTypes.Colorant{T, N} where N where T))
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Colorant{T, N}}} where N where T)
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.ColorAlpha{ColorTypes.RGB{Float64}, Float64, 4}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGBA{Float64}}})
precompile(Tuple{typeof(ColorTypes.basetype), Type{T} where T})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.RGBA{Float64}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.ColorAlpha{ColorTypes.RGB{Float64}, Float64, 4}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.RGBA{Float64}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.ColorAlpha{ColorTypes.RGB{T}, T, 4} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.RGBA{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Compose.PDF), String, Vararg{Any, N} where N})
precompile(Tuple{getfield(Compose, Symbol("##PDF#135")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Compose.PDF), String, Vararg{Any, N} where N})
precompile(Tuple{typeof(Cairo.write_to_stream_callback), Base.IOStream, Ptr{UInt8}, UInt32})
precompile(Tuple{typeof(Base.:(==)), WeakRef, Nothing})
precompile(Tuple{Type{Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}}})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:width, :height, :owns_surface, :emit_on_finish, :ppmm, :ownedfile, :filename), Tuple{Float64, Float64, Bool, Bool, Float64, Bool, String}}, Type{Compose.Image{Compose.PDFBackend}}, Cairo.CairoSurfaceIOStream{UInt32}, Cairo.CairoContext, Base.IOStream})
precompile(Tuple{getfield(Compose, Symbol("##_#131")), Int64, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:ownedfile, :filename), Tuple{Bool, String}}}, Type{Compose.Image{Compose.PDFBackend}}, Base.IOStream, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Bool})
precompile(Tuple{Type{Compose.Image{Compose.PDFBackend}}, String, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AbstractRGB{FixedPointNumbers.Normed{UInt8, 8}}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}}})
precompile(Tuple{typeof(Base.convert), Type{ColorTypes.RGBA{Float64}}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{getfield(Compose, Symbol("##_#130")), Float64, Float64, ColorTypes.RGBA{Float64}, ColorTypes.RGBA{Float64}, Array{Any, 1}, Compose.LineCapButt, Compose.LineJoinMiter, Bool, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Nothing, Bool, Array{Compose.ImagePropertyState, 1}, Array{Compose.ImagePropertyFrame, 1}, Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Bool, Bool, String, Bool, Bool, Float64, Nothing, Nothing, Type{Compose.Image{Compose.PDFBackend}}, Cairo.CairoSurfaceIOStream{UInt32}, Cairo.CairoContext, Base.IOStream})
precompile(Tuple{typeof(Base.allocatedinline), Type{Gadfly.StatisticElement}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Gadfly.Data, 1}}})
precompile(Tuple{typeof(Base.allocatedinline), Type{Gadfly.Data}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Gadfly.Aesthetics, 1}}})
precompile(Tuple{typeof(Base.allocatedinline), Type{Gadfly.Aesthetics}})
precompile(Tuple{Type{StaticArrays.Size{S} where S}, Int64})
precompile(Tuple{Type{StaticArrays.Size{(1,)}}})
precompile(Tuple{getfield(StaticArrays, Symbol("##s19#12")), Any, Any, Any, Any})
precompile(Tuple{typeof(StaticArrays.tuple_length), Type{Tuple{1}}})
precompile(Tuple{typeof(StaticArrays.tuple_prod), Type{Tuple{1}}})
precompile(Tuple{getfield(StaticArrays, Symbol("##s19#6")), Any, Any, Any, Any, Any, Type{T} where T, Type{T} where T, Type{T} where T, Any})
precompile(Tuple{typeof(Base._all), getfield(StaticArrays, Symbol("#7#8")), Core.SimpleVector, Base.Colon})
precompile(Tuple{typeof(StaticArrays.tuple_minimum), Type{Tuple{1}}})
precompile(Tuple{getfield(StaticArrays, Symbol("##s19#2")), Any, Any, Any, Any, Any})
precompile(Tuple{getfield(StaticArrays, Symbol("#3#4")), Int64})
precompile(Tuple{typeof(Base.ntuple), getfield(StaticArrays, Symbol("#3#4")), Base.Val{1}})
precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{Tuple{1}}})
precompile(Tuple{typeof(Base.prod), StaticArrays.Size{(1,)}})
precompile(Tuple{typeof(StaticArrays._axes), StaticArrays.Size{(1,)}})
precompile(Tuple{typeof(Base.iterate), StaticArrays.SOneTo{1}})
precompile(Tuple{typeof(Base.eltype), Type})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AbstractRGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AlphaColor{ColorTypes.RGB{T}, T, 4} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.ARGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.ARGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.AlphaColor{ColorTypes.RGB{T}, T, 4} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.ARGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}})
precompile(Tuple{Type{Gadfly.Coord.Cartesian}, Array{Symbol, 1}, Array{Symbol, 1}, Nothing, Nothing, Nothing, Nothing, Bool, Bool, Bool, Nothing, Bool})
precompile(Tuple{Type{Gadfly.Coord.Cartesian}})
precompile(Tuple{typeof(Base.mapreduce_impl), getfield(Gadfly, Symbol("#85#97")){Base.Set{Symbol}}, typeof(Base.:(|)), Array{Symbol, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), getfield(Gadfly, Symbol("#85#97")){Base.Set{Symbol}}, typeof(Base.:(|)), Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{Type{Base.Dict{Symbol, Gadfly.ScaleElement}}})
precompile(Tuple{typeof(Base.copyto!), Array{Gadfly.StatisticElement, 1}, Int64, Array{Gadfly.StatisticElement, 1}, Int64, Int64})
precompile(Tuple{typeof(Base._collect), Array{Gadfly.StatisticElement, 1}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, getfield(Base, Symbol("#3#4")){getfield(Gadfly, Symbol("#87#100")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#89#102")){Gadfly.Plot}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#90#103")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}})
precompile(Tuple{Type{Base.Dict{Gadfly.StatisticElement, Nothing}}})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.XTicks})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Gadfly.StatisticElement, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.StatisticElement, Nothing}, Gadfly.Stat.Identity})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Gadfly.StatisticElement, Nothing}, Nothing, Gadfly.Stat.Identity})
precompile(Tuple{getfield(Gadfly, Symbol("#92#105")){Gadfly.Plot, Array{Gadfly.Data, 1}}, Array{Symbol, 1}, String})
precompile(Tuple{Type{Base.Dict{Gadfly.ScaleElement, Int64}}})
precompile(Tuple{typeof(Base.vcat), Array{Gadfly.Data, 1}, Array{Gadfly.Data, 1}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, Gadfly.ScaleElement}, Symbol})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, Gadfly.ScaleElement}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, Gadfly.ScaleElement}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Scale.DiscreteColorScale, Symbol})
precompile(Tuple{typeof(Base.copyto!), Array{Gadfly.StatisticElement, 1}, Base.Set{Gadfly.StatisticElement}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Base.Missing, Base.Generator{Array{Gadfly.Aesthetics, 1}, getfield(Gadfly, Symbol("#93#106")){Symbol}}, Int64})
precompile(Tuple{typeof(Base.convert), Type{Base.Missing}, Bool})
precompile(Tuple{typeof(Base.setindex!), Array{Base.Missing, 1}, Bool, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.Missing, 1}, Bool, Base.Generator{Array{Gadfly.Aesthetics, 1}, getfield(Gadfly, Symbol("#93#106")){Symbol}}, Int64})
precompile(Tuple{getfield(Gadfly, Symbol("#93#106")){Symbol}, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Aesthetics, 1}, getfield(Gadfly, Symbol("#93#106")){Symbol}}})
precompile(Tuple{typeof(Base.map), getfield(DataStructures, Symbol("#82#83")){Int64}, Tuple{DataStructures.SparseIntSet, DataStructures.SparseIntSet}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.StatisticElement, Nothing}, Gadfly.Stat.TickStatistic})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Gadfly.StatisticElement, Nothing}, Nothing, Gadfly.Stat.TickStatistic})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.YTicks})
precompile(Tuple{typeof(Gadfly.scale_exists), Symbol, Symbol})
precompile(Tuple{typeof(Gadfly.get_scale), Symbol, Symbol, Gadfly.Theme})
precompile(Tuple{typeof(Base.mapreduce_impl), getfield(Gadfly, Symbol("#86#98")){Base.Set{Symbol}}, typeof(Base.:(|)), Array{Symbol, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), getfield(Gadfly, Symbol("#86#98")){Base.Set{Symbol}}, typeof(Base.:(|)), Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#82#94"))}, Int64})
precompile(Tuple{typeof(Gadfly.render_prepare), Gadfly.Plot})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Plot})
precompile(Tuple{typeof(Measures.width), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Measures.height), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.root_box), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{Type{Compose.Context}, Compose.Context})
precompile(Tuple{typeof(Compose.excise_vector_children!), Compose.Context})
precompile(Tuple{Type{Base.Dict{UInt64, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}}})
precompile(Tuple{Type{Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{UInt64, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{UInt64, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}, UInt64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt64, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}, UInt64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}, UInt64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, UInt64})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}, UInt64})
precompile(Tuple{typeof(Compose.optimize_batching), Compose.Context})
precompile(Tuple{typeof(Base.convert), Type{Compose.Transform}, Compose.Mirror})
precompile(Tuple{typeof(Base.convert), Type{Compose.Transform}, Compose.Shear})
precompile(Tuple{Type{Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Compose.isscalar), Tuple{Base.Broadcast.Extruded{Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{Type{Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Base.Generator{Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, getfield(Compose, Symbol("#137#139"))}})
precompile(Tuple{Type{Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Base.Generator{Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, getfield(Compose, Symbol("#138#140"))}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Type{T} where T})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base._delete!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64})
precompile(Tuple{Type{Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}}, Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}})
precompile(Tuple{typeof(Compose.save_property_state), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Compose.push_property_frame), Compose.Image{Compose.PDFBackend}, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}})
precompile(Tuple{typeof(Compose.canbatch), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Int64, Int64, Compose.Container}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Int64, Int64, Compose.Container}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.ForwardOrdering, Array{Tuple{Int64, Int64, Compose.Container}, 1}})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, Nothing})
precompile(Tuple{typeof(Compose.restore_property_state), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.pop_property_frame), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.Context, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.finish), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Context})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Gadfly.Plot})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Layer, Symbol, DataFrames.DataFrame})
precompile(Tuple{typeof(Gadfly.element_coordinate_type), Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Base.vect), Gadfly.Stat.SmoothStatistic})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Gadfly.StatisticElement, 1}, Base.IndexLinear, Array{Gadfly.Stat.SmoothStatistic, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Gadfly.Stat.SmoothStatistic, 1}, Int64})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Base.mapreduce_impl), getfield(Gadfly, Symbol("#83#95")){Array{Symbol, 1}}, typeof(Base.:(|)), Array{Symbol, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), getfield(Gadfly, Symbol("#83#95")){Array{Symbol, 1}}, typeof(Base.:(|)), Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.mapreduce_impl), getfield(Gadfly, Symbol("#84#96")){Array{Symbol, 1}}, typeof(Base.:(|)), Array{Symbol, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), getfield(Gadfly, Symbol("#84#96")){Array{Symbol, 1}}, typeof(Base.:(|)), Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{typeof(Gadfly.input_aesthetics), Gadfly.Stat.SmoothStatistic})
precompile(Tuple{typeof(Base._similar_for), Array{Gadfly.StatisticElement, 1}, Type{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64})
precompile(Tuple{typeof(Base._array_for), Type{Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}, Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, 1}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, getfield(Base, Symbol("#3#4")){getfield(Gadfly, Symbol("#87#100")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}}, Int64, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, getfield(Base, Symbol("#3#4")){getfield(Gadfly, Symbol("#87#100")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base._array_for), Type{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}}, Array{Gadfly.Layer, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#90#103")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#90#103")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64})
precompile(Tuple{typeof(Base.Iterators.flatten), Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Tuple{}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Int64})
precompile(Tuple{typeof(Gadfly.default_scales), Gadfly.Geom.LineGeometry, Gadfly.Theme})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Tuple{Int64, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Int64})
precompile(Tuple{typeof(Gadfly.default_scales), Gadfly.Stat.SmoothStatistic, Gadfly.Theme})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Tuple{Int64, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Int64}})
precompile(Tuple{typeof(Gadfly.classify_data), Array{String, 1}})
precompile(Tuple{typeof(Base.methods), Any, Any})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Scale.DiscreteColorScale})
precompile(Tuple{typeof(Gadfly.classify_data), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:numerical}, Base.Val{:y}, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Scale.ContinuousScale, Symbol})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:numerical}, Base.Val{:x}, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:categorical}, Base.Val{:group}, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Scale.DiscreteScale})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Scale.DiscreteScale, Symbol})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:categorical}, Base.Val{:linestyle}, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.PanelBackground})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.QuestionMark})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.HelpScreen})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.CrossHair})
precompile(Tuple{getfield(Gadfly.Stat, Symbol("#kw##xticks")), NamedTuple{(:ticks,), Tuple{Symbol}}, typeof(Gadfly.Stat.xticks)})
precompile(Tuple{getfield(Gadfly.Stat, Symbol("#kw##yticks")), NamedTuple{(:ticks,), Tuple{Symbol}}, typeof(Gadfly.Stat.yticks)})
precompile(Tuple{getfield(Gadfly, Symbol("#91#104")){Base.Set{Symbol}, Base.Set{Symbol}}, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.iterate), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Gadfly.Scale.apply_scales), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.Scale.apply_scales), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Gadfly.Data})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Gadfly.ScaleElement, Int64}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteScale})
precompile(Tuple{typeof(Base.get!), getfield(Base, Symbol("#243#244")){Int64}, Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteScale})
precompile(Tuple{typeof(Base.get!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteScale, Int64})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.DiscreteScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Base.get!), getfield(Base, Symbol("#243#244")){Int64}, Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Base.get!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.ContinuousScale, Int64})
precompile(Tuple{typeof(Gadfly.Scale.make_labeler), Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.ContinuousScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.isconcrete), Int64})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale_typed!), Array{Int64, 1}, Array{Union{Base.Missing, Int64}, 1}, Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteColorScale})
precompile(Tuple{typeof(Base.get!), getfield(Base, Symbol("#243#244")){Int64}, Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteColorScale})
precompile(Tuple{typeof(Base.get!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteColorScale, Int64})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.DiscreteColorScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(OrderedCollections.rehash!), OrderedCollections.OrderedDict{Any, Nothing}, Int64})
precompile(Tuple{typeof(OrderedCollections.ht_keyindex2), OrderedCollections.OrderedDict{Any, Nothing}, String})
precompile(Tuple{typeof(OrderedCollections._setindex!), OrderedCollections.OrderedDict{Any, Nothing}, Nothing, String, Int64})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{Any, Nothing}, Nothing, String})
precompile(Tuple{typeof(Base.push!), OrderedCollections.OrderedSet{Any}, String})
precompile(Tuple{typeof(OrderedCollections.hashindex), String, Int64})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedSet{Any}})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedSet{Any}, Int64})
precompile(Tuple{typeof(Base.allocatedinline), Type{ColorTypes.LCHab{Float32}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Color{Float64, 3}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LCHab{Float64}}})
precompile(Tuple{typeof(ColorTypes.issupported), Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Lab{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.XYZ{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Color{T, 3} where T<:AbstractFloat}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LCHab{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AbstractRGB{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB{Float64}}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.LCHab{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(ColorTypes.issupported), Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, Type{Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LMS{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.LMS{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(ColorTypes.issupported), Type{ColorTypes.LMS{T} where T<:AbstractFloat}, Type{Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LMS{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Color{Float32, 3}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LCHab{Float32}}})
precompile(Tuple{typeof(ColorTypes.issupported), Type{ColorTypes.LMS{T} where T<:AbstractFloat}, Type{Float32}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.XYZ{Float32}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Lab{Float32}}})
precompile(Tuple{typeof(Base._linspace1), Type{Float64}, Float64, Float64, Int64})
precompile(Tuple{typeof(Base._linspace), Type{Float64}, Int64, Int64, Int64, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.LCHab{Float32}, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LCHab{Float64}}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Colors.interpolate_table), Array{Float64, 2}, Float64, Float64, Int64})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LMS{Float64}}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(Colors.deuteranopic), ColorTypes.Lab{Float64}, Float64, ColorTypes.LMS{Float32}})
precompile(Tuple{typeof(Base.copyto!), Array{ColorTypes.LCHab{Float32}, 1}, Int64, Array{ColorTypes.LCHab{Float32}, 1}, Int64, Int64})
precompile(Tuple{typeof(Colors.deuteranopic), ColorTypes.LCHab{Float32}, Float64, ColorTypes.LMS{Float32}})
precompile(Tuple{typeof(Colors._colordiff), ColorTypes.Lab{Float64}, ColorTypes.Lab{Float64}, Colors.DE_2000})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LCHab{Float32}}, ColorTypes.Lab{Float64}})
precompile(Tuple{getfield(Colors, Symbol("##distinguishable_colors#11")), Bool, getfield(Gadfly.Scale, Symbol("#51#52")), Array{Float64, 1}, Array{Float64, 1}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, typeof(Colors.distinguishable_colors), Int64, Array{ColorTypes.LCHab{Float32}, 1}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{ColorTypes.Color{T, N} where N where T, 1}, Base.IndexLinear, Array{ColorTypes.LCHab{Float32}, 1}})
precompile(Tuple{typeof(Gadfly.Scale.default_discrete_colors), Int64})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float64}}, ColorTypes.Lab{Float64}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.RGB{Float64}}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.RGB{Float64}}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float64}}, ColorTypes.RGB{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.Lab{Float64}}, ColorTypes.XYZ{Float64}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.Lab{Float64}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, ColorTypes.RGB{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.LMS{Float64}}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float64}}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.Lab{Float64}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LMS{Float32}}, ColorTypes.XYZ{Float32}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.LMS{Float32}}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float32}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float32}}, ColorTypes.Lab{Float32}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.XYZ{Float32}}, Type{ColorTypes.XYZ{T} where T<:AbstractFloat}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float32}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LCHab{Float32}}, ColorTypes.Lab{Float32}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.LCHab{Float32}}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float32}}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.Lab{Float32}}, ColorTypes.XYZ{Float32}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.Lab{Float32}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AbstractRGB{Float32}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB{Float32}}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.RGB{Float32}}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{ColorTypes.RGB{Float32}, 1}, Base.IndexLinear, Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{typeof(Base.convert), Type{Array{ColorTypes.RGB{Float32}, 1}}, Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{ColorTypes.RGB{Float32}, 1}, ColorTypes.LCHab{Float32}, Int64})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.RGB{Float32}}, ColorTypes.XYZ{Float32}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.RGB{Float32}}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float32}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Scale, Symbol("#61#65")), Base.Iterators.Zip{Tuple{Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{ColorTypes.RGB{Float32}, String}, 1}, Tuple{ColorTypes.RGB{Float32}, String}, Base.Generator{Base.Iterators.Zip{Tuple{Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, getfield(Gadfly.Scale, Symbol("#61#65"))}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Zip{Tuple{Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, getfield(Gadfly.Scale, Symbol("#61#65"))}})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, String}}})
precompile(Tuple{typeof(Base.hash), ColorTypes.RGB{Float32}, UInt64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.RGB{Float32}, String}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.RGB{Float32}, String}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.RGB{Float32}, String}, String, ColorTypes.RGB{Float32}})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, String}}, Array{Tuple{ColorTypes.RGB{Float32}, String}, 1}})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Array{Tuple{ColorTypes.RGB{Float32}, String}, 1}})
precompile(Tuple{Type{Base.Iterators.Filter{F, I} where I where F}, getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Scale, Symbol("#63#68")), Base.Iterators.Filter{getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}}})
precompile(Tuple{typeof(Base.grow_to!), Array{String, 1}, Base.Generator{Base.Iterators.Filter{getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}}, getfield(Gadfly.Scale, Symbol("#63#68"))}, Int64})
precompile(Tuple{typeof(Base.grow_to!), Array{String, 1}, Base.Generator{Base.Iterators.Filter{getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}}, getfield(Gadfly.Scale, Symbol("#63#68"))}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Filter{getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}}, getfield(Gadfly.Scale, Symbol("#63#68"))}})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{String, 1}, Array{String, 1}})
precompile(Tuple{typeof(Gadfly.Scale.discretize), Array{String, 1}, Array{String, 1}})
precompile(Tuple{typeof(Base.getproperty), IndirectArrays.IndirectArray{String, 1, Array{Int64, 1}, Array{String, 1}}, Symbol})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{ColorTypes.RGB{Float32}, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.RGB{Float32}, 1}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, Int64}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.RGB{Float32}, Int64}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.RGB{Float32}, Int64}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.get!), getfield(Base, Symbol("#243#244")){Int64}, Base.Dict{ColorTypes.RGB{Float32}, Int64}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.get), Base.Dict{ColorTypes.RGB{Float32}, Int64}, ColorTypes.RGB{Float32}, Nothing})
precompile(Tuple{typeof(Base.indexin), Array{ColorTypes.RGB{Float32}, 1}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{ColorTypes.RGB{Float32}, 1}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{ColorTypes.RGB{Float32}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(OrderedCollections.rehash!), OrderedCollections.OrderedDict{Any, Any}, Int64})
precompile(Tuple{typeof(OrderedCollections.ht_keyindex2), OrderedCollections.OrderedDict{Any, Any}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections._setindex!), OrderedCollections.OrderedDict{Any, Any}, Int64, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{Any, Any}, Int64, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections.hashindex), ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{ColorTypes.RGB{Float32}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.isequal), ColorTypes.RGB{Float32}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}, Type{Nothing}})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Nothing, 1}, Nothing})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Array{Nothing, 1}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Array{Nothing, 1}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}}}})
precompile(Tuple{typeof(Base.:(==)), Nothing, WeakRef})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Array{Nothing, 1}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}}}}})
precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!), Base.BitArray{1}, Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Base.Missing, Int64, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Union{Base.Missing, Bool}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!), Array{Union{Base.Missing, Bool}, 1}, Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Base.Missing, Int64, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!), Base.BitArray{1}, Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Bool, Int64, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Gadfly.Aesthetics, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Gadfly.Aesthetics, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Gadfly.Aesthetics, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Gadfly.Aesthetics, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Gadfly.Data, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Gadfly.Data, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Gadfly.Data, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Gadfly.Data, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Gadfly.Aesthetics, 1}, Vararg{Any, N} where N})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}}}})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistics), Array{Gadfly.StatisticElement, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{Type{Core.Compiler.Signature}, Distances.Euclidean, Core.Compiler.Const, Array{Any, 1}, Type{T} where T})
precompile(Tuple{getfield(Base, Symbol("##s66#120")), Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Base.Grisu.fastfixedtoa), Float64, Int64, Int64, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float64, Int64, Int64, Array{UInt8, 1}, Array{Base.Grisu.Bignums.Bignum, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float64, Int64, Int64, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.Grisu._show), Base.GenericIOBuffer{Array{UInt8, 1}}, Float64, Int64, Int64, Bool, Bool})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Float64})
precompile(Tuple{typeof(Base.print_to_string), Float64})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistic), Gadfly.Stat.SmoothStatistic, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.undefined_aesthetics), Gadfly.Aesthetics, Symbol, Vararg{Symbol, N} where N})
precompile(Tuple{typeof(Base.filter), getfield(Gadfly, Symbol("#46#47")){Gadfly.Aesthetics}, Array{Symbol, 1}})
precompile(Tuple{typeof(Gadfly.assert_aesthetics_equal_length), String, Gadfly.Aesthetics, Symbol, Vararg{Symbol, N} where N})
precompile(Tuple{typeof(Base.:(!=)), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Nothing})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, Nothing}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.RGB{Float32}, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.RGB{Float32}, Nothing}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.RGB{Float32}, Nothing}, Nothing, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.RGB{Float32}, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.unique), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.unique), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{ColorTypes.RGB{Float32}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.copy), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.unaliascopy), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Any, Any}, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}}})
precompile(Tuple{typeof(Base._all), getfield(Base, Symbol("#240#242")), Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}}, Base.Colon})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}}})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}}})
precompile(Tuple{typeof(Base.empty), Base.Dict{Any, Any}, Type{ColorTypes.RGB{Float32}}, Type{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}}, Int64})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, Array{Int64, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, AbstractArray{T, 2} where T, AbstractArray{T, 1} where T, Distributions.Distribution{F, S} where S<:Distributions.ValueSupport where F<:Distributions.VariateForm, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Type{ColorTypes.RGB{Float32}}})
precompile(Tuple{typeof(Base._iterate), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.min), Base.IndexLinear, Array{Float64, 1}})
precompile(Tuple{typeof(Base.minimum), Array{Float64, 1}})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.max), Base.IndexLinear, Array{Float64, 1}})
precompile(Tuple{typeof(Base.maximum), Array{Float64, 1}})
precompile(Tuple{typeof(Loess.tnormalize!), Array{Float64, 2}, Float64})
precompile(Tuple{typeof(Distances.euclidean), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Loess.diameter), Array{Float64, 2}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Float64, 1}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#1#2")){Array{Float64, 2}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#1#2")){Array{Float64, 2}}}})
precompile(Tuple{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}, Int64})
precompile(Tuple{typeof(Base.Order.lt), Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}, Int64, Int64})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.PartialQuickSort{Int64}, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Sort.PartialQuickSort{Int64}, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}, Int64})
precompile(Tuple{typeof(Base.Order.lt), Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}, Int64, Int64})
precompile(Tuple{typeof(Base.sort!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Sort.PartialQuickSort{Base.UnitRange{Int64}}, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Loess.build_kdtree), Array{Float64, 2}, Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Float64, 2}, Int64, Float64, Base.Set{Array{Float64, 1}}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.PartialQuickSort{Base.UnitRange{Int64}}, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Loess.build_kdtree), Array{Float64, 2}, Array{Int64, 1}, Array{Float64, 2}, Int64, Float64, Base.Set{Array{Float64, 1}}})
precompile(Tuple{Type{Loess.KDTree{T} where T<:AbstractFloat}, Array{Float64, 2}, Float64, Float64})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#10#12")){Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#10#12")){Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.PartialQuickSort{Int64}, Base.Order.By{getfield(Loess, Symbol("#10#12")){Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#11#13")){Array{Float64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.getproperty), LinearAlgebra.QRPivoted{Float64, Array{Float64, 2}}, Symbol})
precompile(Tuple{typeof(LinearAlgebra.ldiv!), LinearAlgebra.QRPivoted{Float64, Array{Float64, 2}}, Array{Float64, 2}, Float64})
precompile(Tuple{typeof(LinearAlgebra.ldiv!), LinearAlgebra.QRPivoted{Float64, Array{Float64, 2}}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.:(\)), LinearAlgebra.QRPivoted{Float64, Array{Float64, 2}}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.:(\)), Array{Float64, 2}, Array{Float64, 1}})
precompile(Tuple{getfield(Loess, Symbol("##loess#9")), Bool, Float64, Int64, typeof(Loess.loess), Array{Float64, 2}, Array{Float64, 1}})
precompile(Tuple{getfield(Loess, Symbol("#kw##loess")), NamedTuple{(:span,), Tuple{Float64}}, typeof(Loess.loess), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{Type{Loess.KDInternalNode{Float64}}, Int64, Float64, Loess.KDLeafNode, Loess.KDLeafNode})
precompile(Tuple{Type{Loess.KDInternalNode{Float64}}, Int64, Float64, Loess.KDLeafNode, Loess.KDInternalNode{Float64}})
precompile(Tuple{Type{Loess.KDInternalNode{Float64}}, Int64, Float64, Loess.KDInternalNode{Float64}, Loess.KDInternalNode{Float64}})
precompile(Tuple{typeof(Loess.predict), Loess.LoessModel{Float64}, Array{Float64, 2}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Float64, 1}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#7#8")){Array{Float64, 2}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#7#8")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Loess.bounds_verts), Array{Float64, 2}})
precompile(Tuple{typeof(Loess.traverse), Loess.KDTree{Float64}, Array{Float64, 1}})
precompile(Tuple{typeof(Loess.evalpoly), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Loess.predict), Loess.LoessModel{Float64}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.getproperty), Loess.KDInternalNode{Float64}, Symbol})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float64, 1}, Float64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Float64, Array{Float64, 1}})
precompile(Tuple{Type{Distributions.TDist{T} where T<:Real}, Int64})
precompile(Tuple{typeof(Statistics.quantile), Distributions.TDist{Float64}, Float64})
precompile(Tuple{typeof(Base.fill!), Array{ColorTypes.RGB{Float32}, 1}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.fill), ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.allocatedinline), Type{ColorTypes.RGB{Float32}}})
precompile(Tuple{typeof(Base.copyto!), Array{ColorTypes.RGB{Float32}, 1}, Int64, Array{ColorTypes.RGB{Float32}, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.append!), Array{ColorTypes.RGB{Float32}, 1}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float64, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.unique), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:linestyle,), Tuple{Array{String, 1}}}, Type{Gadfly.Data}})
precompile(Tuple{typeof(Base.copyto!), Array{String, 1}, OrderedCollections.OrderedSet{Any}})
precompile(Tuple{typeof(Gadfly.Scale.discretize), Array{String, 1}, Nothing, Nothing, Bool})
precompile(Tuple{typeof(Gadfly.Scale.discretize), Array{String, 1}, Nothing, Nothing})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{Int64}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, Type{Int64}, Tuple{Base.Broadcast.Extruded{Array{Int64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{Int64}, Tuple{Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.unique), Array{Int64, 1}})
precompile(Tuple{typeof(Base.get!), getfield(Base, Symbol("#243#244")){Int64}, Base.Dict{Int64, Int64}, Int64})
precompile(Tuple{typeof(Base.indexin), Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{Int64, 1}})
precompile(Tuple{typeof(Gadfly.concat), Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, Array{Int64, 1}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, Array{Float64, 1}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, Nothing})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.copy), IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, OrderedCollections.OrderedDict{Any, Any}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, String})
precompile(Tuple{typeof(Base._all), getfield(Base, Symbol("#240#242")), Base.Dict{Symbol, AbstractString}, Base.Colon})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Dict{Symbol, AbstractString}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, Base.Dict{Symbol, AbstractString}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Function, Function})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Base.Missing, Base.Missing})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistic), Gadfly.Stat.Identity, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.input_aesthetics), Gadfly.Stat.TickStatistic})
precompile(Tuple{typeof(Gadfly.concrete_length), Base.Iterators.Flatten{Array{Any, 1}}})
precompile(Tuple{typeof(Gadfly.bounding_order_of_magnitude), Int64})
precompile(Tuple{typeof(Gadfly.optimize_ticks_typed), Int64, Int64, Bool, Array{Tuple{Float64, Float64}, 1}, Int64, Int64, Int64, Float64, Float64, Float64, Float64, Bool})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Float64, Float64}, 1}, Tuple{Float64, Float64}, Base.Generator{Array{Tuple{Float64, Float64}, 1}, getfield(Gadfly, Symbol("#26#27"))}, Int64})
precompile(Tuple{getfield(Gadfly, Symbol("##optimize_ticks#29")), Bool, Nothing, Nothing, Symbol, Nothing, Nothing, Nothing, Nothing, Bool, typeof(Gadfly.optimize_ticks), Dates.DateTime, Dates.DateTime})
precompile(Tuple{getfield(Gadfly, Symbol("##multilevel_ticks#32")), Array{Symbol, 1}, typeof(Gadfly.multilevel_ticks), Dates.DateTime, Dates.DateTime})
precompile(Tuple{typeof(Gadfly.multilevel_ticks), Dates.DateTime, Dates.DateTime})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.ValueIterator{Base.Dict{Any, Any}}, typeof(Base.length)}})
precompile(Tuple{typeof(Gadfly.multilevel_ticks), Dates.Date, Dates.Date})
precompile(Tuple{getfield(Gadfly, Symbol("##optimize_ticks#29")), Bool, Nothing, Nothing, Symbol, Float64, Float64, Float64, Float64, Bool, typeof(Gadfly.optimize_ticks), Dates.DateTime, Dates.DateTime})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Any, 1}, getfield(Gadfly.Stat, Symbol("#13#16"))}, Int64})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistic), Gadfly.Stat.TickStatistic, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{Type{Symbol}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Base.isempty), Array{Int64, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.isconcrete), Tuple{Array{Union{Base.Missing, Int64}, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Union{Base.Missing, Int64}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Union{Base.Missing, Int64}, 1}}}})
precompile(Tuple{typeof(Gadfly.concrete_length), Array{Int64, 1}})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##optimize_ticks")), NamedTuple{(:extend_ticks, :granularity_weight, :simplicity_weight, :coverage_weight, :niceness_weight, :strict_span), Tuple{Bool, Float64, Float64, Float64, Float64, Bool}}, typeof(Gadfly.optimize_ticks), Int64, Int64})
precompile(Tuple{typeof(Gadfly.bounding_order_of_magnitude), Float64})
precompile(Tuple{typeof(Gadfly.optimize_ticks_typed), Float64, Float64, Bool, Array{Tuple{Float64, Float64}, 1}, Int64, Int64, Int64, Float64, Float64, Float64, Float64, Bool})
precompile(Tuple{getfield(Gadfly, Symbol("##multilevel_ticks#30")), Array{Float64, 1}, typeof(Gadfly.multilevel_ticks), Float64, Float64})
precompile(Tuple{typeof(Gadfly.multilevel_ticks), Float64, Float64})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.ValueIterator{Base.Dict{Any, Any}}, typeof(Base.length)}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Base.ValueIterator{Base.Dict{Any, Any}}, typeof(Base.length)}, Int64})
precompile(Tuple{typeof(Base.isempty), Array{Float64, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.isconcrete), Tuple{Array{Union{Base.Missing, Float64}, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Union{Base.Missing, Float64}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Union{Base.Missing, Float64}, 1}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}}})
precompile(Tuple{typeof(Gadfly.concrete_length), Array{Float64, 1}})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##optimize_ticks")), NamedTuple{(:extend_ticks, :granularity_weight, :simplicity_weight, :coverage_weight, :niceness_weight, :strict_span), Tuple{Bool, Float64, Float64, Float64, Float64, Bool}}, typeof(Gadfly.optimize_ticks), Float64, Float64})
precompile(Tuple{typeof(Base.vect), Gadfly.Aesthetics, Vararg{Gadfly.Aesthetics, N} where N})
precompile(Tuple{typeof(Base._array_for), Type{Bool}, Array{Gadfly.Aesthetics, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Array{Gadfly.Aesthetics, 1}, getfield(Gadfly, Symbol("#93#106")){Symbol}}, Int64, Int64})
precompile(Tuple{Type{Gadfly.Guide.ColorKey}})
precompile(Tuple{typeof(Base.push!), Array{Gadfly.GuideElement, 1}, Gadfly.Guide.ColorKey})
precompile(Tuple{typeof(Gadfly.render_prepared), Gadfly.Plot, Gadfly.Coord.Cartesian, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Array{Gadfly.GuideElement, 1}})
precompile(Tuple{typeof(Gadfly.Coord.aesthetics_type), Array{Gadfly.Aesthetics, 1}, Array{Symbol, 1}})
precompile(Tuple{typeof(Gadfly.Coord.first_concrete_aesthetic_value), Array{Gadfly.Aesthetics, 1}, Array{Symbol, 1}})
precompile(Tuple{typeof(Gadfly.Coord.apply_coordinate), Gadfly.Coord.Cartesian, Array{Gadfly.Aesthetics, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}})
precompile(Tuple{typeof(Base.setindex!), Array{Gadfly.Theme, 1}, Nothing, Int64})
precompile(Tuple{typeof(Gadfly.get_stroke_vector), Symbol})
precompile(Tuple{typeof(Gadfly.jsplotdata), String, String, Array{Measures.Measure, 1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#33#42"))}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#34#43"))}})
precompile(Tuple{typeof(Base.getproperty), Gadfly.Guide.XTicks, Symbol})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.XTicks, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#52#61"))}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#53#62"))}})
precompile(Tuple{typeof(Base.getproperty), Gadfly.Guide.YTicks, Symbol})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.YTicks, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}, getfield(Gadfly, Symbol("#19#20")){Int64}}})
precompile(Tuple{getfield(Gadfly, Symbol("##render_prepared#107")), Bool, Bool, typeof(Gadfly.render_prepared), Gadfly.Plot, Gadfly.Coord.Cartesian, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Array{Gadfly.GuideElement, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Gadfly.Aesthetics, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.__cat), Array{Gadfly.Aesthetics, 1}, Tuple{Int64}, Tuple{Bool}, Gadfly.Aesthetics, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.__subarray_throw_boundserror), Type{Base.SubArray{Gadfly.Aesthetics, 1, Array{Gadfly.Aesthetics, 1}, Tuple{Base.UnitRange{Int64}}, true}}, Array{Gadfly.Aesthetics, 1}, Tuple{Base.UnitRange{Int64}}, Int64, Int64, Tuple{Int64}})
precompile(Tuple{typeof(Base.fill!), Base.SubArray{Gadfly.Aesthetics, 1, Array{Gadfly.Aesthetics, 1}, Tuple{Base.UnitRange{Int64}}, true}, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.cat_indices), Array{Gadfly.Aesthetics, 1}, Int64})
precompile(Tuple{typeof(Base.cat_size), Array{Gadfly.Aesthetics, 1}, Int64})
precompile(Tuple{typeof(Base.throw_setindex_mismatch), Array{Gadfly.Aesthetics, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.setindex!), Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Aesthetics, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Gadfly.concrete_minmax), Array{Int64, 1}, Int64, Int64})
precompile(Tuple{typeof(Gadfly.isconcrete), Float64})
precompile(Tuple{typeof(Gadfly.concrete_minmax), Array{Float64, 1}, Float64, Float64})
precompile(Tuple{typeof(Base.hvcat_fill), Array{Float64, 1}, Tuple{Int64, Float64}})
precompile(Tuple{typeof(Base.vcat), Int64, Float64})
precompile(Tuple{typeof(Base.skipmissing), Array{Float64, 1}})
precompile(Tuple{typeof(Base.maximum), Base.SkipMissing{Array{Float64, 1}}})
precompile(Tuple{typeof(Base.minimum), Base.SkipMissing{Array{Float64, 1}}})
precompile(Tuple{typeof(Base.vcat), Float64, Float64})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:leftpad, :rightpad, :toppad, :bottompad), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Compose.UnitBox{S, T, U, V} where V where U where T where S}, Int64, Float64, Float64, Float64})
precompile(Tuple{Type{NamedTuple{(:units, :raster), T} where T<:Tuple}, Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Bool}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:units, :raster), Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Bool}}, typeof(Compose.context)})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}, Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}}})
precompile(Tuple{getfield(Gadfly.Geom, Symbol("#143#157")), Gadfly.Layer})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Gadfly.StatisticElement, 1}, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly.Geom, Symbol("#143#157"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly.Geom, Symbol("#143#157"))}})
precompile(Tuple{getfield(Gadfly, Symbol("##inherit!#52")), Array{Any, 1}, typeof(Gadfly.inherit!), Gadfly.Aesthetics, Gadfly.Aesthetics})
precompile(Tuple{Type{Gadfly.Aesthetics}, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.copyto!), Array{Gadfly.ScaleElement, 1}, Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##render_prepared")), NamedTuple{(:table_only,), Tuple{Bool}}, typeof(Gadfly.render_prepared), Gadfly.Plot, Gadfly.Coord.Cartesian, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Array{Gadfly.GuideElement, 1}})
precompile(Tuple{typeof(Compose.pad_outer), Compose.Context, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.Context, 1}, Compose.Context, Base.Generator{Array{Compose.Context, 1}, getfield(Compose, Symbol("#126#127")){Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{typeof(Base._collect), Array{Compose.Context, 1}, Base.Generator{Array{Compose.Context, 1}, getfield(Compose, Symbol("#126#127")){Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Geom.SubplotGrid, Gadfly.Theme, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}})
precompile(Tuple{getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}, Tuple{Gadfly.Layer, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}, Gadfly.Theme}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.Context, 1}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}}, getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}}, Int64, Tuple{Int64, Int64, Int64, Int64, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}}, getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB24}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.ColorAlpha{ColorTypes.HSL{T}, T, 4} where T<:AbstractFloat}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.HSLA{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Geom.LineGeometry, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Geom.LineGeometry, Gadfly.Theme, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}})
precompile(Tuple{typeof(Base.length), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.length), IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{Type{IndirectArrays.IndirectArray{UInt8, N, A, V} where V<:AbstractArray{UInt8, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N}, Array{Int64, 1}})
precompile(Tuple{Type{IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.fill!), Array{ColorTypes.LCHab{Float32}, 1}, ColorTypes.LCHab{Float32}})
precompile(Tuple{typeof(Base.fill), ColorTypes.LCHab{Float32}, Int64})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, Array{ColorTypes.LCHab{Float32}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, Array{ColorTypes.LCHab{Float32}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, Array{Int64, 1}})
precompile(Tuple{getfield(Gadfly, Symbol("##Aesthetics#45")), Array{Int64, 1}, Array{Float64, 1}, Nothing, Nothing, Nothing, Nothing, Nothing, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Nothing, IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Nothing, Nothing, Nothing, Nothing, Array{Float64, 1}, Array{Float64, 1}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, OrderedCollections.OrderedDict{Any, Any}, String, Nothing, Nothing, Base.Dict{Symbol, AbstractString}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(Gadfly.Scale.identity_formatter), typeof(Gadfly.Scale.identity_formatter), typeof(Showoff.showoff), typeof(Showoff.showoff), getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, typeof(Showoff.showoff), typeof(Showoff.showoff), typeof(Showoff.showoff), typeof(Showoff.showoff), Base.Missing, Base.Missing, Type{Gadfly.Aesthetics}, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.:(==)), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Function})
precompile(Tuple{typeof(Base.:(==)), IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Function})
precompile(Tuple{typeof(Base.:(==)), OrderedCollections.OrderedDict{Any, Any}, Function})
precompile(Tuple{typeof(Base.sortperm), Array{Int64, 1}})
precompile(Tuple{getfield(Base.Sort, Symbol("##sortperm#11")), Base.Sort.QuickSortAlg, Function, Function, Nothing, Base.Order.ForwardOrdering, typeof(Base.sortperm), Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, IndirectArrays.IndirectArray{Int64, 1, Array{UInt8, 1}, Array{Int64, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), IndirectArrays.IndirectArray{Int64, 1, Array{UInt8, 1}, Array{Int64, 1}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), IndirectArrays.IndirectArray{Int64, 1, Array{UInt8, 1}, Array{Int64, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.vect), Array{Int64, 1}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.promote_typeof), Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.promote_typeof), Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.copyto!), Array{Array{T, 1} where T, 1}, Tuple{Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Geom, Symbol("#131#132")), Array{Array{T, 1} where T, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Array{T, 1} where T, 1}, getfield(Gadfly.Geom, Symbol("#131#132"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{T, 1} where T, 1}, getfield(Gadfly.Geom, Symbol("#131#132"))}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.isconcrete), Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Int64, 1}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Int64, 1}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Int64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Int64, 1}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}}}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{ColorTypes.RGB{Float32}, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.RGB{Float32}, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.RGB{Float32}, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.unique), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.iterate), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.copyto!), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Base.Iterators.Zip{Tuple{Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.collect), Type{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}}, Base.Iterators.Zip{Tuple{Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}, Array{Int64, 1}}}})
precompile(Tuple{Type{Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}}})
precompile(Tuple{typeof(Base.hash), Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, UInt64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}, Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}, Nothing, Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}, Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}})
precompile(Tuple{typeof(Base.unique), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{typeof(Base.unique), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{typeof(Base.length), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{Type{Array{ColorTypes.RGB{Float32}, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.vect), Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Extruded{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}}}})
precompile(Tuple{typeof(Base.first), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{ColorTypes.RGB{Float32}, 1}, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.get_stroke_vector), Tuple{Array{Symbol, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.get_stroke_vector), Tuple{Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.get_stroke_vector), Tuple{Array{Symbol, 1}}}})
precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.get_stroke_vector), Tuple{Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{Array{Any, 1}}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Any, 1}, Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!), Array{Array{Any, 1}, 1}, Array{Array{Any, 1}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.get_stroke_vector), Tuple{Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Array{Any, 1}, Int64, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Array{Any, 1}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.get_stroke_vector), Tuple{Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.getindex), Base.Dict{ColorTypes.RGB{Float32}, String}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}}})
precompile(Tuple{getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.svg_color_class_from_label), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Gadfly.svg_color_class_from_label), String})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.svg_color_class_from_label), Tuple{Base.Broadcast.Extruded{Array{String, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.svg_color_class_from_label), Tuple{Array{String, 1}}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Array{Tuple{Int64, Float64}, 1}, 1}, getfield(Compose, Symbol("#1#2"))}, Int64})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Int64, Float64}, 1}, 1}, Symbol})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.StrokePrimitive, 1}, Compose.StrokePrimitive, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Compose, Symbol("#42#43"))}, Int64})
precompile(Tuple{typeof(Compose.stroke), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Measures.Measure, 1}, Base.IndexLinear, Array{Any, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.StrokeDashPrimitive, 1}, Base.Generator{Array{Array{Any, 1}, 1}, getfield(Compose, Symbol("#46#47"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{Any, 1}, 1}, getfield(Compose, Symbol("#46#47"))}})
precompile(Tuple{typeof(Compose.strokedash), Array{Array{Any, 1}, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGClassPrimitive, 1}, Compose.SVGClassPrimitive, Base.Generator{Array{String, 1}, Type{Compose.SVGClassPrimitive}}, Int64})
precompile(Tuple{typeof(Compose.svgclass), Array{String, 1}})
precompile(Tuple{typeof(Compose.compose), Compose.Context, Compose.Context})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Nothing, Nothing, Nothing, Nothing, Compose.ListNull{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Nothing, Float64, Symbol})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Context})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.PanelBackground, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.PanelBackground, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.:(!=)), Array{Gadfly.Guide.PositionedGuide, 1}, Nothing})
precompile(Tuple{typeof(Base.copyto!), Array{Any, 1}, Int64, Array{Gadfly.Guide.PositionedGuide, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.append!), Array{Any, 1}, Array{Gadfly.Guide.PositionedGuide, 1}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.Lab{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Lab{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.QuestionMark, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.QuestionMark, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.fill), ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.SVGClassPrimitive}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.SVGClassPrimitive}, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.HelpScreen, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.HelpScreen, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{getfield(Colors, Symbol("##distinguishable_colors#11")), Bool, typeof(Base.identity), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, typeof(Colors.distinguishable_colors), Int64, Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}})
precompile(Tuple{getfield(Colors, Symbol("##distinguishable_colors#12")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Colors.distinguishable_colors), Int64, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Colors.distinguishable_colors), Int64, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Base.allocatedinline), Type{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}}})
precompile(Tuple{typeof(Base.copyto!), Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, Int64, Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, Int64, Int64})
precompile(Tuple{typeof(Colors.invert_srgb_compand), FixedPointNumbers.Normed{UInt8, 8}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float64}}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.Lab{Float64}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{AbstractString, AbstractString}, String})
precompile(Tuple{getfield(Compose, Symbol("#112#113")), Base.SubString{String}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{Base.SubString{String}, 1}, getfield(Compose, Symbol("#112#113"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Base.SubString{String}, 1}, getfield(Compose, Symbol("#112#113"))}})
precompile(Tuple{typeof(Compose.levenshtein), String, String})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{AbstractString, AbstractString}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{AbstractString, AbstractString}, String})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, AbstractString}, String, String})
precompile(Tuple{typeof(Compose.match_font), String})
precompile(Tuple{typeof(Compose.max_text_extents), String, Measures.Length{:mm, Float64}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Compose.text_width), Base.Dict{String, Any}, Base.SubString{String}, Float64})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}, Float64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.:(+)), Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Base.Generator{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Base.Generator{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{getfield(Compose, Symbol("##text#27")), Symbol, typeof(Compose.text), Array{Measures.Length{:w, Float64}, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{String, 1}, Array{Compose.HCenter, 1}, Array{Compose.VCenter, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Measures.Length{:w, Float64}, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{String, 1}, Array{Compose.HCenter, 1}, Array{Compose.VCenter, 1}})
precompile(Tuple{typeof(Base.:(/)), Measures.Length{:mm, Float64}, Int64})
precompile(Tuple{typeof(Base.:(*)), Measures.Length{:mm, Float64}, Float64})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(*)), Measures.Length{:mm, Float64}, Int64})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.rectangle), Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Tuple{Compose.Context, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.Property{Compose.FontPrimitive}, Compose.Property{Compose.FontSizePrimitive}, Compose.Property{Compose.FillPrimitive}}, Tuple{Compose.Context, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.Property{Compose.FillPrimitive}}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.CrossHair, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.CrossHair, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Gadfly.issomething), Array{Float64, 1}})
precompile(Tuple{typeof(IterTools.groupby), getfield(Gadfly.Guide, Symbol("#30#39")), Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#30#39"))}, Nothing})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#30#39"))}})
precompile(Tuple{typeof(Showoff.concrete_minimum), Array{Float64, 1}})
precompile(Tuple{typeof(Showoff.concrete_maximum), Array{Float64, 1}})
precompile(Tuple{typeof(Base.Grisu.fastfixedtoa), Float32, Int64, Int64, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float32, Int64, Int64, Array{UInt8, 1}, Array{Base.Grisu.Bignums.Bignum, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float32, Int64, Int64})
precompile(Tuple{typeof(Showoff.plain_precision_heuristic), Array{Float64, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float64, Int64, Int64})
precompile(Tuple{typeof(Showoff.format_fixed), Float64, Int64})
precompile(Tuple{getfield(Showoff, Symbol("#1#2")), Float64})
precompile(Tuple{typeof(Base.grow_to!), Array{Float64, 1}, Base.Generator{Base.Iterators.Filter{typeof(Base.isfinite), Array{Float64, 1}}, getfield(Showoff, Symbol("#1#2"))}, Int64})
precompile(Tuple{typeof(Base.grow_to!), Array{Float64, 1}, Base.Generator{Base.Iterators.Filter{typeof(Base.isfinite), Array{Float64, 1}}, getfield(Showoff, Symbol("#1#2"))}})
precompile(Tuple{typeof(Showoff.format_fixed_scientific), Float64, Int64, Bool})
precompile(Tuple{typeof(Showoff.showoff), Array{Float64, 1}, Symbol})
precompile(Tuple{typeof(Gadfly.Scale.identity_formatter), Array{Float64, 1}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#30#39"))}, Tuple{Bool, Float64, Tuple{Float64, Float64}, Tuple{Int64, Int64}}})
precompile(Tuple{typeof(Gadfly.get_stroke_vector), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#31#40")), Array{Float64, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}, Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#31#40"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#31#40"))}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}, getfield(Compose, Symbol("#1#2"))}, Int64})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}, Symbol})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}})
precompile(Tuple{typeof(Compose.stroke), ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Measures.Measure, 1}, Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Compose.strokedash), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#32#41")), Array{Float64, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}, Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#32#41"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#32#41"))}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.VisiblePrimitive, 1}, Compose.VisiblePrimitive, Base.Generator{Array{Bool, 1}, Type{Compose.VisiblePrimitive}}, Int64})
precompile(Tuple{typeof(Compose.visible), Array{Bool, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGAttributePrimitive, 1}, Compose.SVGAttributePrimitive, Base.Generator{Array{Float64, 1}, getfield(Compose, Symbol("#50#51")){String}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Compose, Symbol("#50#51")){String}}})
precompile(Tuple{typeof(Compose.svgattribute), String, Array{Float64, 1}})
precompile(Tuple{typeof(Base.Printf.decode_hex), Int64, Base.CodeUnits{UInt8, String}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.hex), ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Compose.text_extents), String, Measures.Length{:mm, Float64}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Base.afoldl), typeof(Base.:(*)), Float64, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Length{:mm, Float64}}, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#33#42"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#33#42"))}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#34#43"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#34#43"))}, Int64})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Measures.Length{:mm, Float64}, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}, Base.LogicalIndex{Int64, Array{Bool, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Measures.Length{:mm, Float64}, 1}, Tuple{Base.LogicalIndex{Int64, Array{Bool, 1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Measures.Length{:mm, Float64}, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.add_sum), Array{Measures.Length{:mm, Float64}, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.add_sum), Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.sum), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.add_sum), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Measures.Length{:mm, Float64}, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.max), Array{Measures.Length{:mm, Float64}, 1}, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.max), Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.maximum), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.max), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(+)), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, typeof(Compose.context)})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight, :penalty), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Int64}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight, :penalty), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Int64}}, typeof(Compose.context)})
precompile(Tuple{typeof(IterTools.groupby), getfield(Gadfly.Guide, Symbol("#49#58")), Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#49#58"))}, Nothing})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#49#58"))}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#49#58"))}, Tuple{Bool, Float64, Tuple{Float64, Float64}, Tuple{Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#50#59")), Array{Float64, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}, Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#50#59"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#50#59"))}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}, getfield(Compose, Symbol("#1#2"))}, Int64})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}, Symbol})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#51#60")), Array{Float64, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}, Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#51#60"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#51#60"))}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Context, Compose.Context})
precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#52#61"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#52#61"))}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#53#62"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#53#62"))}, Int64})
precompile(Tuple{typeof(Base.vect), Compose.Context})
precompile(Tuple{typeof(Base.getproperty), Gadfly.Guide.XLabel, Symbol})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.XLabel, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.XLabel, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.getproperty), Gadfly.Guide.YLabel, Symbol})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.YLabel, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.YLabel, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{Type{Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}}})
precompile(Tuple{typeof(OrderedCollections.rehash!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Int64})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Int64})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.ColorKey, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.ColorKey, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.isempty), OrderedCollections.OrderedDict{Any, Any}})
precompile(Tuple{typeof(Base.:(!=)), OrderedCollections.OrderedDict{Any, Any}, Nothing})
precompile(Tuple{typeof(Base.keys), OrderedCollections.OrderedDict{Any, Any}})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{Any, Any}})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{Any, Any}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}}})
precompile(Tuple{getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.Iterators.zip), Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, Vararg{Any, N} where N})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, Array{String, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, Array{String, 1}}}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{ColorTypes.RGB{Float32}, String}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{ColorTypes.RGB{Float32}, String}, Int64, Int64})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.in), ColorTypes.RGB{Float32}, Base.Set{ColorTypes.Color{T, N} where N where T}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}, Nothing, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.push!), Base.Set{ColorTypes.Color{T, N} where N where T}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.push!), Array{ColorTypes.Color{T, N} where N where T, 1}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections.ht_keyindex2), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections._setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Base.Set{AbstractString}, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Base.Set{AbstractString}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections.ht_keyindex), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, ColorTypes.RGB{Float32}, Bool})
precompile(Tuple{typeof(Base.getindex), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{AbstractString, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{AbstractString, Nothing}, String})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, Nothing}, Nothing, String})
precompile(Tuple{typeof(Base.push!), Base.Set{AbstractString}, String})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, Array{String, 1}}}, Tuple{Int64, Int64}})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, Base.Set{AbstractString}})
precompile(Tuple{typeof(OrderedCollections.rehash!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, Int64})
precompile(Tuple{typeof(OrderedCollections.ht_keyindex2), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections._setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, String, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, String, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Gadfly.Guide.render_key_title), String, Gadfly.Theme})
precompile(Tuple{typeof(Compose.text), Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}, String, Compose.HLeft, Compose.VBottom})
precompile(Tuple{typeof(Compose.context), Measures.Length{:w, Float64}, Measures.Length{:h, Float64}, Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#4#11"))}})
precompile(Tuple{typeof(Gadfly.Guide.render_discrete_color_key), Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}})
precompile(Tuple{typeof(Base.iterate), Base.ValueIterator{OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}}})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, String})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.ValueIterator{OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#4#11"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#4#11"))}, Int64})
precompile(Tuple{typeof(Base.map), Function, Base.UnitRange{Int64}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.add_sum), Array{Measures.Measure, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.add_sum), Base.IndexLinear, Array{Measures.Measure, 1}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.Context, 1}, Compose.Context, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_similar), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.allocatedinline), Type{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Base.UnitRange{Int64}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#5#13")), Array{Tuple{Measures.Measure, Measures.Measure}, 1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#5#13"))}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#5#13"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#5#13"))}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Measures.Measure, 1}, Measures.Length{:mm, Float64}, Int64})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight, :units), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Compose.UnitBox{Float64, Float64, Float64, Float64}}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight, :units), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Compose.UnitBox{Float64, Float64, Float64, Float64}}}, typeof(Compose.context)})
precompile(Tuple{Type{Gadfly.Guide.PositionedGuide}, Array{Compose.Context, 1}, Int64, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{typeof(Base.iterate), DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}})
precompile(Tuple{typeof(Base.:(==)), WeakRef, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.iterate), DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.BottomGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.OverGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.UnderGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.RightGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.LeftGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.BottomGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.BottomGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.TopGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.:(==)), WeakRef, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Gadfly.Guide.layout_guides), Compose.Context, Gadfly.Coord.Cartesian, Gadfly.Theme, Gadfly.Guide.PositionedGuide, Vararg{Gadfly.Guide.PositionedGuide, N} where N})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{typeof(Base.push!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Tuple{Array{Compose.Context, 1}, Int64}})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guide.BottomGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.OverGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.OverGuidePosition, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Gadfly.Guide, Symbol("#83#88"))}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.By{getfield(Gadfly.Guide, Symbol("#83#88"))}, Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{getfield(Base, Symbol("#kw##sort!")), NamedTuple{(:by,), Tuple{getfield(Gadfly.Guide, Symbol("#83#88"))}}, typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.LeftGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Gadfly.Guide, Symbol("#82#87"))}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.By{getfield(Gadfly.Guide, Symbol("#82#87"))}, Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{getfield(Base, Symbol("#kw##sort!")), NamedTuple{(:by,), Tuple{getfield(Gadfly.Guide, Symbol("#82#87"))}}, typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.RightGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.RightGuidePosition, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.BottomGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.BottomGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.BottomGuidePosition, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.UnderGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.UnderGuidePosition, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.length), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{Type{NamedTuple{(:units, :aspect_ratio), T} where T<:Tuple}, Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Nothing}})
precompile(Tuple{getfield(Compose, Symbol("##Table#55")), Nothing, Nothing, Nothing, Compose.UnitBox{Int64, Float64, Float64, Float64}, Int64, Bool, Bool, Array{Any, 1}, Type{Compose.Table}, Int64, Int64, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:units, :aspect_ratio), Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Nothing}}, Type{Compose.Table}, Int64, Int64, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.iterate), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{Compose.Context, 1}, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{Compose.Context, 1}, Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.iterate), Array{Compose.Context, 1}})
precompile(Tuple{typeof(Base.getproperty), Compose.Context, Symbol})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:toppad, :bottompad), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Compose.UnitBox{S, T, U, V} where V where U where T where S}, Compose.UnitBox{Int64, Float64, Float64, Float64}})
precompile(Tuple{typeof(Base.setproperty!), Compose.Context, Symbol, Compose.UnitBox{Int64, Float64, Float64, Float64}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.UnitBox{S, T, U, V} where V where U where T where S}}, Compose.UnitBox{Int64, Float64, Float64, Float64}})
precompile(Tuple{typeof(Base.iterate), Array{Compose.Context, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Compose.Table, Array{Compose.Context, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.iterate), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:leftpad, :rightpad), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Compose.UnitBox{S, T, U, V} where V where U where T where S}, Compose.UnitBox{Int64, Float64, Float64, Float64}})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight, :units, :clip), T} where T<:Tuple}, Tuple{Nothing, Nothing, Compose.UnitBox{Int64, Float64, Float64, Float64}, Bool}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight, :units, :clip), Tuple{Nothing, Nothing, Compose.UnitBox{Int64, Float64, Float64, Float64}, Bool}}, typeof(Compose.context)})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#84#89")), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Compose.Context, 1}, 1}, Array{Compose.Context, 1}, Base.Generator{Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, getfield(Gadfly.Guide, Symbol("#84#89"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, getfield(Gadfly.Guide, Symbol("#84#89"))}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#85#90")), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Compose.Context, 1}, 1}, Array{Compose.Context, 1}, Base.Generator{Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, getfield(Gadfly.Guide, Symbol("#85#90"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, getfield(Gadfly.Guide, Symbol("#85#90"))}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Array{Any, 1}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Array{Any, 1}, Array{Any, 1}, Tuple{Compose.Context, Compose.Context}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Compose.Context, 1}}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Array{Compose.Context, 1}, Array{Compose.Context, 1}, Array{Compose.Context, 1}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Array{Any, 1}, Tuple{Compose.Context, Compose.Context}, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Nothing, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Nothing, Float64, Symbol})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Nothing, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Nothing, Float64, Symbol})
precompile(Tuple{typeof(Compose.pad_inner), Compose.Context, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.pad_inner), Compose.Context, Measures.Length{:mm, Float64}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight), Tuple{Nothing, Nothing}}, typeof(Compose.context), Measures.Length{:w, Float64}, Measures.Length{:h, Float64}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}})
precompile(Tuple{typeof(Base.:(*)), Float64, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Measures.BoundingBox{P1, P2} where P2<:(Tuple{Vararg{Measures.Measure, N}} where N) where P1<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{Type{Measures.BoundingBox{P1, P2} where P2<:(Tuple{Vararg{Measures.Measure, N}} where N) where P1<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base.getproperty), Compose.ListNode{Compose.Container}, Symbol})
precompile(Tuple{typeof(Compose.order), Compose.Context})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Add{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Base.getproperty), Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Symbol})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.JSIncludePrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.JSIncludePrimitive, 1}, Compose.JSIncludePrimitive, Base.Generator{Array{Compose.JSIncludePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.JSIncludePrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.JSIncludePrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGClassPrimitive, 1}, Compose.SVGClassPrimitive, Base.Generator{Array{Compose.SVGClassPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.JSIncludePrimitive}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Type})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.JSIncludePrimitive}, Type{Compose.Property{Compose.JSIncludePrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.SVGClassPrimitive}, Type{Compose.Property{Compose.SVGClassPrimitive}}})
precompile(Tuple{Type{Compose.ImagePropertyState}, ColorTypes.RGBA{Float64}, ColorTypes.RGBA{Float64}, Array{Float64, 1}, Compose.LineCapButt, Compose.LineJoinMiter, Bool, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Nothing, Bool})
precompile(Tuple{typeof(Base.getindex), Array{Compose.SVGClassPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.SVGClassPrimitive})
precompile(Tuple{typeof(Base.getindex), Array{Compose.JSIncludePrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.JSIncludePrimitive})
precompile(Tuple{typeof(Compose.order), Compose.Table})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 2}, Int64, Base.Generator{Array{Array{Compose.Context, 1}, 2}, typeof(Base.length)}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{Compose.Context, 1}, 2}, typeof(Base.length)}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(Compose, Symbol("#61#66"))}})
precompile(Tuple{getfield(Compose, Symbol("#update_mincolrow_sizes!#65")){Compose.Table, Int64, Int64}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{getfield(Compose, Symbol("#update_focused_col_widths!#63")){Compose.Table, Compose.ParentDrawContext, Array{Float64, 1}}, Array{Float64, 1}})
precompile(Tuple{getfield(Compose, Symbol("#update_focused_row_heights!#64")){Compose.Table, Compose.ParentDrawContext, Array{Float64, 1}}, Array{Float64, 1}})
precompile(Tuple{typeof(Compose.force_aspect_ratio!), Compose.Table, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Compose.realize_brute_force), Compose.Table, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.Table, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{getfield(Compose, Symbol("#61#66")), Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Base.UnitRange{Int64}, 1}, Base.Generator{Array{Any, 1}, getfield(Compose, Symbol("#61#66"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.UnitRange{Int64}, 1}, Base.UnitRange{Int64}, Base.Generator{Array{Any, 1}, getfield(Compose, Symbol("#61#66"))}, Int64})
precompile(Tuple{Type{NamedTuple{(:units, :order), T} where T<:Tuple}, Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Int64}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:units, :order), Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Int64}}, typeof(Compose.context)})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Compose.UnitBox{Int64, Float64, Float64, Float64}, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Float64, Float64, Float64, Symbol})
precompile(Tuple{Type{Measures.BoundingBox{P1, P2} where P2<:(Tuple{Vararg{Measures.Measure, N}} where N) where P1<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Compose.UnitBox{Int64, Float64, Float64, Float64}, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Nothing, Float64, Symbol})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Float64, Float64, Float64, Symbol})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.UnitBox{Int64, Float64, Float64, Float64}})
precompile(Tuple{typeof(Base.:(>=)), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.order), Compose.AdhocContainerPromise})
precompile(Tuple{typeof(Compose.realize), Compose.AdhocContainerPromise, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.AdhocContainerPromise, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#68#70")){Gadfly.Guide.XLabel, Gadfly.Theme, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.text), Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HCenter, Compose.VTop})
precompile(Tuple{typeof(Base.getproperty), Compose.ListNode{Compose.Form{P} where P<:Compose.FormPrimitive}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.FontSizePrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FontSizePrimitive, 1}, Compose.FontSizePrimitive, Base.Generator{Array{Compose.FontSizePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.FontSizePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Compose.FontSizePrimitive}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FontPrimitive, 1}, Compose.FontPrimitive, Base.Generator{Array{Compose.FontPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FillPrimitive, 1}, Compose.FillPrimitive, Base.Generator{Array{Compose.FillPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.StrokePrimitive, 1}, Compose.StrokePrimitive, Base.Generator{Array{Compose.StrokePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FontSizePrimitive}, Type{Compose.Property{Compose.FontSizePrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FontPrimitive}, Type{Compose.Property{Compose.FontPrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FillPrimitive}, Type{Compose.Property{Compose.FillPrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.StrokePrimitive}, Type{Compose.Property{Compose.StrokePrimitive}}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.FontSizePrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FontSizePrimitive})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.convert), Type{Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.FontPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FontPrimitive})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, String})
precompile(Tuple{typeof(Base.getindex), Array{Compose.StrokePrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.StrokePrimitive})
precompile(Tuple{typeof(Base.getindex), Array{Compose.FillPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FillPrimitive})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Float64, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HCenter, Compose.VTop, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{Type{Compose.Form{P} where P<:Compose.FormPrimitive}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.isempty), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.batch), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Compose.vector_properties_require_push_pop), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.push_vector_properties), Compose.Image{Compose.PDFBackend}, Int64})
precompile(Tuple{typeof(Compose.rotate), Compose.Image{Compose.PDFBackend}, Float64, Float64, Float64})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Type{T} where T})
precompile(Tuple{typeof(Cairo.set_text), Cairo.CairoContext, String, Bool})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#35#44")){Gadfly.Theme, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{AbstractString, 1}, Base.LogicalIndex{Int64, Array{Bool, 1}}})
precompile(Tuple{typeof(Base.getindex), Array{AbstractString, 1}, Array{Bool, 1}})
precompile(Tuple{getfield(Compose, Symbol("##text#26")), Symbol, typeof(Compose.text), Array{Float64, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{AbstractString, 1}, Array{Compose.HCenter, 1}, Array{Compose.VTop, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Float64, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{AbstractString, 1}, Array{Compose.HCenter, 1}, Array{Compose.VTop, 1}})
precompile(Tuple{Type{Compose.TextPrimitive{P, R, O} where O<:(Tuple{Vararg{Measures.Measure, N}} where N) where R<:(Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)) where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, String, Compose.HCenter, Compose.VTop, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{getfield(Compose, Symbol("##text#26")), Symbol, typeof(Compose.text), Array{Float64, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{AbstractString, 1}, Array{Compose.HCenter, 1}, Array{Compose.VBottom, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Float64, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{AbstractString, 1}, Array{Compose.HCenter, 1}, Array{Compose.VBottom, 1}})
precompile(Tuple{Type{Compose.TextPrimitive{P, R, O} where O<:(Tuple{Vararg{Measures.Measure, N}} where N) where R<:(Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)) where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, String, Compose.HCenter, Compose.VBottom, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#7#15")){Measures.Length{:mm, Float64}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#7#15")){Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#8#16"))}})
precompile(Tuple{typeof(Base.copyto!), Array{AbstractString, 1}, Base.ValueIterator{OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#6#14")){Array{Int64, 1}, Measures.Length{:mm, Float64}, Array{Measures.Measure, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Gadfly.Theme, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.context), Measures.Length{:mm, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base.:(+)), Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:units,), Tuple{Compose.UnitBox{Int64, Int64, Int64, Int64}}}, typeof(Compose.context), Int64, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}}, Base.UnitRange{Int64}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#7#15")){Measures.Length{:mm, Float64}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, 1}, Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#7#15")){Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{typeof(Compose.rectangle), Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, 1}, Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Length{:mm, Float64}, 1}, Symbol})
precompile(Tuple{typeof(Compose.rectangle), Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, 1}, Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.allocatedinline), Type{ColorTypes.Color{T, N} where N where T}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.Color{T, N} where N where T, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.Color{T, N} where N where T, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.default_discrete_highlight_color), Tuple{Array{ColorTypes.Color{T, N} where N where T, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.default_discrete_highlight_color), Tuple{Base.Broadcast.Extruded{Array{ColorTypes.Color{T, N} where N where T, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.default_discrete_highlight_color), Tuple{Array{ColorTypes.Color{T, N} where N where T, 1}}}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.StrokePrimitive, 1}, Base.Generator{Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, getfield(Compose, Symbol("#42#43"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, getfield(Compose, Symbol("#42#43"))}})
precompile(Tuple{typeof(Compose.stroke), Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.FillPrimitive, 1}, Base.Generator{Array{ColorTypes.Color{T, N} where N where T, 1}, getfield(Compose, Symbol("#44#45"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{ColorTypes.Color{T, N} where N where T, 1}, getfield(Compose, Symbol("#44#45"))}})
precompile(Tuple{typeof(Base.fill), Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{getfield(Compose, Symbol("#44#45")), ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}, Compose.Property{Compose.StrokePrimitive}, Compose.Property{Compose.FillPrimitive}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Property{Compose.StrokePrimitive}, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.vect), Measures.Length{:mm, Float64}})
precompile(Tuple{getfield(Compose, Symbol("##text#26")), Symbol, typeof(Compose.text), Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Length{:cy, Int64}, 1}, Array{AbstractString, 1}, Array{Compose.HLeft, 1}, Array{Compose.VCenter, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Length{:cy, Int64}, 1}, Array{AbstractString, 1}, Array{Compose.HLeft, 1}, Array{Compose.VCenter, 1}})
precompile(Tuple{Type{Compose.TextPrimitive{P, R, O} where O<:(Tuple{Vararg{Measures.Measure, N}} where N) where R<:(Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)) where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, String, Compose.HLeft, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Compose.context), Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#9#17")){getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}}, Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Array{ColorTypes.Color{T, N} where N where T, 1}, getfield(Gadfly.Guide, Symbol("#9#17")){getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{ColorTypes.Color{T, N} where N where T, 1}, getfield(Gadfly.Guide, Symbol("#9#17")){getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#9#17")){getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}}, ColorTypes.RGB{Float32}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#10#18")), Array{String, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{String, 1}, getfield(Gadfly.Guide, Symbol("#10#18"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{String, 1}, getfield(Gadfly.Guide, Symbol("#10#18"))}})
precompile(Tuple{typeof(Compose.jscall), Array{String, 1}, Array{Array{Measures.Measure, 1}, 1}})
precompile(Tuple{typeof(Compose.jscall), Array{String, 1}})
precompile(Tuple{typeof(Base.:(+)), Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.JSCallPrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.JSCallPrimitive, 1}, Compose.JSCallPrimitive, Base.Generator{Array{Compose.JSCallPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.JSCallPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.JSCallPrimitive}, Type{Compose.Property{Compose.JSCallPrimitive}}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.JSCallPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.JSCallPrimitive})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Int64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:cx, Int64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.UnitBox{Int64, Int64, Int64, Int64}})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.Context, Compose.IdentityTransform, Compose.UnitBox{Int64, Int64, Int64, Int64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.JSCallPrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.JSCallPrimitive, 1}, Compose.JSCallPrimitive, Base.Generator{Array{Compose.JSCallPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.JSCallPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGClassPrimitive, 1}, Compose.SVGClassPrimitive, Base.Generator{Array{Compose.SVGClassPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Type})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.JSCallPrimitive}, Type{Compose.Property{Compose.JSCallPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.SVGClassPrimitive}, Type{Compose.Property{Compose.SVGClassPrimitive}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FillPrimitive, 1}, Compose.FillPrimitive, Base.Generator{Array{Compose.FillPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.FontSizePrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FontSizePrimitive, 1}, Compose.FontSizePrimitive, Base.Generator{Array{Compose.FontSizePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.FontSizePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FontPrimitive, 1}, Compose.FontPrimitive, Base.Generator{Array{Compose.FontPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HLeft, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FillOpacityPrimitive, 1}, Compose.FillOpacityPrimitive, Base.Generator{Array{Compose.FillOpacityPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.StrokePrimitive, 1}, Compose.StrokePrimitive, Base.Generator{Array{Compose.StrokePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FillOpacityPrimitive}, Type{Compose.Property{Compose.FillOpacityPrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.FillOpacityPrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FillOpacityPrimitive, 1}, Compose.FillOpacityPrimitive, Base.Generator{Array{Float64, 1}, Type{Compose.FillOpacityPrimitive}}, Int64})
precompile(Tuple{typeof(Compose.fillopacity), Array{Float64, 1}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokePrimitive}, Type{Compose.Property{Compose.StrokePrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillOpacityPrimitive}, Type{Compose.Property{Compose.FillOpacityPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillPrimitive}, Type{Compose.Property{Compose.FillPrimitive}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Base.Generator{Array{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Tuple{Measures.Length{:mm, Float64}, Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{Type{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Symbol})
precompile(Tuple{typeof(Base.isempty), Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.fillstroke), Compose.Image{Compose.PDFBackend}, Bool})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{Type{Base.Pair{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}}, Any, Any})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FillOpacityPrimitive})
precompile(Tuple{typeof(Base.getproperty), Compose.Property{Compose.FillOpacityPrimitive}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.StrokePrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.FillOpacityPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.FillPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.JSCallPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.SVGClassPrimitive}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:mm, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HLeft, Compose.VBottom, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.vect), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Vararg{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, N} where N})
precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Array{Array{T, 1} where T, 1}, getfield(Compose, Symbol("#1#2"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{T, 1} where T, 1}, getfield(Compose, Symbol("#1#2"))}})
precompile(Tuple{typeof(Compose.narrow_polygon_point_types), Array{Array{T, 1} where T, 1}})
precompile(Tuple{typeof(Compose.clip), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{getfield(Compose, Symbol("#1#2")), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.type_params), Type{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base._array_for), Type{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Base.HasShape{1}})
precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Int64})
precompile(Tuple{Type{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Base.getindex), Type{Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, Base.IndexLinear, Array{Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{Type{Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}}, Array{Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Type{Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, Int64})
precompile(Tuple{typeof(Base.allocatedinline), Type{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.push!), Array{Tuple{Int64, Int64, Compose.Container}, 1}, Tuple{Int64, Int64, Compose.Context}})
precompile(Tuple{typeof(Base.isless), Tuple{Compose.Context}, Tuple{Compose.Context}})
precompile(Tuple{typeof(Base.Order.lt), Base.Order.ForwardOrdering, Tuple{Int64, Int64, Compose.Context}, Tuple{Int64, Int64, Compose.Context}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGAttributePrimitive, 1}, Compose.SVGAttributePrimitive, Base.Generator{Array{Compose.SVGAttributePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.SVGAttributePrimitive}, Type{Compose.Property{Compose.SVGAttributePrimitive}}})
precompile(Tuple{Type{Compose.ImagePropertyState}, ColorTypes.RGBA{Float64}, ColorTypes.RGBA{Float64}, Array{Float64, 1}, Compose.LineCapButt, Compose.LineJoinMiter, Bool, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Bool})
precompile(Tuple{typeof(Base.getindex), Array{Compose.SVGAttributePrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.SVGAttributePrimitive})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Base.Generator{Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Compose.batch), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#48#49")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.StrokeDashPrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.StrokeDashPrimitive, 1}, Compose.StrokeDashPrimitive, Base.Generator{Array{Compose.StrokeDashPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.StrokeDashPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#48#49")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Length{:mm, Float64}}, Array{Measures.Measure, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#48#49")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#48#49")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{Type{Compose.StrokeDashPrimitive}, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.LineWidthPrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.LineWidthPrimitive, 1}, Compose.LineWidthPrimitive, Base.Generator{Array{Compose.LineWidthPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.LineWidthPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{Type{Compose.LineWidthPrimitive}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.StrokeDashPrimitive}, Type{Compose.Property{Compose.StrokeDashPrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.LineWidthPrimitive}, Type{Compose.Property{Compose.LineWidthPrimitive}}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.StrokeDashPrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#141#142")){Compose.Image{Compose.PDFBackend}}}, Int64, Int64})
precompile(Tuple{typeof(Base._collect), Array{Measures.Measure, 1}, Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#141#142")){Compose.Image{Compose.PDFBackend}}}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.StrokeDashPrimitive})
precompile(Tuple{getfield(Compose, Symbol("#141#142")){Compose.Image{Compose.PDFBackend}}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.LineWidthPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.LineWidthPrimitive})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}, Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Length{:cy, Float64}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.isempty), Array{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.batch), Compose.Form{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Measures.Length{:mm, Float64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Compose.arrowhead), Compose.Image{Compose.PDFBackend}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Float64, Float64})
precompile(Tuple{typeof(Compose.arrow), Compose.Image{Compose.PDFBackend}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Float64}, Measures.Length{:h, Float64}}})
precompile(Tuple{Type{Compose.StrokeDashPrimitive}, Array{Any, 1}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokeDashPrimitive}, Type{Compose.Property{Compose.StrokeDashPrimitive}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.StrokeDashPrimitive}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#54#63")){Gadfly.Theme, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{getfield(Compose, Symbol("##text#26")), Symbol, typeof(Compose.text), Array{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{Float64, 1}, Array{AbstractString, 1}, Array{Compose.HRight, 1}, Array{Compose.VCenter, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{Float64, 1}, Array{AbstractString, 1}, Array{Compose.HRight, 1}, Array{Compose.VCenter, 1}})
precompile(Tuple{Type{Compose.TextPrimitive{P, R, O} where O<:(Tuple{Vararg{Measures.Measure, N}} where N) where R<:(Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)) where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, String, Compose.HRight, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HRight, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#74#76")){Gadfly.Guide.YLabel, Gadfly.Theme, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.text), Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HCenter, Compose.VCenter, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HCenter, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Cairo.destroy), Cairo.CairoSurfaceIOStream{UInt32}})
precompile(Tuple{typeof(Cairo.destroy), Cairo.CairoContext})
precompile(Tuple{typeof(Parsers.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#33#38")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#34#39")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#35#40")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#36#41")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Base.foreach), getfield(Parsers, Symbol("#37#42")), Array{Base.GMP.BigInt, 1}})
precompile(Tuple{typeof(Compat.Sys.__init__)})
precompile(Tuple{typeof(FilePathsBase.__init__)})
precompile(Tuple{typeof(CSV.__init__)})
precompile(Tuple{typeof(Base.active_project), Bool})
precompile(Tuple{typeof(Base.load_path_expand), String})
precompile(Tuple{typeof(Base.load_path)})
precompile(Tuple{getfield(Base, Symbol("#681#682")){String}, Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#681#682")){String}, String})
precompile(Tuple{typeof(Base.project_deps_get), String, String})
precompile(Tuple{typeof(Base.identify_package), String})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Any, Int64}, Symbol})
precompile(Tuple{getfield(Base, Symbol("#689#690")){Base.UUID, String}, Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#689#690")){Base.UUID, String}, String})
precompile(Tuple{typeof(Base.manifest_deps_get), String, Base.PkgId, String})
precompile(Tuple{typeof(Base.identify_package), Base.PkgId, String})
precompile(Tuple{typeof(Base.manifest_uuid_path), String, Base.PkgId})
precompile(Tuple{typeof(Base.locate_package), Base.PkgId})
precompile(Tuple{typeof(Base.stat), Base.Libc.RawFD})
precompile(Tuple{typeof(Base.isvalid_file_crc), Base.IOStream})
precompile(Tuple{typeof(Base.stale_cachefile), String, String})
precompile(Tuple{typeof(Base.register_root_module), Module})
precompile(Tuple{typeof(Base._include_from_serialized), String, Array{Any, 1}})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, String})
precompile(Tuple{typeof(Base._require_search_from_serialized), Base.PkgId, String})
precompile(Tuple{typeof(Base.compilecache_path), Base.PkgId})
precompile(Tuple{typeof(Base.load_path_setup_code), Bool})
precompile(Tuple{typeof(Base.create_expr_cache), String, String, Array{Base.Pair{Base.PkgId, UInt64}, 1}, Nothing})
precompile(Tuple{typeof(Base.compilecache), Base.PkgId, String})
precompile(Tuple{typeof(Base._include_dependency), Module, String})
precompile(Tuple{typeof(Base.include_relative), Module, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, Nothing})
precompile(Tuple{typeof(Base._require_from_serialized), String})
precompile(Tuple{typeof(Base._require), Base.PkgId})
precompile(Tuple{typeof(Base.require), Base.PkgId})
precompile(Tuple{typeof(Base.require), Module, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.IdDict{Module, Base.PkgId}, Any, Any})
precompile(Tuple{typeof(Base.include_dependency), String})
precompile(Tuple{typeof(Rmath_jll.__init__)})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##load_overrides#3")), Bool, typeof(Pkg.Artifacts.load_overrides)})
precompile(Tuple{typeof(Pkg.Artifacts.process_overrides), Base.Dict{String, Any}, Base.UUID})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_meta#20")), Pkg.BinaryPlatforms.Platform, typeof(Pkg.Artifacts.artifact_meta), String, Base.Dict{String, Any}, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##artifact_meta")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.artifact_meta), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.unpack_platform), Base.Dict{String, Any}, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}, Base.Dict{String, Any}})
precompile(Tuple{Type{Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Generator{Array{Base.Dict{String, Any}, 1}, getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}}})
precompile(Tuple{typeof(Base.mapfilter), getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, typeof(Base.push!), Base.KeySet{Pkg.BinaryPlatforms.Platform, Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Set{Pkg.BinaryPlatforms.Platform}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.query_override), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_paths#9")), Bool, typeof(Pkg.Artifacts.artifact_paths), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_exists#11")), Bool, typeof(Pkg.Artifacts.artifact_exists), Base.SHA1})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple, 1}, getfield(Pkg.PlatformEngines, Symbol("#36#61"))}})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##probe_cmd#14")), Bool, typeof(Pkg.PlatformEngines.probe_cmd), Base.Cmd})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple, 1}, getfield(Pkg.PlatformEngines, Symbol("#40#65"))}})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##probe_platform_engines!#15")), Bool, typeof(Pkg.PlatformEngines.probe_platform_engines!)})
precompile(Tuple{typeof(Base.read), Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#280#281")){String}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##verify#98")), Bool, Bool, String, typeof(Pkg.PlatformEngines.verify), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download#82")), Bool, typeof(Pkg.PlatformEngines.download), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify#83")), Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify), String, String, String})
precompile(Tuple{typeof(Base.convert), Type{Nothing}, Base.SubString{String}})
precompile(Tuple{typeof(Base.convert), Type{Base.Pair{Nothing, String}}, Base.Pair{Base.SubString{String}, String}})
precompile(Tuple{typeof(Base.setindex!), Array{Base.Pair{Nothing, String}, 1}, Base.Pair{Base.SubString{String}, String}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.Pair{Nothing, String}, 1}, Base.Pair{Base.SubString{String}, String}, Base.Generator{Array{Array{Union{Nothing, Base.SubString{String}}, 1}, 1}, getfield(Pkg.PlatformEngines, Symbol("#88#90"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{Union{Nothing, Base.SubString{String}}, 1}, 1}, getfield(Pkg.PlatformEngines, Symbol("#88#90"))}})
precompile(Tuple{typeof(Pkg.PlatformEngines.list_tarball_symlinks), String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("#kw##cptree")), NamedTuple{(:force, :follow_symlinks), Tuple{Bool, Bool}}, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{typeof(Base.Filesystem.sendfile), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cptree#11")), Bool, Bool, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cp#12")), Bool, Bool, typeof(Base.Filesystem.cp), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##artifact_paths")), NamedTuple{(:honor_overrides,), Tuple{Bool}}, typeof(Pkg.Artifacts.artifact_paths), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_path#10")), Bool, typeof(Pkg.Artifacts.artifact_path), Base.SHA1})
precompile(Tuple{typeof(Base.Filesystem.rename), String, String})
precompile(Tuple{typeof(Pkg.GitTools.set_readonly), String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.artifact_path), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##query_override#7")), Base.Dict{Symbol, Base.Dict{K, V} where V where K}, typeof(Pkg.Artifacts.query_override), Base.SHA1})
precompile(Tuple{typeof(Random.make_seed)})
precompile(Tuple{Type{Random.MersenneTwister}, Nothing})
precompile(Tuple{typeof(Random.default_rng), Int64})
precompile(Tuple{typeof(Base.rand)})
precompile(Tuple{typeof(Base.randn)})
precompile(Tuple{typeof(Random.randexp)})
precompile(Tuple{typeof(Rmath.__init__)})
precompile(Tuple{typeof(Requires.__init__)})
precompile(Tuple{typeof(Requires.loadpkg), Base.PkgId})
precompile(Tuple{typeof(ArrayInterface.__init__)})
precompile(Tuple{typeof(Requires.listenpkg), Any, Base.PkgId})
precompile(Tuple{typeof(Requires.withpath), Any, String})
precompile(Tuple{getfield(ArrayInterface, Symbol("#15#36"))})
precompile(Tuple{typeof(Requires.withnotifications), String, Vararg{Any, N} where N})
precompile(Tuple{getfield(ArrayInterface, Symbol("#16#37"))})
precompile(Tuple{typeof(Base.catch_backtrace)})
precompile(Tuple{typeof(Requires.err), Any, Module, String})
precompile(Tuple{getfield(ArrayInterface, Symbol("#17#38"))})
precompile(Tuple{typeof(Base.get!), getfield(Requires, Symbol("#1#2")), Base.Dict{Base.PkgId, Array{Function, 1}}, Base.PkgId})
precompile(Tuple{getfield(ArrayInterface, Symbol("#18#39"))})
precompile(Tuple{getfield(ArrayInterface, Symbol("#19#40"))})
precompile(Tuple{getfield(ArrayInterface, Symbol("#20#41"))})
precompile(Tuple{typeof(Base.stat), Base.Libc.RawFD})
precompile(Tuple{typeof(Base.isvalid_file_crc), Base.IOStream})
precompile(Tuple{typeof(Base.stale_cachefile), String, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, String})
precompile(Tuple{typeof(Base._require_search_from_serialized), Base.PkgId, String})
precompile(Tuple{typeof(Base.create_expr_cache), String, String, Array{Base.Pair{Base.PkgId, UInt64}, 1}, Nothing})
precompile(Tuple{typeof(Base.compilecache), Base.PkgId, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, Nothing})
precompile(Tuple{typeof(Base._require_from_serialized), String})
precompile(Tuple{typeof(Base._require), Base.PkgId})
precompile(Tuple{typeof(Base.require), Base.PkgId})
precompile(Tuple{typeof(FiniteDiff.__init__)})
precompile(Tuple{typeof(CompilerSupportLibraries_jll.__init__)})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##load_overrides#3")), Bool, typeof(Pkg.Artifacts.load_overrides)})
precompile(Tuple{typeof(Pkg.Artifacts.process_overrides), Base.Dict{String, Any}, Base.UUID})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##artifact_meta")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.artifact_meta), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.unpack_platform), Base.Dict{String, Any}, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}, Base.Dict{String, Any}})
precompile(Tuple{Type{Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Generator{Array{Base.Dict{String, Any}, 1}, getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}}})
precompile(Tuple{typeof(Base.ntuple), getfield(Base, Symbol("#457#458")){Array{Base.SubString{String}, 1}}, Int64})
precompile(Tuple{Type{Base.VersionNumber}, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#nover#17")), String})
precompile(Tuple{typeof(Base.:(==)), Base.VersionNumber, Base.VersionNumber})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:libgfortran_version, :libstdcxx_version, :cxxstring_abi), Tuple{Base.VersionNumber, Nothing, Nothing}}, Type{Pkg.BinaryPlatforms.CompilerABI}})
precompile(Tuple{typeof(Base.mapfilter), getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, typeof(Base.push!), Base.KeySet{Pkg.BinaryPlatforms.Platform, Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Set{Pkg.BinaryPlatforms.Platform}})
precompile(Tuple{getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, Pkg.BinaryPlatforms.Linux})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.query_override), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_paths#9")), Bool, typeof(Pkg.Artifacts.artifact_paths), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_exists#11")), Bool, typeof(Pkg.Artifacts.artifact_exists), Base.SHA1})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##probe_platform_engines!#15")), Bool, typeof(Pkg.PlatformEngines.probe_platform_engines!)})
precompile(Tuple{typeof(Base.read), Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#280#281")){String}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##verify#98")), Bool, Bool, String, typeof(Pkg.PlatformEngines.verify), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify#83")), Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify), String, String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("#kw##cptree")), NamedTuple{(:force, :follow_symlinks), Tuple{Bool, Bool}}, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{typeof(Base.Filesystem.sendfile), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cptree#11")), Bool, Bool, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cp#12")), Bool, Bool, typeof(Base.Filesystem.cp), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##artifact_paths")), NamedTuple{(:honor_overrides,), Tuple{Bool}}, typeof(Pkg.Artifacts.artifact_paths), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##artifact_path#10")), Bool, typeof(Pkg.Artifacts.artifact_path), Base.SHA1})
precompile(Tuple{typeof(Base.Filesystem.rename), String, String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Pkg.Artifacts.artifact_path), Base.SHA1})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##query_override#7")), Base.Dict{Symbol, Base.Dict{K, V} where V where K}, typeof(Pkg.Artifacts.query_override), Base.SHA1})
precompile(Tuple{typeof(Base.foreach), getfield(OpenSpecFun_jll, Symbol("#7#9")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(OpenSpecFun_jll, Symbol("#8#10")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(OpenSpecFun_jll.__init__)})
precompile(Tuple{typeof(OpenBLAS_jll.__init__)})
precompile(Tuple{typeof(Pkg.Artifacts.process_overrides), Base.Dict{String, Any}, Base.UUID})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{typeof(Pkg.Artifacts.unpack_platform), Base.Dict{String, Any}, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}, Base.Dict{String, Any}})
precompile(Tuple{Type{Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Generator{Array{Base.Dict{String, Any}, 1}, getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}}})
precompile(Tuple{typeof(Base.:(==)), Base.VersionNumber, Base.VersionNumber})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:libgfortran_version, :libstdcxx_version, :cxxstring_abi), Tuple{Base.VersionNumber, Nothing, Nothing}}, Type{Pkg.BinaryPlatforms.CompilerABI}})
precompile(Tuple{getfield(Pkg.BinaryPlatforms, Symbol("#39#41")){Pkg.BinaryPlatforms.Linux}, Pkg.BinaryPlatforms.Linux})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Base.stat), Base.Libc.RawFD})
precompile(Tuple{typeof(Base.read), Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Base, Symbol("#280#281")){String}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##verify#98")), Bool, Bool, String, typeof(Pkg.PlatformEngines.verify), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify#83")), Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify), String, String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("#kw##cptree")), NamedTuple{(:force, :follow_symlinks), Tuple{Bool, Bool}}, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{typeof(Base.Filesystem.sendfile), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cptree#11")), Bool, Bool, typeof(Base.Filesystem.cptree), String, String})
precompile(Tuple{getfield(Base.Filesystem, Symbol("##cp#12")), Bool, Bool, typeof(Base.Filesystem.cp), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{typeof(Base.Filesystem.rename), String, String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(Base.foreach), getfield(Arpack_jll, Symbol("#7#9")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Arpack_jll, Symbol("#8#10")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Arpack_jll.__init__)})
precompile(Tuple{typeof(FFTW_jll.__init__)})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(FFTW.__init__)})
precompile(Tuple{typeof(DocStringExtensions.__init__)})
precompile(Tuple{typeof(Compose.__init__)})
precompile(Tuple{typeof(Base.copyto!), Array{Function, 1}, Tuple{typeof(Compose.circle), typeof(Gadfly.Shape.square), typeof(Gadfly.Shape.diamond), typeof(Gadfly.Shape.cross), typeof(Gadfly.Shape.xcross), typeof(Gadfly.Shape.utriangle), typeof(Gadfly.Shape.dtriangle), typeof(Gadfly.Shape.star1), typeof(Gadfly.Shape.star2), typeof(Gadfly.Shape.hexagon), typeof(Gadfly.Shape.octagon), typeof(Gadfly.Shape.hline), typeof(Gadfly.Shape.vline), typeof(Gadfly.Shape.ltriangle), typeof(Gadfly.Shape.rtriangle)}})
precompile(Tuple{getfield(Gadfly, Symbol("##Theme#57")), ColorTypes.LCHab{Float32}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Function, Function, Array{Function, 1}, Measures.Length{:mm, Float64}, Array{Symbol, 1}, Array{Float64, 1}, Nothing, Nothing, Float64, Nothing, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Int64, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, typeof(Gadfly.default_stroke_color), Measures.Length{:mm, Float64}, typeof(Gadfly.default_discrete_highlight_color), typeof(Gadfly.default_continuous_highlight_color), typeof(Gadfly.default_lowlight_color), typeof(Gadfly.default_middle_color), Measures.Length{:mm, Float64}, Symbol, Symbol, typeof(Gadfly.Shape.square), Nothing, Nothing, Symbol, Nothing, Measures.Length{:mm, Float64}, Int64, Float64, Float64, Float64, Measures.Length{:mm, Float64}, Int64, Gadfly.Scale.DiscreteColorScale, Gadfly.Scale.ContinuousColorScale, Type{Gadfly.Theme}})
precompile(Tuple{Type{Gadfly.Theme}})
precompile(Tuple{typeof(Gadfly.push_theme), Symbol})
precompile(Tuple{typeof(Gadfly.__init__)})
precompile(Tuple{getfield(Gadfly, Symbol("#2#9"))})
precompile(Tuple{getfield(Gadfly, Symbol("#3#10"))})
precompile(Tuple{getfield(Gadfly, Symbol("#4#11"))})
precompile(Tuple{typeof(Base.isvalid_file_crc), Base.IOStream})
precompile(Tuple{typeof(Base.stale_cachefile), String, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, String})
precompile(Tuple{typeof(Base._require_search_from_serialized), Base.PkgId, String})
precompile(Tuple{typeof(Base.create_expr_cache), String, String, Array{Base.Pair{Base.PkgId, UInt64}, 1}, Nothing})
precompile(Tuple{typeof(Base.compilecache), Base.PkgId, String})
precompile(Tuple{typeof(Base._tryrequire_from_serialized), Base.PkgId, UInt64, Nothing})
precompile(Tuple{typeof(Base._require_from_serialized), String})
precompile(Tuple{typeof(Base._require), Base.PkgId})
precompile(Tuple{typeof(Base.require), Base.PkgId})
precompile(Tuple{typeof(Gadfly.link_dataframes)})
precompile(Tuple{typeof(Base.require), Module, Symbol})
precompile(Tuple{typeof(Pixman_jll.__init__)})
precompile(Tuple{getfield(Base.Cartesian, Symbol("#@nloops")), LineNumberNode, Module, Any, Any, Any, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.Cartesian.exprresolve_arith), Expr})
precompile(Tuple{typeof(Base.Cartesian.exprresolve_conditional), Expr})
precompile(Tuple{typeof(Base.Cartesian.exprresolve), Expr})
precompile(Tuple{typeof(Base.Cartesian.inlineanonymous), Expr, Int64})
precompile(Tuple{typeof(Base.Cartesian._nloops), Int64, Symbol, Expr, Expr})
precompile(Tuple{typeof(Base.Cartesian.lreplace!), Expr, Base.Cartesian.LReplace{String}})
precompile(Tuple{typeof(Base.Cartesian.lreplace), Expr, Symbol, Int64})
precompile(Tuple{getfield(Base, Symbol("##s66#142")), Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{DataFrames.RowIndexMap, 1}}})
precompile(Tuple{typeof(Pkg.Artifacts.do_artifact_str), String, Base.Dict{String, Any}, String, Module})
precompile(Tuple{typeof(Pkg.Artifacts.unpack_platform), Base.Dict{String, Any}, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}, Base.Dict{String, Any}})
precompile(Tuple{Type{Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}}, Base.Generator{Array{Base.Dict{String, Any}, 1}, getfield(Pkg.Artifacts, Symbol("#21#22")){String, String}}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("#kw##ensure_artifact_installed")), NamedTuple{(:platform,), Tuple{Pkg.BinaryPlatforms.Linux}}, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##probe_platform_engines!#15")), Bool, typeof(Pkg.PlatformEngines.probe_platform_engines!)})
precompile(Tuple{typeof(Base.convert), Type{Nothing}, Base.SubString{String}})
precompile(Tuple{typeof(Base.convert), Type{Base.Pair{Nothing, String}}, Base.Pair{Base.SubString{String}, String}})
precompile(Tuple{typeof(Base.setindex!), Array{Base.Pair{Nothing, String}, 1}, Base.Pair{Base.SubString{String}, String}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.Pair{Nothing, String}, 1}, Base.Pair{Base.SubString{String}, String}, Base.Generator{Array{Array{Union{Nothing, Base.SubString{String}}, 1}, 1}, getfield(Pkg.PlatformEngines, Symbol("#88#90"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{Union{Nothing, Base.SubString{String}}, 1}, 1}, getfield(Pkg.PlatformEngines, Symbol("#88#90"))}})
precompile(Tuple{typeof(Pkg.PlatformEngines.list_tarball_symlinks), String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##unpack#91")), Bool, typeof(Pkg.PlatformEngines.unpack), String, String})
precompile(Tuple{getfield(Pkg.PlatformEngines, Symbol("##download_verify_unpack#96")), Nothing, Bool, Bool, Bool, typeof(Pkg.PlatformEngines.download_verify_unpack), String, String, String})
precompile(Tuple{typeof(Pkg.Artifacts.create_artifact), getfield(Pkg.Artifacts, Symbol("#39#40")){Bool, String, String}})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##download_artifact#38")), Bool, typeof(Pkg.Artifacts.download_artifact), Base.SHA1, String, String})
precompile(Tuple{getfield(Pkg.Artifacts, Symbol("##ensure_artifact_installed#42")), Pkg.BinaryPlatforms.Platform, Bool, typeof(Pkg.Artifacts.ensure_artifact_installed), String, Base.Dict{String, Any}, String})
precompile(Tuple{typeof(PCRE_jll.__init__)})
precompile(Tuple{typeof(Libiconv_jll.__init__)})
precompile(Tuple{typeof(Libffi_jll.__init__)})
precompile(Tuple{typeof(Zlib_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(XML2_jll, Symbol("#13#15")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(XML2_jll, Symbol("#14#16")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(XML2_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Gettext_jll, Symbol("#7#9")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Gettext_jll, Symbol("#8#10")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Gettext_jll.__init__)})
precompile(Tuple{typeof(Glib_jll.__init__)})
precompile(Tuple{typeof(Libuuid_jll.__init__)})
precompile(Tuple{typeof(Libgpg_error_jll.__init__)})
precompile(Tuple{typeof(Libgcrypt_jll.__init__)})
precompile(Tuple{typeof(Bzip2_jll.__init__)})
precompile(Tuple{typeof(FreeType2_jll.__init__)})
precompile(Tuple{typeof(Expat_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Fontconfig_jll, Symbol("#34#36")), Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Fontconfig_jll, Symbol("#35#37")), Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Fontconfig_jll.__init__)})
precompile(Tuple{typeof(XSLT_jll.__init__)})
precompile(Tuple{typeof(Xorg_libXdmcp_jll.__init__)})
precompile(Tuple{typeof(libpng_jll.__init__)})
precompile(Tuple{typeof(Xorg_libXau_jll.__init__)})
precompile(Tuple{typeof(Xorg_libpthread_stubs_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libxcb_jll, Symbol("#7#9")), Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libxcb_jll, Symbol("#8#10")), Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Xorg_libxcb_jll.__init__)})
precompile(Tuple{typeof(Xorg_xtrans_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libX11_jll, Symbol("#7#9")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libX11_jll, Symbol("#8#10")), Tuple{Array{String, 1}, Array{String, 1}}})
precompile(Tuple{typeof(Xorg_libX11_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libXrender_jll, Symbol("#7#9")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libXrender_jll, Symbol("#8#10")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Xorg_libXrender_jll.__init__)})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libXext_jll, Symbol("#7#9")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Base.foreach), getfield(Xorg_libXext_jll, Symbol("#8#10")), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Xorg_libXext_jll.__init__)})
precompile(Tuple{typeof(LZO_jll.__init__)})
precompile(Tuple{getfield(Base.Cartesian, Symbol("#@nexprs")), LineNumberNode, Module, Int64, Expr})
precompile(Tuple{typeof(Cairo_jll.__init__)})
precompile(Tuple{typeof(Graphite2_jll.__init__)})
precompile(Tuple{typeof(HarfBuzz_jll.__init__)})
precompile(Tuple{typeof(FriBidi_jll.__init__)})
precompile(Tuple{typeof(Pango_jll.__init__)})
precompile(Tuple{typeof(Cairo.__init__)})
precompile(Tuple{getfield(Compose, Symbol("#114#120"))})
precompile(Tuple{getfield(Compose, Symbol("#115#121"))})
precompile(Tuple{getfield(Compose, Symbol("#116#122"))})
precompile(Tuple{typeof(Compose.link_cairo)})
precompile(Tuple{typeof(Compose.docfunc), Symbol, String})
precompile(Tuple{getfield(DocStringExtensions, Symbol("#20#21")){typeof(DocStringExtensions.template_hook)}, LineNumberNode, Vararg{Any, N} where N})
precompile(Tuple{typeof(DocStringExtensions.template_hook), LineNumberNode, Module, String, Symbol})
precompile(Tuple{typeof(Base.Docs.docerror), Any})
precompile(Tuple{typeof(Base.Docs.docm), LineNumberNode, Module, Any, Any, Bool})
precompile(Tuple{typeof(Base.Docs.docm), LineNumberNode, Module, Any, Any})
precompile(Tuple{typeof(Base.Docs.objectdoc), Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Base.Docs.splitexpr), Expr})
precompile(Tuple{typeof(Base.Docs.bindingexpr), Any})
precompile(Tuple{typeof(Base.Docs.objectdoc), Any, Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Base.Docs.docstr), Any, Any})
precompile(Tuple{typeof(Base.Docs._docstr), Core.SimpleVector, Any})
precompile(Tuple{typeof(Base.:(==)), Module, WeakRef})
precompile(Tuple{typeof(Base.Docs.doc!), Module, Base.Docs.Binding, Base.Docs.DocStr, Any})
precompile(Tuple{typeof(Base.print_to_string), Expr})
precompile(Tuple{typeof(Base.string), Expr})
precompile(Tuple{typeof(Base.show_list), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Any, 1}, String, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.show_list), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Any, 1}, Symbol, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.show_enclosed_list), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Array{Any, 1}, String, String, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.show_generator), Base.GenericIOBuffer{Array{UInt8, 1}}, Expr, Int64})
precompile(Tuple{typeof(Base.show_list), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Any, 1}, Char, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.show_block), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Array{Any, 1}, Expr, Int64})
precompile(Tuple{typeof(Base.show_unquoted), Base.GenericIOBuffer{Array{UInt8, 1}}, Expr, Int64, Int64})
precompile(Tuple{typeof(Base.show_call), Base.GenericIOBuffer{Array{UInt8, 1}}, Symbol, Symbol, Array{Any, 1}, Int64})
precompile(Tuple{getfield(Printf, Symbol("#@sprintf")), LineNumberNode, Module, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.Printf.gen), String})
precompile(Tuple{typeof(Base.Printf._printf), String, Expr, String, Tuple{Expr, Expr}})
precompile(Tuple{typeof(Base.Printf._printf), String, Expr, String, Tuple{Symbol, Expr}})
precompile(Tuple{getfield(Base.Cartesian, Symbol("#@ncall")), LineNumberNode, Module, Int64, Any, Vararg{Any, N} where N})
precompile(Tuple{typeof(CSV.isvaliddelim), Char})
precompile(Tuple{typeof(Base._all), typeof(CSV.isvaliddelim), String, Base.Colon})
precompile(Tuple{typeof(CSV.checkvaliddelim), String})
precompile(Tuple{typeof(Mmap.mmap), String, Type{Array{UInt8, 1}}})
precompile(Tuple{typeof(CSV.getsource), String, Bool})
precompile(Tuple{typeof(CSV.skiptorow), CSV.ReversedBuf, Int64, Int64, UInt8, UInt8, UInt8, Int64, Int64})
precompile(Tuple{typeof(CSV.skiptorow), Array{UInt8, 1}, Int64, Int64, UInt8, UInt8, UInt8, Int64, Int64})
precompile(Tuple{typeof(CSV.checkcommentandemptyline), Array{UInt8, 1}, Int64, Int64, Nothing, Bool})
precompile(Tuple{typeof(CSV.detectheaderdatapos), Array{UInt8, 1}, Int64, Int64, UInt8, UInt8, UInt8, Nothing, Bool, Int64, Int64})
precompile(Tuple{typeof(CSV.detectdelimandguessrows), Array{UInt8, 1}, Int64, Int64, Int64, UInt8, UInt8, UInt8, UInt8, Nothing, Bool})
precompile(Tuple{Type{Parsers.Options{ignorerepeated, Q, debug, S, D, DF} where DF where D where S where debug where Q where ignorerepeated}, Base.Missing, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, Nothing, Nothing, Nothing, Bool, Bool, Bool, Bool, Bool})
precompile(Tuple{typeof(Base.sort!), Array{Base.Pair{String, UInt64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(CSV, Symbol("#21#29"))}})
precompile(Tuple{typeof(Base.sort!), Array{Base.Pair{String, UInt64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.By{getfield(CSV, Symbol("#21#29"))}, Array{Base.Pair{String, UInt64}, 1}})
precompile(Tuple{typeof(Random.make_seed)})
precompile(Tuple{Type{Random.MersenneTwister}, Nothing})
precompile(Tuple{typeof(Random.default_rng), Int64})
precompile(Tuple{typeof(Base.rand), Type{Bool}})
precompile(Tuple{getfield(CSV, Symbol("#22#30")){Array{UInt8, 1}, UInt8, Array{Type, 1}, Array{Union{Nothing, Array{String, 1}}, 1}, Int64}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(CSV, Symbol("#22#30")){Array{UInt8, 1}, UInt8, Array{Type, 1}, Array{Union{Nothing, Array{String, 1}}, 1}, Int64}}})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Any, Any}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}})
precompile(Tuple{typeof(Base._all), getfield(Base, Symbol("#240#242")), Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}, Base.Colon})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{Base.Pair{String, UInt64}, 1}, getfield(CSV, Symbol("#20#28"))}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Base.Generator{Array{String, 1}, typeof(Parsers.ptrlen)}, Int64, Int64})
precompile(Tuple{typeof(Base._collect), Array{String, 1}, Base.Generator{Array{String, 1}, typeof(Parsers.ptrlen)}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Parsers, Symbol("#1#2"))}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.By{getfield(Parsers, Symbol("#1#2"))}, Array{Tuple{Ptr{UInt8}, Int64}, 1}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.ReverseOrdering{Base.Order.By{getfield(Parsers, Symbol("#1#2"))}}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Ptr{UInt8}, Int64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.ReverseOrdering{Base.Order.By{getfield(Parsers, Symbol("#1#2"))}}, Array{Tuple{Ptr{UInt8}, Int64}, 1}})
precompile(Tuple{typeof(Parsers.prepare), Array{String, 1}})
precompile(Tuple{Type{Parsers.Options{ignorerepeated, Q, debug, S, D, DF} where DF where D where S where debug where Q where ignorerepeated}, Array{String, 1}, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, Nothing, Nothing, Nothing, Bool, Bool, Bool, Bool, Bool})
precompile(Tuple{Type{Parsers.Options{ignorerepeated, Q, debug, S, D, DF} where DF where D where S where debug where Q where ignorerepeated}, Base.Missing, UInt8, UInt8, UInt8, UInt8, UInt8, String, UInt8, Nothing, Nothing, Nothing, Bool, Bool, Bool, Bool, Bool})
precompile(Tuple{Type{Parsers.Options{ignorerepeated, Q, debug, S, D, DF} where DF where D where S where debug where Q where ignorerepeated}, Array{String, 1}, UInt8, UInt8, UInt8, UInt8, UInt8, String, UInt8, Nothing, Nothing, Nothing, Bool, Bool, Bool, Bool, Bool})
precompile(Tuple{typeof(CSV.detectdelimandguessrows), Array{UInt8, 1}, Int64, Int64, Int64, UInt8, UInt8, UInt8, String, Nothing, Bool})
precompile(Tuple{typeof(CSV.file), String, Int64, Bool, Int64, Nothing, Int64, Int64, Bool, Nothing, Bool, Bool, Array{String, 1}, String, String, Bool, Char, Nothing, Nothing, Char, Nothing, UInt8, Nothing, Nothing, Nothing, Nothing, Base.Dict{Int8, Int8}, Bool, Float64, Bool, Bool, Nothing, Bool, Bool, Nothing})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:header, :normalizenames, :delim, :quotechar, :escapechar, :categorical, :strict), Tuple{Int64, Bool, String, Char, Char, Bool, Bool}}, Type{CSV.File{threaded} where threaded}, String})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{AbstractArray{T, 1} where T, 1}, Base.IndexLinear, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("##make_unique!#1")), Bool, typeof(DataFrames.make_unique!), Array{Symbol, 1}, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{AbstractArray{T, 1} where T, 1}, getfield(DataFrames, Symbol("#100#103"))}})
precompile(Tuple{getfield(DataFrames, Symbol("#DataFrame#99#102")), Bool, Type{DataFrames.DataFrame}, Array{AbstractArray{T, 1} where T, 1}, DataFrames.Index})
precompile(Tuple{getfield(DataFrames, Symbol("##DataFrame#114")), Bool, Bool, Type{DataFrames.DataFrame}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}, Array{Symbol, 1}})
precompile(Tuple{getfield(CSV, Symbol("#kw##read")), NamedTuple{(:header, :normalizenames, :delim, :quotechar, :escapechar, :categorical, :strict), Tuple{Int64, Bool, String, Char, Char, Bool, Bool}}, typeof(CSV.read), String})
precompile(Tuple{typeof(Mmap.grow!), Base.IOStream, Int64, Int64})
precompile(Tuple{getfield(Mmap, Symbol("##mmap#1")), Bool, Bool, typeof(Mmap.mmap), Base.IOStream, Type{Array{UInt8, 1}}, Tuple{Int64}, Int64})
precompile(Tuple{getfield(Base, Symbol("##open#271")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), getfield(Mmap, Symbol("#7#8")){Array{UInt8, 1}, Bool, Bool, Tuple{Int64}, Int64}, String, Vararg{String, N} where N})
precompile(Tuple{Type{Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}}, Array{String, 1}, Base.Missing, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, Nothing, Nothing, Nothing, Bool, Bool})
precompile(Tuple{typeof(Base.collect_to!), Array{Symbol, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(CSV, Symbol("#8#11"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(CSV, Symbol("#8#11"))}})
precompile(Tuple{typeof(CSV.unescape), CSV.PointerString, UInt8})
precompile(Tuple{typeof(CSV.columnname), Array{UInt8, 1}, Int64, Int64, Int16, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64})
precompile(Tuple{typeof(Base.map), getfield(CSV, Symbol("#4#5")), Base.SubString{String}})
precompile(Tuple{typeof(CSV.normalizename), String})
precompile(Tuple{typeof(Base.collect_to!), Array{Symbol, 1}, Base.Generator{Array{String, 1}, getfield(CSV, Symbol("#9#12")){Bool}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{String, 1}, getfield(CSV, Symbol("#9#12")){Bool}}})
precompile(Tuple{typeof(CSV.makeunique), Array{Symbol, 1}})
precompile(Tuple{typeof(CSV.detectcolumnnames), Array{UInt8, 1}, Int64, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Bool})
precompile(Tuple{getfield(Parsers, Symbol("##s52#15")), Any, Any, Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Dates.character_codes), Type{Dates.DateFormat{Symbol("yyyy-mm-dd"), Tuple{Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Parsers, Symbol("#16#17")), Tuple{DataType, DataType, DataType}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{Type{Tuple}, Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Tuple{DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Type, 1}, getfield(Parsers, Symbol("#19#20"))}})
precompile(Tuple{getfield(Parsers, Symbol("##s52#18")), Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Dates._directives), Type{Dates.DateFormat{Symbol("yyyy-mm-dd"), Tuple{Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}}}}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Type, 1}, getfield(Parsers, Symbol("#19#20"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Array{Type, 1}, getfield(Parsers, Symbol("#19#20"))}, Int64})
precompile(Tuple{typeof(Dates.character_codes), Type{Dates.DateFormat{Symbol("yyyy-mm-dd\THH:MM:SS.s"), Tuple{Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x73000000)}}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Parsers, Symbol("#16#17")), Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{Type{Tuple}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Any, 1}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{typeof(Dates._directives), Type{Dates.DateFormat{Symbol("yyyy-mm-dd\THH:MM:SS.s"), Tuple{Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x6d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x64000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x73000000)}}}}})
precompile(Tuple{typeof(Dates.character_codes), Type{Dates.DateFormat{Symbol("HH:MM:SS.s"), Tuple{Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x73000000)}}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Parsers, Symbol("#16#17")), Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{Type{Tuple}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Any, 1}, Base.Generator{Tuple{DataType, DataType, DataType, DataType, DataType, DataType, DataType}, getfield(Parsers, Symbol("#16#17"))}, Int64, Int64})
precompile(Tuple{typeof(Dates._directives), Type{Dates.DateFormat{Symbol("HH:MM:SS.s"), Tuple{Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x73000000)}}}}})
precompile(Tuple{typeof(Parsers.codes), Int16})
precompile(Tuple{typeof(CSV.fatalerror), Array{UInt8, 1}, Int64, Int64, Int16, Int64, Int64})
precompile(Tuple{typeof(CSV.reallocatetape), Int64, Int64, Int64})
precompile(Tuple{typeof(CSV.notenoughcolumns), Int64, Int64, Int64})
precompile(Tuple{typeof(CSV.toomanycolumns), Int64, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{String, UInt64}, CSV.PointerString})
precompile(Tuple{typeof(Base.power_by_squaring), Int64, Int64})
precompile(Tuple{typeof(Parsers.pow10), Type{Float64}, Int64})
precompile(Tuple{typeof(Parsers.roundQuotient), Base.GMP.BigInt, Base.GMP.BigInt})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Int64, Int64})
precompile(Tuple{typeof(Parsers.BigInt!), Base.GMP.BigInt, Int128})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Int128, Int64})
precompile(Tuple{typeof(Parsers.pow10), Type{Float64}, Int128})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Int128, Int128})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Base.GMP.BigInt, Int64})
precompile(Tuple{typeof(Parsers.pow10), Type{Float64}, Base.GMP.BigInt})
precompile(Tuple{typeof(Parsers.scale), Type{Float64}, Base.GMP.BigInt, Base.GMP.BigInt})
precompile(Tuple{typeof(Parsers._typeparser), Type{Float64}, Array{UInt8, 1}, Int64, Int64, UInt8, Int16, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Type{Base.GMP.BigInt}})
precompile(Tuple{typeof(Parsers._typeparser), Type{Float64}, Array{UInt8, 1}, Int64, Int64, UInt8, Int16, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Type{Int128}})
precompile(Tuple{typeof(CSV.detect), Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Base.Dict{Int8, Int8}, Float64, Array{Base.Dict{String, UInt64}, 1}, Array{UInt64, 1}, Array{Int64, 1}, Bool, Array{Int8, 1}, Bool, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Float64}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Dates.Date}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Dates.DateTime}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Dates.Time}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsevalue!), Type{Bool}, Int8, Array{UInt64, 1}, Array{UInt8, 1}, Int64, Int64, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Int64, Int64, Array{Int8, 1}, Array{Array{UInt64, 1}, 1}})
precompile(Tuple{typeof(CSV.parsetape), Base.Val{false}, Bool, Int64, Base.Dict{Int8, Int8}, Array{Array{UInt64, 1}, 1}, Array{Array{UInt64, 1}, 1}, Array{UInt8, 1}, Int64, Int64, Int64, Nothing, Array{Int64, 1}, Float64, Array{Base.Dict{String, UInt64}, 1}, Array{UInt64, 1}, Int64, Array{Int8, 1}, Array{Int64, 1}, Bool, Parsers.Options{false, true, false, Base.Missing, UInt8, Nothing}, Bool})
precompile(Tuple{typeof(Base.nonmissingtype), Type{CSV.PooledString}})
precompile(Tuple{typeof(CSV.sentinelvalue), Type{CSV.PooledString}})
precompile(Tuple{Type{CSV.Column{String, CSV.PooledString}}, Array{UInt64, 1}, Int64, UInt8, Bool, Array{String, 1}, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(Base.nonmissingtype), Type{Union{Base.Missing, CSV.PooledString}}})
precompile(Tuple{Type{CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}}, Array{UInt64, 1}, Int64, UInt8, Bool, Array{String, 1}, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(CSV._eltype), Type{Union{Base.Missing, Float64}}})
precompile(Tuple{Type{CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}}, Array{UInt64, 1}, Int64, UInt8, Bool, Nothing, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(CSV._eltype), Type{Dates.Date}})
precompile(Tuple{Type{CSV.Column{Dates.Date, Dates.Date}}, Array{UInt64, 1}, Int64, UInt8, Bool, Nothing, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(CSV._eltype), Type{Int64}})
precompile(Tuple{typeof(CSV.uint64), Int64})
precompile(Tuple{Type{CSV.Column{Int64, Int64}}, Array{UInt64, 1}, Int64, UInt8, Bool, Nothing, Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(CSV._eltype), Type{Union{Base.Missing, Int64}}})
precompile(Tuple{Type{CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}}, Array{UInt64, 1}, Int64, UInt8, Bool, Nothing, Array{UInt8, 1}, UInt64})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{String, CSV.PooledString}}})
precompile(Tuple{Type{Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}}})
precompile(Tuple{typeof(Base.empty), Base.Dict{Any, Any}, Type{Symbol}, Type{CSV.Column{String, CSV.PooledString}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, CSV.Column{String, CSV.PooledString}, Symbol})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}, Tuple{Int64, Int64}})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}}})
precompile(Tuple{Type{Base.Dict{Symbol, CSV.Column{T, P} where P where T}}})
precompile(Tuple{typeof(Base.empty), Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}, Type{Symbol}, Type{CSV.Column{T, P} where P where T}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{String, CSV.PooledString}, Symbol})
precompile(Tuple{typeof(Base.merge!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, Base.Dict{Symbol, CSV.Column{String, CSV.PooledString}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Symbol})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Symbol, 1}, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}}}, getfield(CSV, Symbol("#23#31"))}, Tuple{Int64, Int64}})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Symbol})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Dates.Date, Dates.Date}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Dates.Date, Dates.Date}, Symbol})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Int64, Int64}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Int64, Int64}, Symbol})
precompile(Tuple{getfield(CSV, Symbol("#23#31")), Tuple{Symbol, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, CSV.Column{T, P} where P where T}, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Symbol})
precompile(Tuple{Type{Base.Dict{Symbol, AbstractArray{T, 1} where T}}, Base.Dict{Symbol, CSV.Column{T, P} where P where T}})
precompile(Tuple{Type{CSV.File{false}}, String, Array{Symbol, 1}, Array{Type, 1}, Int64, Int64, Array{Union{CSV.Column{T, P} where P where T, CSV.Column2{T, P} where P where T}, 1}, Base.Dict{Symbol, CSV.Column{T, P} where P where T}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{String, CSV.PooledString}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Int64, Int64}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractArray{T, 1} where T}, CSV.Column{Dates.Date, Dates.Date}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{String, CSV.PooledString}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Dates.Date, Dates.Date}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Int64, Int64}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Int64})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{String, CSV.PooledString}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{AbstractArray{T, 1} where T, 1}, getfield(DataFrames, Symbol("#100#103"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Array{AbstractArray{T, 1} where T, 1}, getfield(DataFrames, Symbol("#100#103"))}, Int64})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Dates.Date, Dates.Date}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Int64, Int64}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}})
precompile(Tuple{typeof(DataFrames.nrow), DataFrames.DataFrame})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Int64, Symbol}, 1}, Base.Generator{Base.KeySet{Symbol, Base.Dict{Symbol, Int64}}, getfield(DataFrames, Symbol("#15#20")){String}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.KeySet{Symbol, Base.Dict{Symbol, Int64}}, getfield(DataFrames, Symbol("#15#20")){String}}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataFrames, Symbol("#16#21")){Array{Tuple{Int64, Symbol}, 1}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(DataFrames, Symbol("#16#21")){Array{Tuple{Int64, Symbol}, 1}}}})
precompile(Tuple{typeof(Base.grow_to!), Array{Symbol, 1}, Base.Generator{Base.Iterators.Filter{getfield(DataFrames, Symbol("#19#24")){Int64}, Array{Tuple{Int64, Symbol}, 1}}, getfield(DataFrames, Symbol("#18#23"))}, Int64})
precompile(Tuple{typeof(Base.grow_to!), Array{Symbol, 1}, Base.Generator{Base.Iterators.Filter{getfield(DataFrames, Symbol("#19#24")){Int64}, Array{Tuple{Int64, Symbol}, 1}}, getfield(DataFrames, Symbol("#18#23"))}})
precompile(Tuple{typeof(DataFrames.fuzzymatch), Base.Dict{Symbol, Int64}, Symbol})
precompile(Tuple{getfield(Main, Symbol("#3#4")), DataFrames.DataFrameRow{DataFrames.DataFrame, DataFrames.Index}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#3#4"))}}, Tuple{Base.OneTo{Int64}, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#3#4"))}}})
precompile(Tuple{typeof(Base.filter), getfield(Main, Symbol("#3#4")), DataFrames.DataFrame})
precompile(Tuple{typeof(Base.length), CSV.Column{String, CSV.PooledString}})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrameRow{DataFrames.DataFrame, DataFrames.Index}, Symbol})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{String, CSV.PooledString}, Tuple{Int64}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{String, CSV.PooledString}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{String, CSV.PooledString}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{String, CSV.PooledString}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, String}, Union{Base.Missing, CSV.PooledString}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Tuple{Int64}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, Float64}, Union{Base.Missing, Float64}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Dates.Date, Dates.Date}, Tuple{Int64}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Dates.Date, Dates.Date}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Dates.Date, Dates.Date}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Dates.Date, Dates.Date}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Int64, Int64}, Tuple{Int64}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Int64, Int64}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Int64, Int64}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Int64, Int64}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Union{Base.Missing, Int64}, Union{Base.Missing, Int64}}, Array{Int64, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{String, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Union{Base.Missing, String}, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Union{Base.Missing, Float64}, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Dates.Date, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Int64, 1}})
precompile(Tuple{getfield(DataFrames, Symbol("#100#103")), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{getfield(Main, Symbol("#5#6")), DataFrames.DataFrameRow{DataFrames.DataFrame, DataFrames.Index}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#5#6"))}}, Tuple{Base.OneTo{Int64}, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#5#6"))}}})
precompile(Tuple{typeof(Base.filter), getfield(Main, Symbol("#5#6")), DataFrames.DataFrame})
precompile(Tuple{Type{Measures.Length{U, T} where T where U}, Symbol, Float64})
precompile(Tuple{typeof(Base.:(*)), Int64, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Measures.Length{:mm, Float64}}, Float64})
precompile(Tuple{Type{NamedTuple{(:point_size, :line_width, :major_label_font_size, :minor_label_font_size, :point_label_font_size, :key_title_font_size, :key_label_font_size), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Gadfly.current_theme)})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:point_size, :line_width, :major_label_font_size, :minor_label_font_size, :point_label_font_size, :key_title_font_size, :key_label_font_size), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Gadfly.Theme}, Gadfly.Theme})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##style")), NamedTuple{(:point_size, :line_width, :major_label_font_size, :minor_label_font_size, :point_label_font_size, :key_title_font_size, :key_label_font_size), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, typeof(Gadfly.style)})
precompile(Tuple{getfield(Gadfly, Symbol("##Theme#58")), ColorTypes.LCHab{Float32}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Function, Function, Array{Function, 1}, Measures.Length{:mm, Float64}, Array{Symbol, 1}, Array{Float64, 1}, Nothing, Nothing, Float64, Nothing, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Int64, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, typeof(Gadfly.default_stroke_color), Measures.Length{:mm, Float64}, typeof(Gadfly.default_discrete_highlight_color), typeof(Gadfly.default_continuous_highlight_color), typeof(Gadfly.default_lowlight_color), typeof(Gadfly.default_middle_color), Measures.Length{:mm, Float64}, Symbol, Symbol, typeof(Gadfly.Shape.square), Nothing, Nothing, Symbol, Nothing, Measures.Length{:mm, Float64}, Int64, Float64, Float64, Float64, Measures.Length{:mm, Float64}, Int64, Gadfly.Scale.DiscreteColorScale, Gadfly.Scale.ContinuousColorScale, Type{Gadfly.Theme}, Gadfly.Theme})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, typeof(Base.:(!)), Symbol})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.min), Base.IndexLinear, Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.minimum), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:xmin, :ymin), Tuple{Int64, Int64}}, Type{Gadfly.Coord.Cartesian}})
precompile(Tuple{typeof(Base.vect), Int64, Vararg{Any, N} where N})
precompile(Tuple{getfield(Gadfly.Geom, Symbol("#kw##smooth")), NamedTuple{(:method, :smoothing), Tuple{Symbol, Float64}}, typeof(Gadfly.Geom.smooth)})
precompile(Tuple{typeof(Gadfly.cleanmapping), Base.Dict{Symbol, Symbol}})
precompile(Tuple{Type{Gadfly.Plot}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Col.GroupedColumn, 1}, getfield(Gadfly, Symbol("#116#118")){Base.Set{Symbol}}}})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Int64}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Int64}, Int64, Symbol})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(DataFrames, Symbol("#100#103"))}})
precompile(Tuple{getfield(DataFrames, Symbol("#DataFrame#99#102")), Bool, Type{DataFrames.DataFrame}, Array{Any, 1}, DataFrames.Index})
precompile(Tuple{typeof(Base.throw_boundserror), DataFrames.DataFrameColumns{DataFrames.DataFrame, AbstractArray{T, 1} where T}, Tuple{Int64}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.eltype), Tuple{Base.Broadcast.Extruded{DataFrames.DataFrameColumns{DataFrames.DataFrame, AbstractArray{T, 1} where T}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Gadfly.meltdata), DataFrames.DataFrame, Array{Gadfly.Col.GroupedColumn, 1}})
precompile(Tuple{typeof(Gadfly._evalmapping!), Base.Dict{Symbol, Any}, DataFrames.DataFrame, Gadfly.Data})
precompile(Tuple{typeof(Gadfly._evalmapping!), Base.Dict{Symbol, Any}, Gadfly.MeltedData{DataFrames.DataFrame}, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.evalmapping!), Base.Dict{Symbol, Any}, DataFrames.DataFrame, Gadfly.Data})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Plot, Symbol, DataFrames.DataFrame})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Gadfly.plot), DataFrames.DataFrame, Base.Dict{Symbol, Symbol}, Gadfly.Coord.Cartesian, Gadfly.Geom.LineGeometry, Gadfly.Theme})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##plot")), NamedTuple{(:x, :y, :color), Tuple{Symbol, Symbol, Symbol}}, typeof(Gadfly.plot), DataFrames.DataFrame, Gadfly.Coord.Cartesian, Gadfly.Geom.LineGeometry, Gadfly.Theme})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Base.Colon, Symbol})
precompile(Tuple{typeof(Gadfly.evalmapping), DataFrames.DataFrame, Symbol})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, AbstractString}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, AbstractString}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractString}, String, Symbol})
precompile(Tuple{typeof(Base.convert), Type{Any}, DataFrames.DataFrame})
precompile(Tuple{typeof(Base.eltype), Type{C}} where C<:(ColorTypes.Colorant{T, N} where N where T))
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Colorant{T, N}}} where N where T)
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.ColorAlpha{ColorTypes.RGB{Float64}, Float64, 4}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGBA{Float64}}})
precompile(Tuple{typeof(ColorTypes.basetype), Type{T} where T})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.RGBA{Float64}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.ColorAlpha{ColorTypes.RGB{Float64}, Float64, 4}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.RGBA{Float64}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.ColorAlpha{ColorTypes.RGB{T}, T, 4} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.RGBA{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Compose.PDF), String, Vararg{Any, N} where N})
precompile(Tuple{getfield(Compose, Symbol("##PDF#135")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Compose.PDF), String, Vararg{Any, N} where N})
precompile(Tuple{typeof(Cairo.write_to_stream_callback), Base.IOStream, Ptr{UInt8}, UInt32})
precompile(Tuple{typeof(Base.:(==)), WeakRef, Nothing})
precompile(Tuple{Type{Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}}})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:width, :height, :owns_surface, :emit_on_finish, :ppmm, :ownedfile, :filename), Tuple{Float64, Float64, Bool, Bool, Float64, Bool, String}}, Type{Compose.Image{Compose.PDFBackend}}, Cairo.CairoSurfaceIOStream{UInt32}, Cairo.CairoContext, Base.IOStream})
precompile(Tuple{getfield(Compose, Symbol("##_#131")), Int64, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:ownedfile, :filename), Tuple{Bool, String}}}, Type{Compose.Image{Compose.PDFBackend}}, Base.IOStream, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Bool})
precompile(Tuple{Type{Compose.Image{Compose.PDFBackend}}, String, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AbstractRGB{FixedPointNumbers.Normed{UInt8, 8}}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}}})
precompile(Tuple{typeof(Base.convert), Type{ColorTypes.RGBA{Float64}}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{getfield(Compose, Symbol("##_#130")), Float64, Float64, ColorTypes.RGBA{Float64}, ColorTypes.RGBA{Float64}, Array{Any, 1}, Compose.LineCapButt, Compose.LineJoinMiter, Bool, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Nothing, Bool, Array{Compose.ImagePropertyState, 1}, Array{Compose.ImagePropertyFrame, 1}, Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Bool, Bool, String, Bool, Bool, Float64, Nothing, Nothing, Type{Compose.Image{Compose.PDFBackend}}, Cairo.CairoSurfaceIOStream{UInt32}, Cairo.CairoContext, Base.IOStream})
precompile(Tuple{typeof(Base.allocatedinline), Type{Gadfly.StatisticElement}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Gadfly.Data, 1}}})
precompile(Tuple{typeof(Base.allocatedinline), Type{Gadfly.Data}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Gadfly.Aesthetics, 1}}})
precompile(Tuple{typeof(Base.allocatedinline), Type{Gadfly.Aesthetics}})
precompile(Tuple{Type{StaticArrays.Size{S} where S}, Int64})
precompile(Tuple{Type{StaticArrays.Size{(1,)}}})
precompile(Tuple{getfield(StaticArrays, Symbol("##s19#12")), Any, Any, Any, Any})
precompile(Tuple{typeof(StaticArrays.tuple_length), Type{Tuple{1}}})
precompile(Tuple{typeof(StaticArrays.tuple_prod), Type{Tuple{1}}})
precompile(Tuple{getfield(StaticArrays, Symbol("##s19#6")), Any, Any, Any, Any, Any, Type{T} where T, Type{T} where T, Type{T} where T, Any})
precompile(Tuple{typeof(Base._all), getfield(StaticArrays, Symbol("#7#8")), Core.SimpleVector, Base.Colon})
precompile(Tuple{typeof(StaticArrays.tuple_minimum), Type{Tuple{1}}})
precompile(Tuple{getfield(StaticArrays, Symbol("##s19#2")), Any, Any, Any, Any, Any})
precompile(Tuple{getfield(StaticArrays, Symbol("#3#4")), Int64})
precompile(Tuple{typeof(Base.ntuple), getfield(StaticArrays, Symbol("#3#4")), Base.Val{1}})
precompile(Tuple{Type{StaticArrays.Size{S} where S}, Type{Tuple{1}}})
precompile(Tuple{typeof(Base.prod), StaticArrays.Size{(1,)}})
precompile(Tuple{typeof(StaticArrays._axes), StaticArrays.Size{(1,)}})
precompile(Tuple{typeof(Base.iterate), StaticArrays.SOneTo{1}})
precompile(Tuple{typeof(Base.eltype), Type})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AbstractRGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AlphaColor{ColorTypes.RGB{T}, T, 4} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.ARGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.ARGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.AlphaColor{ColorTypes.RGB{T}, T, 4} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.ARGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}})
precompile(Tuple{Type{Gadfly.Coord.Cartesian}, Array{Symbol, 1}, Array{Symbol, 1}, Nothing, Nothing, Nothing, Nothing, Bool, Bool, Bool, Nothing, Bool})
precompile(Tuple{Type{Gadfly.Coord.Cartesian}})
precompile(Tuple{typeof(Base.mapreduce_impl), getfield(Gadfly, Symbol("#85#97")){Base.Set{Symbol}}, typeof(Base.:(|)), Array{Symbol, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), getfield(Gadfly, Symbol("#85#97")){Base.Set{Symbol}}, typeof(Base.:(|)), Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{Type{Base.Dict{Symbol, Gadfly.ScaleElement}}})
precompile(Tuple{typeof(Base.copyto!), Array{Gadfly.StatisticElement, 1}, Int64, Array{Gadfly.StatisticElement, 1}, Int64, Int64})
precompile(Tuple{typeof(Base._collect), Array{Gadfly.StatisticElement, 1}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, getfield(Base, Symbol("#3#4")){getfield(Gadfly, Symbol("#87#100")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#89#102")){Gadfly.Plot}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#90#103")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}})
precompile(Tuple{Type{Base.Dict{Gadfly.StatisticElement, Nothing}}})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.XTicks})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Gadfly.StatisticElement, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.StatisticElement, Nothing}, Gadfly.Stat.Identity})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Gadfly.StatisticElement, Nothing}, Nothing, Gadfly.Stat.Identity})
precompile(Tuple{getfield(Gadfly, Symbol("#92#105")){Gadfly.Plot, Array{Gadfly.Data, 1}}, Array{Symbol, 1}, String})
precompile(Tuple{Type{Base.Dict{Gadfly.ScaleElement, Int64}}})
precompile(Tuple{typeof(Base.vcat), Array{Gadfly.Data, 1}, Array{Gadfly.Data, 1}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, Gadfly.ScaleElement}, Symbol})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, Gadfly.ScaleElement}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, Gadfly.ScaleElement}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Scale.DiscreteColorScale, Symbol})
precompile(Tuple{typeof(Base.copyto!), Array{Gadfly.StatisticElement, 1}, Base.Set{Gadfly.StatisticElement}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Base.Missing, Base.Generator{Array{Gadfly.Aesthetics, 1}, getfield(Gadfly, Symbol("#93#106")){Symbol}}, Int64})
precompile(Tuple{typeof(Base.convert), Type{Base.Missing}, Bool})
precompile(Tuple{typeof(Base.setindex!), Array{Base.Missing, 1}, Bool, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.Missing, 1}, Bool, Base.Generator{Array{Gadfly.Aesthetics, 1}, getfield(Gadfly, Symbol("#93#106")){Symbol}}, Int64})
precompile(Tuple{getfield(Gadfly, Symbol("#93#106")){Symbol}, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Aesthetics, 1}, getfield(Gadfly, Symbol("#93#106")){Symbol}}})
precompile(Tuple{typeof(Base.map), getfield(DataStructures, Symbol("#82#83")){Int64}, Tuple{DataStructures.SparseIntSet, DataStructures.SparseIntSet}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.StatisticElement, Nothing}, Gadfly.Stat.TickStatistic})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Gadfly.StatisticElement, Nothing}, Nothing, Gadfly.Stat.TickStatistic})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.YTicks})
precompile(Tuple{typeof(Gadfly.scale_exists), Symbol, Symbol})
precompile(Tuple{typeof(Gadfly.get_scale), Symbol, Symbol, Gadfly.Theme})
precompile(Tuple{typeof(Base.mapreduce_impl), getfield(Gadfly, Symbol("#86#98")){Base.Set{Symbol}}, typeof(Base.:(|)), Array{Symbol, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), getfield(Gadfly, Symbol("#86#98")){Base.Set{Symbol}}, typeof(Base.:(|)), Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#82#94"))}, Int64})
precompile(Tuple{typeof(Gadfly.render_prepare), Gadfly.Plot})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Plot})
precompile(Tuple{typeof(Measures.width), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Measures.height), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.root_box), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{Type{Compose.Context}, Compose.Context})
precompile(Tuple{typeof(Compose.excise_vector_children!), Compose.Context})
precompile(Tuple{Type{Base.Dict{UInt64, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}}})
precompile(Tuple{Type{Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{UInt64, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{UInt64, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}, UInt64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt64, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}, UInt64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}, UInt64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, UInt64})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{UInt64, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}}, UInt64})
precompile(Tuple{typeof(Compose.optimize_batching), Compose.Context})
precompile(Tuple{typeof(Base.convert), Type{Compose.Transform}, Compose.Mirror})
precompile(Tuple{typeof(Base.convert), Type{Compose.Transform}, Compose.Shear})
precompile(Tuple{Type{Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Compose.isscalar), Tuple{Base.Broadcast.Extruded{Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{Type{Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Base.Generator{Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, getfield(Compose, Symbol("#137#139"))}})
precompile(Tuple{Type{Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Base.Generator{Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, getfield(Compose, Symbol("#138#140"))}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Type{T} where T})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base._delete!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64})
precompile(Tuple{Type{Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}}, Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}})
precompile(Tuple{typeof(Compose.save_property_state), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Compose.push_property_frame), Compose.Image{Compose.PDFBackend}, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}})
precompile(Tuple{typeof(Compose.canbatch), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Int64, Int64, Compose.Container}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Int64, Int64, Compose.Container}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.ForwardOrdering, Array{Tuple{Int64, Int64, Compose.Container}, 1}})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, Nothing})
precompile(Tuple{typeof(Compose.restore_property_state), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.pop_property_frame), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.Context, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.finish), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Context})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Gadfly.Plot})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Layer, Symbol, DataFrames.DataFrame})
precompile(Tuple{typeof(Gadfly.element_coordinate_type), Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Base.vect), Gadfly.Stat.SmoothStatistic})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Gadfly.StatisticElement, 1}, Base.IndexLinear, Array{Gadfly.Stat.SmoothStatistic, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Gadfly.Stat.SmoothStatistic, 1}, Int64})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Base.mapreduce_impl), getfield(Gadfly, Symbol("#83#95")){Array{Symbol, 1}}, typeof(Base.:(|)), Array{Symbol, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), getfield(Gadfly, Symbol("#83#95")){Array{Symbol, 1}}, typeof(Base.:(|)), Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.mapreduce_impl), getfield(Gadfly, Symbol("#84#96")){Array{Symbol, 1}}, typeof(Base.:(|)), Array{Symbol, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), getfield(Gadfly, Symbol("#84#96")){Array{Symbol, 1}}, typeof(Base.:(|)), Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{typeof(Gadfly.input_aesthetics), Gadfly.Stat.SmoothStatistic})
precompile(Tuple{typeof(Base._similar_for), Array{Gadfly.StatisticElement, 1}, Type{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64})
precompile(Tuple{typeof(Base._array_for), Type{Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}, Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, 1}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, getfield(Base, Symbol("#3#4")){getfield(Gadfly, Symbol("#87#100")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}}, Int64, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, getfield(Base, Symbol("#3#4")){getfield(Gadfly, Symbol("#87#100")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base._array_for), Type{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}}, Array{Gadfly.Layer, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#90#103")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#90#103")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64})
precompile(Tuple{typeof(Base.Iterators.flatten), Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Tuple{}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Int64})
precompile(Tuple{typeof(Gadfly.default_scales), Gadfly.Geom.LineGeometry, Gadfly.Theme})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Tuple{Int64, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Int64})
precompile(Tuple{typeof(Gadfly.default_scales), Gadfly.Stat.SmoothStatistic, Gadfly.Theme})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Tuple{Int64, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Int64}})
precompile(Tuple{typeof(Gadfly.classify_data), Array{String, 1}})
precompile(Tuple{typeof(Base.methods), Any, Any})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Scale.DiscreteColorScale})
precompile(Tuple{typeof(Gadfly.classify_data), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:numerical}, Base.Val{:y}, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Scale.ContinuousScale, Symbol})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:numerical}, Base.Val{:x}, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:categorical}, Base.Val{:group}, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Scale.DiscreteScale})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Scale.DiscreteScale, Symbol})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:categorical}, Base.Val{:linestyle}, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.PanelBackground})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.QuestionMark})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.HelpScreen})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.CrossHair})
precompile(Tuple{getfield(Gadfly.Stat, Symbol("#kw##xticks")), NamedTuple{(:ticks,), Tuple{Symbol}}, typeof(Gadfly.Stat.xticks)})
precompile(Tuple{getfield(Gadfly.Stat, Symbol("#kw##yticks")), NamedTuple{(:ticks,), Tuple{Symbol}}, typeof(Gadfly.Stat.yticks)})
precompile(Tuple{getfield(Gadfly, Symbol("#91#104")){Base.Set{Symbol}, Base.Set{Symbol}}, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.iterate), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Gadfly.Scale.apply_scales), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.Scale.apply_scales), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Gadfly.Data})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Gadfly.ScaleElement, Int64}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteScale})
precompile(Tuple{typeof(Base.get!), getfield(Base, Symbol("#243#244")){Int64}, Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteScale})
precompile(Tuple{typeof(Base.get!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteScale, Int64})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.DiscreteScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Base.get!), getfield(Base, Symbol("#243#244")){Int64}, Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Base.get!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.ContinuousScale, Int64})
precompile(Tuple{typeof(Gadfly.Scale.make_labeler), Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.ContinuousScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.isconcrete), Int64})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale_typed!), Array{Int64, 1}, Array{Union{Base.Missing, Int64}, 1}, Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteColorScale})
precompile(Tuple{typeof(Base.get!), getfield(Base, Symbol("#243#244")){Int64}, Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteColorScale})
precompile(Tuple{typeof(Base.get!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteColorScale, Int64})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.DiscreteColorScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(OrderedCollections.rehash!), OrderedCollections.OrderedDict{Any, Nothing}, Int64})
precompile(Tuple{typeof(OrderedCollections.ht_keyindex2), OrderedCollections.OrderedDict{Any, Nothing}, String})
precompile(Tuple{typeof(OrderedCollections._setindex!), OrderedCollections.OrderedDict{Any, Nothing}, Nothing, String, Int64})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{Any, Nothing}, Nothing, String})
precompile(Tuple{typeof(Base.push!), OrderedCollections.OrderedSet{Any}, String})
precompile(Tuple{typeof(OrderedCollections.hashindex), String, Int64})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedSet{Any}})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedSet{Any}, Int64})
precompile(Tuple{typeof(Base.allocatedinline), Type{ColorTypes.LCHab{Float32}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Color{Float64, 3}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LCHab{Float64}}})
precompile(Tuple{typeof(ColorTypes.issupported), Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Lab{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.XYZ{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Color{T, 3} where T<:AbstractFloat}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LCHab{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AbstractRGB{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB{Float64}}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.LCHab{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(ColorTypes.issupported), Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, Type{Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LMS{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.LMS{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(ColorTypes.issupported), Type{ColorTypes.LMS{T} where T<:AbstractFloat}, Type{Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LMS{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Color{Float32, 3}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.LCHab{Float32}}})
precompile(Tuple{typeof(ColorTypes.issupported), Type{ColorTypes.LMS{T} where T<:AbstractFloat}, Type{Float32}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.XYZ{Float32}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Lab{Float32}}})
precompile(Tuple{typeof(Base._linspace1), Type{Float64}, Float64, Float64, Int64})
precompile(Tuple{typeof(Base._linspace), Type{Float64}, Int64, Int64, Int64, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.LCHab{Float32}, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LCHab{Float64}}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Colors.interpolate_table), Array{Float64, 2}, Float64, Float64, Int64})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LMS{Float64}}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(Colors.deuteranopic), ColorTypes.Lab{Float64}, Float64, ColorTypes.LMS{Float32}})
precompile(Tuple{typeof(Base.copyto!), Array{ColorTypes.LCHab{Float32}, 1}, Int64, Array{ColorTypes.LCHab{Float32}, 1}, Int64, Int64})
precompile(Tuple{typeof(Colors.deuteranopic), ColorTypes.LCHab{Float32}, Float64, ColorTypes.LMS{Float32}})
precompile(Tuple{typeof(Colors._colordiff), ColorTypes.Lab{Float64}, ColorTypes.Lab{Float64}, Colors.DE_2000})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LCHab{Float32}}, ColorTypes.Lab{Float64}})
precompile(Tuple{getfield(Colors, Symbol("##distinguishable_colors#11")), Bool, getfield(Gadfly.Scale, Symbol("#51#52")), Array{Float64, 1}, Array{Float64, 1}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, typeof(Colors.distinguishable_colors), Int64, Array{ColorTypes.LCHab{Float32}, 1}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{ColorTypes.Color{T, N} where N where T, 1}, Base.IndexLinear, Array{ColorTypes.LCHab{Float32}, 1}})
precompile(Tuple{typeof(Gadfly.Scale.default_discrete_colors), Int64})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float64}}, ColorTypes.Lab{Float64}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.RGB{Float64}}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.RGB{Float64}}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float64}}, ColorTypes.RGB{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.Lab{Float64}}, ColorTypes.XYZ{Float64}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.Lab{Float64}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, ColorTypes.RGB{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.LMS{Float64}}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float64}}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.Lab{Float64}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LMS{Float32}}, ColorTypes.XYZ{Float32}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.LMS{Float32}}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float32}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float32}}, ColorTypes.Lab{Float32}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.XYZ{Float32}}, Type{ColorTypes.XYZ{T} where T<:AbstractFloat}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float32}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.LCHab{Float32}}, ColorTypes.Lab{Float32}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.LCHab{Float32}}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float32}}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.Lab{Float32}}, ColorTypes.XYZ{Float32}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.Lab{Float32}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, Type{ColorTypes.LMS{T} where T<:AbstractFloat}, ColorTypes.LMS{Float64}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.AbstractRGB{Float32}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB{Float32}}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.RGB{Float32}}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{ColorTypes.RGB{Float32}, 1}, Base.IndexLinear, Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{typeof(Base.convert), Type{Array{ColorTypes.RGB{Float32}, 1}}, Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{ColorTypes.RGB{Float32}, 1}, ColorTypes.LCHab{Float32}, Int64})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.RGB{Float32}}, ColorTypes.XYZ{Float32}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.RGB{Float32}}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float32}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Scale, Symbol("#61#65")), Base.Iterators.Zip{Tuple{Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{ColorTypes.RGB{Float32}, String}, 1}, Tuple{ColorTypes.RGB{Float32}, String}, Base.Generator{Base.Iterators.Zip{Tuple{Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, getfield(Gadfly.Scale, Symbol("#61#65"))}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Zip{Tuple{Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, getfield(Gadfly.Scale, Symbol("#61#65"))}})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, String}}})
precompile(Tuple{typeof(Base.hash), ColorTypes.RGB{Float32}, UInt64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.RGB{Float32}, String}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.RGB{Float32}, String}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.RGB{Float32}, String}, String, ColorTypes.RGB{Float32}})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, String}}, Array{Tuple{ColorTypes.RGB{Float32}, String}, 1}})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Array{Tuple{ColorTypes.RGB{Float32}, String}, 1}})
precompile(Tuple{Type{Base.Iterators.Filter{F, I} where I where F}, getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Scale, Symbol("#63#68")), Base.Iterators.Filter{getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}}})
precompile(Tuple{typeof(Base.grow_to!), Array{String, 1}, Base.Generator{Base.Iterators.Filter{getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}}, getfield(Gadfly.Scale, Symbol("#63#68"))}, Int64})
precompile(Tuple{typeof(Base.grow_to!), Array{String, 1}, Base.Generator{Base.Iterators.Filter{getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}}, getfield(Gadfly.Scale, Symbol("#63#68"))}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Filter{getfield(Gadfly.Scale, Symbol("#64#69")), Array{String, 1}}, getfield(Gadfly.Scale, Symbol("#63#68"))}})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{String, 1}, Array{String, 1}})
precompile(Tuple{typeof(Gadfly.Scale.discretize), Array{String, 1}, Array{String, 1}})
precompile(Tuple{typeof(Base.getproperty), IndirectArrays.IndirectArray{String, 1, Array{Int64, 1}, Array{String, 1}}, Symbol})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{ColorTypes.RGB{Float32}, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.RGB{Float32}, 1}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, Int64}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.RGB{Float32}, Int64}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.RGB{Float32}, Int64}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.get!), getfield(Base, Symbol("#243#244")){Int64}, Base.Dict{ColorTypes.RGB{Float32}, Int64}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.get), Base.Dict{ColorTypes.RGB{Float32}, Int64}, ColorTypes.RGB{Float32}, Nothing})
precompile(Tuple{typeof(Base.indexin), Array{ColorTypes.RGB{Float32}, 1}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{ColorTypes.RGB{Float32}, 1}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{ColorTypes.RGB{Float32}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(OrderedCollections.rehash!), OrderedCollections.OrderedDict{Any, Any}, Int64})
precompile(Tuple{typeof(OrderedCollections.ht_keyindex2), OrderedCollections.OrderedDict{Any, Any}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections._setindex!), OrderedCollections.OrderedDict{Any, Any}, Int64, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{Any, Any}, Int64, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections.hashindex), ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{ColorTypes.RGB{Float32}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.isequal), ColorTypes.RGB{Float32}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}, Type{Nothing}})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Nothing, 1}, Nothing})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Array{Nothing, 1}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Array{Nothing, 1}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}}}})
precompile(Tuple{typeof(Base.:(==)), Nothing, WeakRef})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Array{Nothing, 1}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}}}}})
precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!), Base.BitArray{1}, Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Base.Missing, Int64, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Union{Base.Missing, Bool}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!), Array{Union{Base.Missing, Bool}, 1}, Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Base.Missing, Int64, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!), Base.BitArray{1}, Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Bool, Int64, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Gadfly.Aesthetics, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Gadfly.Aesthetics, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Gadfly.Aesthetics, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Gadfly.Aesthetics, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Gadfly.Data, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Gadfly.Data, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Gadfly.Data, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Gadfly.Data, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Gadfly.Aesthetics, 1}, Vararg{Any, N} where N})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}}}})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistics), Array{Gadfly.StatisticElement, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{Type{Core.Compiler.Signature}, Distances.Euclidean, Core.Compiler.Const, Array{Any, 1}, Type{T} where T})
precompile(Tuple{getfield(Base, Symbol("##s66#120")), Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Base.Grisu.fastfixedtoa), Float64, Int64, Int64, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float64, Int64, Int64, Array{UInt8, 1}, Array{Base.Grisu.Bignums.Bignum, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float64, Int64, Int64, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.Grisu._show), Base.GenericIOBuffer{Array{UInt8, 1}}, Float64, Int64, Int64, Bool, Bool})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Float64})
precompile(Tuple{typeof(Base.print_to_string), Float64})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistic), Gadfly.Stat.SmoothStatistic, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.undefined_aesthetics), Gadfly.Aesthetics, Symbol, Vararg{Symbol, N} where N})
precompile(Tuple{typeof(Base.filter), getfield(Gadfly, Symbol("#46#47")){Gadfly.Aesthetics}, Array{Symbol, 1}})
precompile(Tuple{typeof(Gadfly.assert_aesthetics_equal_length), String, Gadfly.Aesthetics, Symbol, Vararg{Symbol, N} where N})
precompile(Tuple{typeof(Base.:(!=)), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Nothing})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, Nothing}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.RGB{Float32}, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.RGB{Float32}, Nothing}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.RGB{Float32}, Nothing}, Nothing, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.RGB{Float32}, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.unique), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.unique), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{ColorTypes.RGB{Float32}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.copy), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.unaliascopy), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{Any, Any}, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}}})
precompile(Tuple{typeof(Base._all), getfield(Base, Symbol("#240#242")), Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}}, Base.Colon})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}}})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}}})
precompile(Tuple{typeof(Base.empty), Base.Dict{Any, Any}, Type{ColorTypes.RGB{Float32}}, Type{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Stat, Symbol("#27#28")){Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}}, Int64})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, Array{Int64, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, AbstractArray{T, 2} where T, AbstractArray{T, 1} where T, Distributions.Distribution{F, S} where S<:Distributions.ValueSupport where F<:Distributions.VariateForm, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Type{ColorTypes.RGB{Float32}}})
precompile(Tuple{typeof(Base._iterate), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.min), Base.IndexLinear, Array{Float64, 1}})
precompile(Tuple{typeof(Base.minimum), Array{Float64, 1}})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.max), Base.IndexLinear, Array{Float64, 1}})
precompile(Tuple{typeof(Base.maximum), Array{Float64, 1}})
precompile(Tuple{typeof(Loess.tnormalize!), Array{Float64, 2}, Float64})
precompile(Tuple{typeof(Distances.euclidean), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Loess.diameter), Array{Float64, 2}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Float64, 1}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#1#2")){Array{Float64, 2}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#1#2")){Array{Float64, 2}}}})
precompile(Tuple{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}, Int64})
precompile(Tuple{typeof(Base.Order.lt), Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}, Int64, Int64})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.PartialQuickSort{Int64}, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Sort.PartialQuickSort{Int64}, Base.Order.By{getfield(Loess, Symbol("#3#5")){Array{Float64, 2}}}})
precompile(Tuple{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}, Int64})
precompile(Tuple{typeof(Base.Order.lt), Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}, Int64, Int64})
precompile(Tuple{typeof(Base.sort!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64, Int64, Base.Sort.PartialQuickSort{Base.UnitRange{Int64}}, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Loess.build_kdtree), Array{Float64, 2}, Base.SubArray{Int64, 1, Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Float64, 2}, Int64, Float64, Base.Set{Array{Float64, 1}}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.PartialQuickSort{Base.UnitRange{Int64}}, Base.Order.By{getfield(Loess, Symbol("#4#6")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Loess.build_kdtree), Array{Float64, 2}, Array{Int64, 1}, Array{Float64, 2}, Int64, Float64, Base.Set{Array{Float64, 1}}})
precompile(Tuple{Type{Loess.KDTree{T} where T<:AbstractFloat}, Array{Float64, 2}, Float64, Float64})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Loess, Symbol("#10#12")){Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.By{getfield(Loess, Symbol("#10#12")){Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.PartialQuickSort{Int64}, Base.Order.By{getfield(Loess, Symbol("#10#12")){Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#11#13")){Array{Float64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.getproperty), LinearAlgebra.QRPivoted{Float64, Array{Float64, 2}}, Symbol})
precompile(Tuple{typeof(LinearAlgebra.ldiv!), LinearAlgebra.QRPivoted{Float64, Array{Float64, 2}}, Array{Float64, 2}, Float64})
precompile(Tuple{typeof(LinearAlgebra.ldiv!), LinearAlgebra.QRPivoted{Float64, Array{Float64, 2}}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.:(\)), LinearAlgebra.QRPivoted{Float64, Array{Float64, 2}}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.:(\)), Array{Float64, 2}, Array{Float64, 1}})
precompile(Tuple{getfield(Loess, Symbol("##loess#9")), Bool, Float64, Int64, typeof(Loess.loess), Array{Float64, 2}, Array{Float64, 1}})
precompile(Tuple{getfield(Loess, Symbol("#kw##loess")), NamedTuple{(:span,), Tuple{Float64}}, typeof(Loess.loess), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{Type{Loess.KDInternalNode{Float64}}, Int64, Float64, Loess.KDLeafNode, Loess.KDLeafNode})
precompile(Tuple{Type{Loess.KDInternalNode{Float64}}, Int64, Float64, Loess.KDLeafNode, Loess.KDInternalNode{Float64}})
precompile(Tuple{Type{Loess.KDInternalNode{Float64}}, Int64, Float64, Loess.KDInternalNode{Float64}, Loess.KDInternalNode{Float64}})
precompile(Tuple{typeof(Loess.predict), Loess.LoessModel{Float64}, Array{Float64, 2}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Float64, 1}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#7#8")){Array{Float64, 2}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Loess, Symbol("#7#8")){Array{Float64, 2}}}})
precompile(Tuple{typeof(Loess.bounds_verts), Array{Float64, 2}})
precompile(Tuple{typeof(Loess.traverse), Loess.KDTree{Float64}, Array{Float64, 1}})
precompile(Tuple{typeof(Loess.evalpoly), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Loess.predict), Loess.LoessModel{Float64}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.getproperty), Loess.KDInternalNode{Float64}, Symbol})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float64, 1}, Float64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Float64, Array{Float64, 1}})
precompile(Tuple{Type{Distributions.TDist{T} where T<:Real}, Int64})
precompile(Tuple{typeof(Statistics.quantile), Distributions.TDist{Float64}, Float64})
precompile(Tuple{typeof(Base.fill!), Array{ColorTypes.RGB{Float32}, 1}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.fill), ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.allocatedinline), Type{ColorTypes.RGB{Float32}}})
precompile(Tuple{typeof(Base.copyto!), Array{ColorTypes.RGB{Float32}, 1}, Int64, Array{ColorTypes.RGB{Float32}, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.append!), Array{ColorTypes.RGB{Float32}, 1}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float64, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.unique), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:linestyle,), Tuple{Array{String, 1}}}, Type{Gadfly.Data}})
precompile(Tuple{typeof(Base.copyto!), Array{String, 1}, OrderedCollections.OrderedSet{Any}})
precompile(Tuple{typeof(Gadfly.Scale.discretize), Array{String, 1}, Nothing, Nothing, Bool})
precompile(Tuple{typeof(Gadfly.Scale.discretize), Array{String, 1}, Nothing, Nothing})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{Int64, 1}})
precompile(Tuple{typeof(Gadfly.concat), Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, Array{Int64, 1}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, Array{Float64, 1}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, Nothing})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.copy), IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, OrderedCollections.OrderedDict{Any, Any}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, String})
precompile(Tuple{typeof(Base._all), getfield(Base, Symbol("#240#242")), Base.Dict{Symbol, AbstractString}, Base.Colon})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Dict{Symbol, AbstractString}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, Base.Dict{Symbol, AbstractString}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Function, Function})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Base.Missing, Base.Missing})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistic), Gadfly.Stat.Identity, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.input_aesthetics), Gadfly.Stat.TickStatistic})
precompile(Tuple{typeof(Gadfly.concrete_length), Base.Iterators.Flatten{Array{Any, 1}}})
precompile(Tuple{typeof(Gadfly.bounding_order_of_magnitude), Int64})
precompile(Tuple{typeof(Gadfly.optimize_ticks_typed), Int64, Int64, Bool, Array{Tuple{Float64, Float64}, 1}, Int64, Int64, Int64, Float64, Float64, Float64, Float64, Bool})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Float64, Float64}, 1}, Tuple{Float64, Float64}, Base.Generator{Array{Tuple{Float64, Float64}, 1}, getfield(Gadfly, Symbol("#26#27"))}, Int64})
precompile(Tuple{getfield(Gadfly, Symbol("##optimize_ticks#29")), Bool, Nothing, Nothing, Symbol, Nothing, Nothing, Nothing, Nothing, Bool, typeof(Gadfly.optimize_ticks), Dates.DateTime, Dates.DateTime})
precompile(Tuple{getfield(Gadfly, Symbol("##multilevel_ticks#32")), Array{Symbol, 1}, typeof(Gadfly.multilevel_ticks), Dates.DateTime, Dates.DateTime})
precompile(Tuple{typeof(Gadfly.multilevel_ticks), Dates.DateTime, Dates.DateTime})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.ValueIterator{Base.Dict{Any, Any}}, typeof(Base.length)}})
precompile(Tuple{typeof(Gadfly.multilevel_ticks), Dates.Date, Dates.Date})
precompile(Tuple{getfield(Gadfly, Symbol("##optimize_ticks#29")), Bool, Nothing, Nothing, Symbol, Float64, Float64, Float64, Float64, Bool, typeof(Gadfly.optimize_ticks), Dates.DateTime, Dates.DateTime})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Any, 1}, getfield(Gadfly.Stat, Symbol("#13#16"))}, Int64})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistic), Gadfly.Stat.TickStatistic, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{Type{Symbol}, String, Vararg{String, N} where N})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.isconcrete), Tuple{Array{Union{Base.Missing, Int64}, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Union{Base.Missing, Int64}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Union{Base.Missing, Int64}, 1}}}})
precompile(Tuple{typeof(Gadfly.concrete_length), Array{Int64, 1}})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##optimize_ticks")), NamedTuple{(:extend_ticks, :granularity_weight, :simplicity_weight, :coverage_weight, :niceness_weight, :strict_span), Tuple{Bool, Float64, Float64, Float64, Float64, Bool}}, typeof(Gadfly.optimize_ticks), Int64, Int64})
precompile(Tuple{typeof(Gadfly.bounding_order_of_magnitude), Float64})
precompile(Tuple{typeof(Gadfly.optimize_ticks_typed), Float64, Float64, Bool, Array{Tuple{Float64, Float64}, 1}, Int64, Int64, Int64, Float64, Float64, Float64, Float64, Bool})
precompile(Tuple{getfield(Gadfly, Symbol("##multilevel_ticks#30")), Array{Float64, 1}, typeof(Gadfly.multilevel_ticks), Float64, Float64})
precompile(Tuple{typeof(Gadfly.multilevel_ticks), Float64, Float64})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.ValueIterator{Base.Dict{Any, Any}}, typeof(Base.length)}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Base.ValueIterator{Base.Dict{Any, Any}}, typeof(Base.length)}, Int64})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.isconcrete), Tuple{Array{Union{Base.Missing, Float64}, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Union{Base.Missing, Float64}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Union{Base.Missing, Float64}, 1}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}}})
precompile(Tuple{typeof(Gadfly.concrete_length), Array{Float64, 1}})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##optimize_ticks")), NamedTuple{(:extend_ticks, :granularity_weight, :simplicity_weight, :coverage_weight, :niceness_weight, :strict_span), Tuple{Bool, Float64, Float64, Float64, Float64, Bool}}, typeof(Gadfly.optimize_ticks), Float64, Float64})
precompile(Tuple{typeof(Base.vect), Gadfly.Aesthetics, Vararg{Gadfly.Aesthetics, N} where N})
precompile(Tuple{typeof(Base._array_for), Type{Bool}, Array{Gadfly.Aesthetics, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Array{Gadfly.Aesthetics, 1}, getfield(Gadfly, Symbol("#93#106")){Symbol}}, Int64, Int64})
precompile(Tuple{Type{Gadfly.Guide.ColorKey}})
precompile(Tuple{typeof(Base.push!), Array{Gadfly.GuideElement, 1}, Gadfly.Guide.ColorKey})
precompile(Tuple{typeof(Gadfly.render_prepared), Gadfly.Plot, Gadfly.Coord.Cartesian, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Array{Gadfly.GuideElement, 1}})
precompile(Tuple{typeof(Gadfly.Coord.aesthetics_type), Array{Gadfly.Aesthetics, 1}, Array{Symbol, 1}})
precompile(Tuple{typeof(Gadfly.Coord.first_concrete_aesthetic_value), Array{Gadfly.Aesthetics, 1}, Array{Symbol, 1}})
precompile(Tuple{typeof(Gadfly.Coord.apply_coordinate), Gadfly.Coord.Cartesian, Array{Gadfly.Aesthetics, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}})
precompile(Tuple{typeof(Base.setindex!), Array{Gadfly.Theme, 1}, Nothing, Int64})
precompile(Tuple{typeof(Gadfly.get_stroke_vector), Symbol})
precompile(Tuple{typeof(Gadfly.jsplotdata), String, String, Array{Measures.Measure, 1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#33#42"))}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#34#43"))}})
precompile(Tuple{typeof(Base.getproperty), Gadfly.Guide.XTicks, Symbol})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.XTicks, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#52#61"))}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#53#62"))}})
precompile(Tuple{typeof(Base.getproperty), Gadfly.Guide.YTicks, Symbol})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.YTicks, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}, getfield(Gadfly, Symbol("#19#20")){Int64}}})
precompile(Tuple{getfield(Gadfly, Symbol("##render_prepared#107")), Bool, Bool, typeof(Gadfly.render_prepared), Gadfly.Plot, Gadfly.Coord.Cartesian, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Array{Gadfly.GuideElement, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Gadfly.Aesthetics, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.__cat), Array{Gadfly.Aesthetics, 1}, Tuple{Int64}, Tuple{Bool}, Gadfly.Aesthetics, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.__subarray_throw_boundserror), Type{Base.SubArray{Gadfly.Aesthetics, 1, Array{Gadfly.Aesthetics, 1}, Tuple{Base.UnitRange{Int64}}, true}}, Array{Gadfly.Aesthetics, 1}, Tuple{Base.UnitRange{Int64}}, Int64, Int64, Tuple{Int64}})
precompile(Tuple{typeof(Base.fill!), Base.SubArray{Gadfly.Aesthetics, 1, Array{Gadfly.Aesthetics, 1}, Tuple{Base.UnitRange{Int64}}, true}, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.cat_indices), Array{Gadfly.Aesthetics, 1}, Int64})
precompile(Tuple{typeof(Base.cat_size), Array{Gadfly.Aesthetics, 1}, Int64})
precompile(Tuple{typeof(Base.throw_setindex_mismatch), Array{Gadfly.Aesthetics, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.setindex!), Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Aesthetics, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Gadfly.concrete_minmax), Array{Int64, 1}, Int64, Int64})
precompile(Tuple{typeof(Gadfly.isconcrete), Float64})
precompile(Tuple{typeof(Gadfly.concrete_minmax), Array{Float64, 1}, Float64, Float64})
precompile(Tuple{typeof(Base.maximum), Base.SkipMissing{Array{Float64, 1}}})
precompile(Tuple{typeof(Base.minimum), Base.SkipMissing{Array{Float64, 1}}})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:leftpad, :rightpad, :toppad, :bottompad), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Compose.UnitBox{S, T, U, V} where V where U where T where S}, Int64, Float64, Float64, Float64})
precompile(Tuple{Type{NamedTuple{(:units, :raster), T} where T<:Tuple}, Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Bool}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:units, :raster), Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Bool}}, typeof(Compose.context)})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}, Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}}})
precompile(Tuple{getfield(Gadfly.Geom, Symbol("#143#157")), Gadfly.Layer})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Gadfly.StatisticElement, 1}, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly.Geom, Symbol("#143#157"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly.Geom, Symbol("#143#157"))}})
precompile(Tuple{getfield(Gadfly, Symbol("##inherit!#52")), Array{Any, 1}, typeof(Gadfly.inherit!), Gadfly.Aesthetics, Gadfly.Aesthetics})
precompile(Tuple{Type{Gadfly.Aesthetics}, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.copyto!), Array{Gadfly.ScaleElement, 1}, Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##render_prepared")), NamedTuple{(:table_only,), Tuple{Bool}}, typeof(Gadfly.render_prepared), Gadfly.Plot, Gadfly.Coord.Cartesian, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Array{Gadfly.GuideElement, 1}})
precompile(Tuple{typeof(Compose.pad_outer), Compose.Context, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.Context, 1}, Compose.Context, Base.Generator{Array{Compose.Context, 1}, getfield(Compose, Symbol("#126#127")){Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{typeof(Base._collect), Array{Compose.Context, 1}, Base.Generator{Array{Compose.Context, 1}, getfield(Compose, Symbol("#126#127")){Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Geom.SubplotGrid, Gadfly.Theme, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}})
precompile(Tuple{getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}, Tuple{Gadfly.Layer, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}, Gadfly.Theme}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.Context, 1}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}}, getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}}, Int64, Tuple{Int64, Int64, Int64, Int64, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}}, getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.RGB24}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.ColorAlpha{ColorTypes.HSL{T}, T, 4} where T<:AbstractFloat}})
precompile(Tuple{typeof(ColorTypes.color_type), Type{ColorTypes.HSLA{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Geom.LineGeometry, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Geom.LineGeometry, Gadfly.Theme, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}})
precompile(Tuple{typeof(Base.length), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.length), IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{Type{IndirectArrays.IndirectArray{UInt8, N, A, V} where V<:AbstractArray{UInt8, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N}, Array{Int64, 1}})
precompile(Tuple{Type{IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.fill!), Array{ColorTypes.LCHab{Float32}, 1}, ColorTypes.LCHab{Float32}})
precompile(Tuple{typeof(Base.fill), ColorTypes.LCHab{Float32}, Int64})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, Array{ColorTypes.LCHab{Float32}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, Array{ColorTypes.LCHab{Float32}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, Array{Int64, 1}})
precompile(Tuple{getfield(Gadfly, Symbol("##Aesthetics#45")), Array{Int64, 1}, Array{Float64, 1}, Nothing, Nothing, Nothing, Nothing, Nothing, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Nothing, IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Nothing, Nothing, Nothing, Nothing, Array{Float64, 1}, Array{Float64, 1}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, OrderedCollections.OrderedDict{Any, Any}, String, Nothing, Nothing, Base.Dict{Symbol, AbstractString}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(Gadfly.Scale.identity_formatter), typeof(Gadfly.Scale.identity_formatter), typeof(Showoff.showoff), typeof(Showoff.showoff), getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, typeof(Showoff.showoff), typeof(Showoff.showoff), typeof(Showoff.showoff), typeof(Showoff.showoff), Base.Missing, Base.Missing, Type{Gadfly.Aesthetics}, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.:(==)), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Function})
precompile(Tuple{typeof(Base.:(==)), IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Function})
precompile(Tuple{typeof(Base.:(==)), OrderedCollections.OrderedDict{Any, Any}, Function})
precompile(Tuple{typeof(Base.sortperm), Array{Int64, 1}})
precompile(Tuple{getfield(Base.Sort, Symbol("##sortperm#11")), Base.Sort.QuickSortAlg, Function, Function, Nothing, Base.Order.ForwardOrdering, typeof(Base.sortperm), Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, IndirectArrays.IndirectArray{Int64, 1, Array{UInt8, 1}, Array{Int64, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), IndirectArrays.IndirectArray{Int64, 1, Array{UInt8, 1}, Array{Int64, 1}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), IndirectArrays.IndirectArray{Int64, 1, Array{UInt8, 1}, Array{Int64, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.getindex), IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.vect), Array{Int64, 1}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.promote_typeof), Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.promote_typeof), Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.copyto!), Array{Array{T, 1} where T, 1}, Tuple{Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Geom, Symbol("#131#132")), Array{Array{T, 1} where T, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Array{T, 1} where T, 1}, getfield(Gadfly.Geom, Symbol("#131#132"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{T, 1} where T, 1}, getfield(Gadfly.Geom, Symbol("#131#132"))}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.isconcrete), Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Int64, 1}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Int64, 1}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Int64, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Int64, 1}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}}}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{ColorTypes.RGB{Float32}, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.RGB{Float32}, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.RGB{Float32}, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.unique), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.iterate), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.copyto!), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Base.Iterators.Zip{Tuple{Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.collect), Type{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}}, Base.Iterators.Zip{Tuple{Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}, Array{Int64, 1}}}})
precompile(Tuple{Type{Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}}})
precompile(Tuple{typeof(Base.hash), Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, UInt64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}, Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}, Nothing, Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, Nothing}, Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}})
precompile(Tuple{typeof(Base.unique), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{typeof(Base.unique), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{typeof(Base.length), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{Type{Array{ColorTypes.RGB{Float32}, 1}}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.vect), Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Extruded{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}}}})
precompile(Tuple{typeof(Base.first), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{ColorTypes.RGB{Float32}, 1}, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.get_stroke_vector), Tuple{Array{Symbol, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.get_stroke_vector), Tuple{Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.get_stroke_vector), Tuple{Array{Symbol, 1}}}})
precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.get_stroke_vector), Tuple{Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{Array{Any, 1}}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Any, 1}, Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!), Array{Array{Any, 1}, 1}, Array{Array{Any, 1}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.get_stroke_vector), Tuple{Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Array{Any, 1}, Int64, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Array{Any, 1}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.get_stroke_vector), Tuple{Base.Broadcast.Extruded{Array{Symbol, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.getindex), Base.Dict{ColorTypes.RGB{Float32}, String}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}}})
precompile(Tuple{getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.svg_color_class_from_label), Tuple{Array{String, 1}}})
precompile(Tuple{typeof(Gadfly.svg_color_class_from_label), String})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.svg_color_class_from_label), Tuple{Base.Broadcast.Extruded{Array{String, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.svg_color_class_from_label), Tuple{Array{String, 1}}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Array{Tuple{Int64, Float64}, 1}, 1}, getfield(Compose, Symbol("#1#2"))}, Int64})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Int64, Float64}, 1}, 1}, Symbol})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.StrokePrimitive, 1}, Compose.StrokePrimitive, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, getfield(Compose, Symbol("#42#43"))}, Int64})
precompile(Tuple{typeof(Compose.stroke), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Measures.Measure, 1}, Base.IndexLinear, Array{Any, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.StrokeDashPrimitive, 1}, Base.Generator{Array{Array{Any, 1}, 1}, getfield(Compose, Symbol("#46#47"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{Any, 1}, 1}, getfield(Compose, Symbol("#46#47"))}})
precompile(Tuple{typeof(Compose.strokedash), Array{Array{Any, 1}, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGClassPrimitive, 1}, Compose.SVGClassPrimitive, Base.Generator{Array{String, 1}, Type{Compose.SVGClassPrimitive}}, Int64})
precompile(Tuple{typeof(Compose.svgclass), Array{String, 1}})
precompile(Tuple{typeof(Compose.compose), Compose.Context, Compose.Context})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Nothing, Nothing, Nothing, Nothing, Compose.ListNull{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Nothing, Float64, Symbol})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Context})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.PanelBackground, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.PanelBackground, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.:(!=)), Array{Gadfly.Guide.PositionedGuide, 1}, Nothing})
precompile(Tuple{typeof(Base.copyto!), Array{Any, 1}, Int64, Array{Gadfly.Guide.PositionedGuide, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.append!), Array{Any, 1}, Array{Gadfly.Guide.PositionedGuide, 1}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.Lab{Float64}}})
precompile(Tuple{typeof(Base.eltype), Type{ColorTypes.Lab{T} where T<:AbstractFloat}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.QuestionMark, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.QuestionMark, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.fill), ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.SVGClassPrimitive}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.SVGClassPrimitive}, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.HelpScreen, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.HelpScreen, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{getfield(Colors, Symbol("##distinguishable_colors#11")), Bool, typeof(Base.identity), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, typeof(Colors.distinguishable_colors), Int64, Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}})
precompile(Tuple{getfield(Colors, Symbol("##distinguishable_colors#12")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Colors.distinguishable_colors), Int64, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Colors.distinguishable_colors), Int64, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Base.allocatedinline), Type{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}}})
precompile(Tuple{typeof(Base.copyto!), Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, Int64, Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, Int64, Int64})
precompile(Tuple{typeof(Colors.invert_srgb_compand), FixedPointNumbers.Normed{UInt8, 8}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float64}}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.Lab{Float64}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}}, ColorTypes.XYZ{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{AbstractString, AbstractString}, String})
precompile(Tuple{getfield(Compose, Symbol("#112#113")), Base.SubString{String}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{Base.SubString{String}, 1}, getfield(Compose, Symbol("#112#113"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Base.SubString{String}, 1}, getfield(Compose, Symbol("#112#113"))}})
precompile(Tuple{typeof(Compose.levenshtein), String, String})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{AbstractString, AbstractString}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{AbstractString, AbstractString}, String})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, AbstractString}, String, String})
precompile(Tuple{typeof(Compose.match_font), String})
precompile(Tuple{typeof(Compose.max_text_extents), String, Measures.Length{:mm, Float64}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Compose.text_width), Base.Dict{String, Any}, Base.SubString{String}, Float64})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}, Float64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.:(+)), Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Base.Generator{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Base.Generator{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, getfield(Gadfly.Guide, Symbol("#1#2")){Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{getfield(Compose, Symbol("##text#27")), Symbol, typeof(Compose.text), Array{Measures.Length{:w, Float64}, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{String, 1}, Array{Compose.HCenter, 1}, Array{Compose.VCenter, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Measures.Length{:w, Float64}, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{String, 1}, Array{Compose.HCenter, 1}, Array{Compose.VCenter, 1}})
precompile(Tuple{typeof(Base.:(/)), Measures.Length{:mm, Float64}, Int64})
precompile(Tuple{typeof(Base.:(*)), Measures.Length{:mm, Float64}, Float64})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(*)), Measures.Length{:mm, Float64}, Int64})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.rectangle), Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Tuple{Compose.Context, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.Property{Compose.FontPrimitive}, Compose.Property{Compose.FontSizePrimitive}, Compose.Property{Compose.FillPrimitive}}, Tuple{Compose.Context, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.Property{Compose.FillPrimitive}}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.CrossHair, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.CrossHair, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Gadfly.issomething), Array{Float64, 1}})
precompile(Tuple{typeof(IterTools.groupby), getfield(Gadfly.Guide, Symbol("#30#39")), Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#30#39"))}, Nothing})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#30#39"))}})
precompile(Tuple{typeof(Showoff.concrete_minimum), Array{Float64, 1}})
precompile(Tuple{typeof(Showoff.concrete_maximum), Array{Float64, 1}})
precompile(Tuple{typeof(Base.Grisu.fastfixedtoa), Float32, Int64, Int64, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float32, Int64, Int64, Array{UInt8, 1}, Array{Base.Grisu.Bignums.Bignum, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float32, Int64, Int64})
precompile(Tuple{typeof(Showoff.plain_precision_heuristic), Array{Float64, 1}})
precompile(Tuple{typeof(Base.Grisu.grisu), Float64, Int64, Int64})
precompile(Tuple{typeof(Showoff.format_fixed), Float64, Int64})
precompile(Tuple{getfield(Showoff, Symbol("#1#2")), Float64})
precompile(Tuple{typeof(Base.grow_to!), Array{Float64, 1}, Base.Generator{Base.Iterators.Filter{typeof(Base.isfinite), Array{Float64, 1}}, getfield(Showoff, Symbol("#1#2"))}, Int64})
precompile(Tuple{typeof(Base.grow_to!), Array{Float64, 1}, Base.Generator{Base.Iterators.Filter{typeof(Base.isfinite), Array{Float64, 1}}, getfield(Showoff, Symbol("#1#2"))}})
precompile(Tuple{typeof(Showoff.format_fixed_scientific), Float64, Int64, Bool})
precompile(Tuple{typeof(Showoff.showoff), Array{Float64, 1}, Symbol})
precompile(Tuple{typeof(Gadfly.Scale.identity_formatter), Array{Float64, 1}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#30#39"))}, Tuple{Bool, Float64, Tuple{Float64, Float64}, Tuple{Int64, Int64}}})
precompile(Tuple{typeof(Gadfly.get_stroke_vector), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#31#40")), Array{Float64, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}, Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#31#40"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#31#40"))}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}, getfield(Compose, Symbol("#1#2"))}, Int64})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}, Symbol})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}})
precompile(Tuple{typeof(Compose.stroke), ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Measures.Measure, 1}, Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Compose.strokedash), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#32#41")), Array{Float64, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}, Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#32#41"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#32#41"))}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.VisiblePrimitive, 1}, Compose.VisiblePrimitive, Base.Generator{Array{Bool, 1}, Type{Compose.VisiblePrimitive}}, Int64})
precompile(Tuple{typeof(Compose.visible), Array{Bool, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGAttributePrimitive, 1}, Compose.SVGAttributePrimitive, Base.Generator{Array{Float64, 1}, getfield(Compose, Symbol("#50#51")){String}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Compose, Symbol("#50#51")){String}}})
precompile(Tuple{typeof(Compose.svgattribute), String, Array{Float64, 1}})
precompile(Tuple{typeof(Base.Printf.decode_hex), Int64, Base.CodeUnits{UInt8, String}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.hex), ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Compose.text_extents), String, Measures.Length{:mm, Float64}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Base.afoldl), typeof(Base.:(*)), Float64, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Length{:mm, Float64}}, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#33#42"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#33#42"))}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#34#43"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#34#43"))}, Int64})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{Measures.Length{:mm, Float64}, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}, Base.LogicalIndex{Int64, Array{Bool, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Measures.Length{:mm, Float64}, 1}, Tuple{Base.LogicalIndex{Int64, Array{Bool, 1}}}})
precompile(Tuple{typeof(Base.getindex), Array{Measures.Length{:mm, Float64}, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.add_sum), Array{Measures.Length{:mm, Float64}, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.add_sum), Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.sum), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.add_sum), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Measures.Length{:mm, Float64}, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.max), Array{Measures.Length{:mm, Float64}, 1}, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.max), Base.IndexLinear, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.maximum), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.max), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(+)), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, typeof(Compose.context)})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight, :penalty), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Int64}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight, :penalty), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Int64}}, typeof(Compose.context)})
precompile(Tuple{typeof(IterTools.groupby), getfield(Gadfly.Guide, Symbol("#49#58")), Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#49#58"))}, Nothing})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#49#58"))}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, getfield(Gadfly.Guide, Symbol("#49#58"))}, Tuple{Bool, Float64, Tuple{Float64, Float64}, Tuple{Int64, Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#50#59")), Array{Float64, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}, Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#50#59"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#50#59"))}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}, getfield(Compose, Symbol("#1#2"))}, Int64})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}, Symbol})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#51#60")), Array{Float64, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}, Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#51#60"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Gadfly.Guide, Symbol("#51#60"))}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Context, Compose.Context})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#52#61"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#52#61"))}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#53#62"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#53#62"))}, Int64})
precompile(Tuple{typeof(Base.vect), Compose.Context})
precompile(Tuple{typeof(Base.getproperty), Gadfly.Guide.XLabel, Symbol})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.XLabel, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.XLabel, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.getproperty), Gadfly.Guide.YLabel, Symbol})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.YLabel, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.YLabel, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{Type{Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}}})
precompile(Tuple{typeof(OrderedCollections.rehash!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Int64})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Int64})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.ColorKey, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.ColorKey, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Base.isempty), OrderedCollections.OrderedDict{Any, Any}})
precompile(Tuple{typeof(Base.:(!=)), OrderedCollections.OrderedDict{Any, Any}, Nothing})
precompile(Tuple{typeof(Base.keys), OrderedCollections.OrderedDict{Any, Any}})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{Any, Any}})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{Any, Any}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}}})
precompile(Tuple{getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{getfield(Gadfly.Scale, Symbol("#62#67")){Base.Dict{ColorTypes.RGB{Float32}, String}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.Iterators.zip), Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, Vararg{Any, N} where N})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, Array{String, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, Array{String, 1}}}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{ColorTypes.RGB{Float32}, String}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{ColorTypes.RGB{Float32}, String}, Int64, Int64})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.in), ColorTypes.RGB{Float32}, Base.Set{ColorTypes.Color{T, N} where N where T}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.Color{T, N} where N where T, Nothing}, Nothing, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.push!), Base.Set{ColorTypes.Color{T, N} where N where T}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.push!), Array{ColorTypes.Color{T, N} where N where T, 1}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections.ht_keyindex2), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections._setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Base.Set{AbstractString}, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Base.Set{AbstractString}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections.ht_keyindex), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, ColorTypes.RGB{Float32}, Bool})
precompile(Tuple{typeof(Base.getindex), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{AbstractString, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{AbstractString, Nothing}, String})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, Nothing}, Nothing, String})
precompile(Tuple{typeof(Base.push!), Base.Set{AbstractString}, String})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, Array{String, 1}}}, Tuple{Int64, Int64}})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, Base.Set{AbstractString}})
precompile(Tuple{typeof(OrderedCollections.rehash!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, Int64})
precompile(Tuple{typeof(OrderedCollections.ht_keyindex2), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(OrderedCollections._setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, String, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, String, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Gadfly.Guide.render_key_title), String, Gadfly.Theme})
precompile(Tuple{typeof(Compose.text), Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}, String, Compose.HLeft, Compose.VBottom})
precompile(Tuple{typeof(Compose.context), Measures.Length{:w, Float64}, Measures.Length{:h, Float64}, Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#4#11"))}})
precompile(Tuple{typeof(Gadfly.Guide.render_discrete_color_key), Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}})
precompile(Tuple{typeof(Base.iterate), Base.ValueIterator{OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}}})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, String})
precompile(Tuple{typeof(Base.iterate), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.ValueIterator{OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#4#11"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#4#11"))}, Int64})
precompile(Tuple{typeof(Base.map), Function, Base.UnitRange{Int64}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.add_sum), Array{Measures.Measure, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.add_sum), Base.IndexLinear, Array{Measures.Measure, 1}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.Context, 1}, Compose.Context, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_similar), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.allocatedinline), Type{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Base.UnitRange{Int64}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#5#13")), Array{Tuple{Measures.Measure, Measures.Measure}, 1}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#5#13"))}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#5#13"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, getfield(Gadfly.Guide, Symbol("#5#13"))}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Measures.Measure, 1}, Measures.Length{:mm, Float64}, Int64})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight, :units), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Compose.UnitBox{Float64, Float64, Float64, Float64}}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight, :units), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Compose.UnitBox{Float64, Float64, Float64, Float64}}}, typeof(Compose.context)})
precompile(Tuple{Type{Gadfly.Guide.PositionedGuide}, Array{Compose.Context, 1}, Int64, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{typeof(Base.iterate), DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}})
precompile(Tuple{typeof(Base.:(==)), WeakRef, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.iterate), DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.BottomGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.OverGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.UnderGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.RightGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.LeftGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.BottomGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.BottomGuidePosition})
precompile(Tuple{getfield(DataStructures, Symbol("#29#31")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}, Gadfly.Guide.TopGuidePosition}})
precompile(Tuple{typeof(Base.get!), getfield(DataStructures, Symbol("#30#32")){DataStructures.DefaultDictBase{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86")), Base.Dict{Any, Any}}}, Base.Dict{Any, Any}, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.:(==)), WeakRef, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Gadfly.Guide.layout_guides), Compose.Context, Gadfly.Coord.Cartesian, Gadfly.Theme, Gadfly.Guide.PositionedGuide, Vararg{Gadfly.Guide.PositionedGuide, N} where N})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{typeof(Base.push!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Tuple{Array{Compose.Context, 1}, Int64}})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guide.BottomGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.OverGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.OverGuidePosition, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Gadfly.Guide, Symbol("#83#88"))}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.By{getfield(Gadfly.Guide, Symbol("#83#88"))}, Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{getfield(Base, Symbol("#kw##sort!")), NamedTuple{(:by,), Tuple{getfield(Gadfly.Guide, Symbol("#83#88"))}}, typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.LeftGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.By{getfield(Gadfly.Guide, Symbol("#82#87"))}})
precompile(Tuple{typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.By{getfield(Gadfly.Guide, Symbol("#82#87"))}, Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{getfield(Base, Symbol("#kw##sort!")), NamedTuple{(:by,), Tuple{getfield(Gadfly.Guide, Symbol("#82#87"))}}, typeof(Base.sort!), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.RightGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.RightGuidePosition, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.BottomGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.BottomGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.BottomGuidePosition, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.UnderGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.UnderGuidePosition, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.length), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{Type{NamedTuple{(:units, :aspect_ratio), T} where T<:Tuple}, Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Nothing}})
precompile(Tuple{getfield(Compose, Symbol("##Table#55")), Nothing, Nothing, Nothing, Compose.UnitBox{Int64, Float64, Float64, Float64}, Int64, Bool, Bool, Array{Any, 1}, Type{Compose.Table}, Int64, Int64, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:units, :aspect_ratio), Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Nothing}}, Type{Compose.Table}, Int64, Int64, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.iterate), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{Compose.Context, 1}, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{Compose.Context, 1}, Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.iterate), Array{Compose.Context, 1}})
precompile(Tuple{typeof(Base.getproperty), Compose.Context, Symbol})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:toppad, :bottompad), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Compose.UnitBox{S, T, U, V} where V where U where T where S}, Compose.UnitBox{Int64, Float64, Float64, Float64}})
precompile(Tuple{typeof(Base.setproperty!), Compose.Context, Symbol, Compose.UnitBox{Int64, Float64, Float64, Float64}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.UnitBox{S, T, U, V} where V where U where T where S}}, Compose.UnitBox{Int64, Float64, Float64, Float64}})
precompile(Tuple{typeof(Base.iterate), Array{Compose.Context, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Compose.Table, Array{Compose.Context, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.iterate), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, Int64})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:leftpad, :rightpad), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Compose.UnitBox{S, T, U, V} where V where U where T where S}, Compose.UnitBox{Int64, Float64, Float64, Float64}})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight, :units, :clip), T} where T<:Tuple}, Tuple{Nothing, Nothing, Compose.UnitBox{Int64, Float64, Float64, Float64}, Bool}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight, :units, :clip), Tuple{Nothing, Nothing, Compose.UnitBox{Int64, Float64, Float64, Float64}, Bool}}, typeof(Compose.context)})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#84#89")), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Compose.Context, 1}, 1}, Array{Compose.Context, 1}, Base.Generator{Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, getfield(Gadfly.Guide, Symbol("#84#89"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, getfield(Gadfly.Guide, Symbol("#84#89"))}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#85#90")), Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Compose.Context, 1}, 1}, Array{Compose.Context, 1}, Base.Generator{Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, getfield(Gadfly.Guide, Symbol("#85#90"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Array{Compose.Context, 1}, Int64}, 1}, getfield(Gadfly.Guide, Symbol("#85#90"))}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Array{Any, 1}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Array{Any, 1}, Array{Any, 1}, Tuple{Compose.Context, Compose.Context}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Compose.Context, 1}}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Array{Compose.Context, 1}, Array{Compose.Context, 1}, Array{Compose.Context, 1}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Array{Any, 1}, Tuple{Compose.Context, Compose.Context}, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Nothing, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Nothing, Float64, Symbol})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Nothing, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Nothing, Float64, Symbol})
precompile(Tuple{typeof(Compose.pad_inner), Compose.Context, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.pad_inner), Compose.Context, Measures.Length{:mm, Float64}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:minwidth, :minheight), Tuple{Nothing, Nothing}}, typeof(Compose.context), Measures.Length{:w, Float64}, Measures.Length{:h, Float64}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}})
precompile(Tuple{typeof(Base.:(*)), Float64, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Measures.BoundingBox{P1, P2} where P2<:(Tuple{Vararg{Measures.Measure, N}} where N) where P1<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{Type{Measures.BoundingBox{P1, P2} where P2<:(Tuple{Vararg{Measures.Measure, N}} where N) where P1<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base.getproperty), Compose.ListNode{Compose.Container}, Symbol})
precompile(Tuple{typeof(Compose.order), Compose.Context})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Add{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Base.getproperty), Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Symbol})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.JSIncludePrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.JSIncludePrimitive, 1}, Compose.JSIncludePrimitive, Base.Generator{Array{Compose.JSIncludePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.JSIncludePrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.JSIncludePrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGClassPrimitive, 1}, Compose.SVGClassPrimitive, Base.Generator{Array{Compose.SVGClassPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.JSIncludePrimitive}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Type})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.JSIncludePrimitive}, Type{Compose.Property{Compose.JSIncludePrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.SVGClassPrimitive}, Type{Compose.Property{Compose.SVGClassPrimitive}}})
precompile(Tuple{Type{Compose.ImagePropertyState}, ColorTypes.RGBA{Float64}, ColorTypes.RGBA{Float64}, Array{Float64, 1}, Compose.LineCapButt, Compose.LineJoinMiter, Bool, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Nothing, Bool})
precompile(Tuple{typeof(Base.getindex), Array{Compose.SVGClassPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.SVGClassPrimitive})
precompile(Tuple{typeof(Base.getindex), Array{Compose.JSIncludePrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.JSIncludePrimitive})
precompile(Tuple{typeof(Compose.order), Compose.Table})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 2}, Int64, Base.Generator{Array{Array{Compose.Context, 1}, 2}, typeof(Base.length)}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{Compose.Context, 1}, 2}, typeof(Base.length)}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(Compose, Symbol("#61#66"))}})
precompile(Tuple{getfield(Compose, Symbol("#update_mincolrow_sizes!#65")){Compose.Table, Int64, Int64}, Array{Int64, 1}, Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{getfield(Compose, Symbol("#update_focused_col_widths!#63")){Compose.Table, Compose.ParentDrawContext, Array{Float64, 1}}, Array{Float64, 1}})
precompile(Tuple{getfield(Compose, Symbol("#update_focused_row_heights!#64")){Compose.Table, Compose.ParentDrawContext, Array{Float64, 1}}, Array{Float64, 1}})
precompile(Tuple{typeof(Compose.force_aspect_ratio!), Compose.Table, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Compose.realize_brute_force), Compose.Table, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.Table, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{getfield(Compose, Symbol("#61#66")), Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Base.UnitRange{Int64}, 1}, Base.Generator{Array{Any, 1}, getfield(Compose, Symbol("#61#66"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.UnitRange{Int64}, 1}, Base.UnitRange{Int64}, Base.Generator{Array{Any, 1}, getfield(Compose, Symbol("#61#66"))}, Int64})
precompile(Tuple{Type{NamedTuple{(:units, :order), T} where T<:Tuple}, Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Int64}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:units, :order), Tuple{Compose.UnitBox{Int64, Float64, Float64, Float64}, Int64}}, typeof(Compose.context)})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Compose.UnitBox{Int64, Float64, Float64, Float64}, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Float64, Float64, Float64, Symbol})
precompile(Tuple{Type{Measures.BoundingBox{P1, P2} where P2<:(Tuple{Vararg{Measures.Measure, N}} where N) where P1<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Compose.UnitBox{Int64, Float64, Float64, Float64}, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Nothing, Float64, Symbol})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Float64, Float64, Float64, Symbol})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.UnitBox{Int64, Float64, Float64, Float64}})
precompile(Tuple{typeof(Base.:(>=)), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.order), Compose.AdhocContainerPromise})
precompile(Tuple{typeof(Compose.realize), Compose.AdhocContainerPromise, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.AdhocContainerPromise, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#68#70")){Gadfly.Guide.XLabel, Gadfly.Theme, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.text), Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HCenter, Compose.VTop})
precompile(Tuple{typeof(Base.getproperty), Compose.ListNode{Compose.Form{P} where P<:Compose.FormPrimitive}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.FontSizePrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FontSizePrimitive, 1}, Compose.FontSizePrimitive, Base.Generator{Array{Compose.FontSizePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.FontSizePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Compose.FontSizePrimitive}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FontPrimitive, 1}, Compose.FontPrimitive, Base.Generator{Array{Compose.FontPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FillPrimitive, 1}, Compose.FillPrimitive, Base.Generator{Array{Compose.FillPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.StrokePrimitive, 1}, Compose.StrokePrimitive, Base.Generator{Array{Compose.StrokePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FontSizePrimitive}, Type{Compose.Property{Compose.FontSizePrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FontPrimitive}, Type{Compose.Property{Compose.FontPrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FillPrimitive}, Type{Compose.Property{Compose.FillPrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.StrokePrimitive}, Type{Compose.Property{Compose.StrokePrimitive}}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.FontSizePrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FontSizePrimitive})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.convert), Type{Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.FontPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FontPrimitive})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, String})
precompile(Tuple{typeof(Base.getindex), Array{Compose.StrokePrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.StrokePrimitive})
precompile(Tuple{typeof(Base.getindex), Array{Compose.FillPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FillPrimitive})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Float64, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HCenter, Compose.VTop, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{Type{Compose.Form{P} where P<:Compose.FormPrimitive}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.isempty), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.batch), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Compose.vector_properties_require_push_pop), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.push_vector_properties), Compose.Image{Compose.PDFBackend}, Int64})
precompile(Tuple{typeof(Compose.rotate), Compose.Image{Compose.PDFBackend}, Float64, Float64, Float64})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Type{T} where T})
precompile(Tuple{typeof(Cairo.set_text), Cairo.CairoContext, String, Bool})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#35#44")){Gadfly.Theme, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{AbstractString, 1}, Base.LogicalIndex{Int64, Array{Bool, 1}}})
precompile(Tuple{typeof(Base.getindex), Array{AbstractString, 1}, Array{Bool, 1}})
precompile(Tuple{getfield(Compose, Symbol("##text#26")), Symbol, typeof(Compose.text), Array{Float64, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{AbstractString, 1}, Array{Compose.HCenter, 1}, Array{Compose.VTop, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Float64, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{AbstractString, 1}, Array{Compose.HCenter, 1}, Array{Compose.VTop, 1}})
precompile(Tuple{Type{Compose.TextPrimitive{P, R, O} where O<:(Tuple{Vararg{Measures.Measure, N}} where N) where R<:(Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)) where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, String, Compose.HCenter, Compose.VTop, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{getfield(Compose, Symbol("##text#26")), Symbol, typeof(Compose.text), Array{Float64, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{AbstractString, 1}, Array{Compose.HCenter, 1}, Array{Compose.VBottom, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Float64, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{AbstractString, 1}, Array{Compose.HCenter, 1}, Array{Compose.VBottom, 1}})
precompile(Tuple{Type{Compose.TextPrimitive{P, R, O} where O<:(Tuple{Vararg{Measures.Measure, N}} where N) where R<:(Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)) where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, String, Compose.HCenter, Compose.VBottom, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#7#15")){Measures.Length{:mm, Float64}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#7#15")){Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#8#16"))}})
precompile(Tuple{typeof(Base.copyto!), Array{AbstractString, 1}, Base.ValueIterator{OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#6#14")){Array{Int64, 1}, Measures.Length{:mm, Float64}, Array{Measures.Measure, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Gadfly.Theme, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.context), Measures.Length{:mm, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base.:(+)), Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}})
precompile(Tuple{getfield(Compose, Symbol("#kw##context")), NamedTuple{(:units,), Tuple{Compose.UnitBox{Int64, Int64, Int64, Int64}}}, typeof(Compose.context), Int64, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}}, Base.UnitRange{Int64}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#7#15")){Measures.Length{:mm, Float64}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, 1}, Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#7#15")){Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{typeof(Compose.rectangle), Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, 1}, Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Length{:mm, Float64}, 1}, Symbol})
precompile(Tuple{typeof(Compose.rectangle), Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, 1}, Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.allocatedinline), Type{ColorTypes.Color{T, N} where N where T}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.Color{T, N} where N where T, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.Color{T, N} where N where T, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.default_discrete_highlight_color), Tuple{Array{ColorTypes.Color{T, N} where N where T, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, typeof(Gadfly.default_discrete_highlight_color), Tuple{Base.Broadcast.Extruded{Array{ColorTypes.Color{T, N} where N where T, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.default_discrete_highlight_color), Tuple{Array{ColorTypes.Color{T, N} where N where T, 1}}}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.StrokePrimitive, 1}, Base.Generator{Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, getfield(Compose, Symbol("#42#43"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, getfield(Compose, Symbol("#42#43"))}})
precompile(Tuple{typeof(Compose.stroke), Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.FillPrimitive, 1}, Base.Generator{Array{ColorTypes.Color{T, N} where N where T, 1}, getfield(Compose, Symbol("#44#45"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{ColorTypes.Color{T, N} where N where T, 1}, getfield(Compose, Symbol("#44#45"))}})
precompile(Tuple{typeof(Base.fill), Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{getfield(Compose, Symbol("#44#45")), ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}, Compose.Property{Compose.StrokePrimitive}, Compose.Property{Compose.FillPrimitive}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Property{Compose.StrokePrimitive}, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.vect), Measures.Length{:mm, Float64}})
precompile(Tuple{getfield(Compose, Symbol("##text#26")), Symbol, typeof(Compose.text), Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Length{:cy, Int64}, 1}, Array{AbstractString, 1}, Array{Compose.HLeft, 1}, Array{Compose.VCenter, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Length{:cy, Int64}, 1}, Array{AbstractString, 1}, Array{Compose.HLeft, 1}, Array{Compose.VCenter, 1}})
precompile(Tuple{Type{Compose.TextPrimitive{P, R, O} where O<:(Tuple{Vararg{Measures.Measure, N}} where N) where R<:(Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)) where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, String, Compose.HLeft, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Compose.context), Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#9#17")){getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}}, Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Array{ColorTypes.Color{T, N} where N where T, 1}, getfield(Gadfly.Guide, Symbol("#9#17")){getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{ColorTypes.Color{T, N} where N where T, 1}, getfield(Gadfly.Guide, Symbol("#9#17")){getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#9#17")){getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}}, ColorTypes.RGB{Float32}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#10#18")), Array{String, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{String, 1}, getfield(Gadfly.Guide, Symbol("#10#18"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{String, 1}, getfield(Gadfly.Guide, Symbol("#10#18"))}})
precompile(Tuple{typeof(Compose.jscall), Array{String, 1}, Array{Array{Measures.Measure, 1}, 1}})
precompile(Tuple{typeof(Compose.jscall), Array{String, 1}})
precompile(Tuple{typeof(Base.:(+)), Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.JSCallPrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.JSCallPrimitive, 1}, Compose.JSCallPrimitive, Base.Generator{Array{Compose.JSCallPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.JSCallPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.JSCallPrimitive}, Type{Compose.Property{Compose.JSCallPrimitive}}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.JSCallPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.JSCallPrimitive})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Int64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:cx, Int64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.UnitBox{Int64, Int64, Int64, Int64}})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.Context, Compose.IdentityTransform, Compose.UnitBox{Int64, Int64, Int64, Int64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.JSCallPrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.JSCallPrimitive, 1}, Compose.JSCallPrimitive, Base.Generator{Array{Compose.JSCallPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.JSCallPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGClassPrimitive, 1}, Compose.SVGClassPrimitive, Base.Generator{Array{Compose.SVGClassPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Type})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.JSCallPrimitive}, Type{Compose.Property{Compose.JSCallPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.SVGClassPrimitive}, Type{Compose.Property{Compose.SVGClassPrimitive}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FillPrimitive, 1}, Compose.FillPrimitive, Base.Generator{Array{Compose.FillPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.FontSizePrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FontSizePrimitive, 1}, Compose.FontSizePrimitive, Base.Generator{Array{Compose.FontSizePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.FontSizePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FontPrimitive, 1}, Compose.FontPrimitive, Base.Generator{Array{Compose.FontPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HLeft, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FillOpacityPrimitive, 1}, Compose.FillOpacityPrimitive, Base.Generator{Array{Compose.FillOpacityPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.StrokePrimitive, 1}, Compose.StrokePrimitive, Base.Generator{Array{Compose.StrokePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FillOpacityPrimitive}, Type{Compose.Property{Compose.FillOpacityPrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.FillOpacityPrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FillOpacityPrimitive, 1}, Compose.FillOpacityPrimitive, Base.Generator{Array{Float64, 1}, Type{Compose.FillOpacityPrimitive}}, Int64})
precompile(Tuple{typeof(Compose.fillopacity), Array{Float64, 1}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokePrimitive}, Type{Compose.Property{Compose.StrokePrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillOpacityPrimitive}, Type{Compose.Property{Compose.FillOpacityPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillPrimitive}, Type{Compose.Property{Compose.FillPrimitive}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Base.Generator{Array{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Tuple{Measures.Length{:mm, Float64}, Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{Type{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Symbol})
precompile(Tuple{typeof(Base.isempty), Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.fillstroke), Compose.Image{Compose.PDFBackend}, Bool})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{Type{Base.Pair{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}}, Any, Any})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FillOpacityPrimitive})
precompile(Tuple{typeof(Base.getproperty), Compose.Property{Compose.FillOpacityPrimitive}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.StrokePrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.FillOpacityPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.FillPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.JSCallPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.SVGClassPrimitive}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:mm, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HLeft, Compose.VBottom, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.vect), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Vararg{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, N} where N})
precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Array{Array{T, 1} where T, 1}, getfield(Compose, Symbol("#1#2"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Array{T, 1} where T, 1}, getfield(Compose, Symbol("#1#2"))}})
precompile(Tuple{typeof(Compose.narrow_polygon_point_types), Array{Array{T, 1} where T, 1}})
precompile(Tuple{typeof(Compose.clip), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{getfield(Compose, Symbol("#1#2")), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.type_params), Type{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base._array_for), Type{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Base.HasShape{1}})
precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Int64})
precompile(Tuple{Type{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Base.getindex), Type{Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, Base.IndexLinear, Array{Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{Type{Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}}, Array{Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Type{Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, Int64})
precompile(Tuple{typeof(Base.allocatedinline), Type{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.push!), Array{Tuple{Int64, Int64, Compose.Container}, 1}, Tuple{Int64, Int64, Compose.Context}})
precompile(Tuple{typeof(Base.isless), Tuple{Compose.Context}, Tuple{Compose.Context}})
precompile(Tuple{typeof(Base.Order.lt), Base.Order.ForwardOrdering, Tuple{Int64, Int64, Compose.Context}, Tuple{Int64, Int64, Compose.Context}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.SVGAttributePrimitive, 1}, Compose.SVGAttributePrimitive, Base.Generator{Array{Compose.SVGAttributePrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.SVGAttributePrimitive}, Type{Compose.Property{Compose.SVGAttributePrimitive}}})
precompile(Tuple{Type{Compose.ImagePropertyState}, ColorTypes.RGBA{Float64}, ColorTypes.RGBA{Float64}, Array{Float64, 1}, Compose.LineCapButt, Compose.LineJoinMiter, Bool, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Bool})
precompile(Tuple{typeof(Base.getindex), Array{Compose.SVGAttributePrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.SVGAttributePrimitive})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Base.Generator{Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Compose.batch), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#48#49")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.StrokeDashPrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.StrokeDashPrimitive, 1}, Compose.StrokeDashPrimitive, Base.Generator{Array{Compose.StrokeDashPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.StrokeDashPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#48#49")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Length{:mm, Float64}}, Array{Measures.Measure, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Measures.Length{:mm, Float64}, 1}, Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#48#49")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#48#49")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{Type{Compose.StrokeDashPrimitive}, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.LineWidthPrimitive})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.LineWidthPrimitive, 1}, Compose.LineWidthPrimitive, Base.Generator{Array{Compose.LineWidthPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.LineWidthPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{Type{Compose.LineWidthPrimitive}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.StrokeDashPrimitive}, Type{Compose.Property{Compose.StrokeDashPrimitive}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.LineWidthPrimitive}, Type{Compose.Property{Compose.LineWidthPrimitive}}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.StrokeDashPrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#141#142")){Compose.Image{Compose.PDFBackend}}}, Int64, Int64})
precompile(Tuple{typeof(Base._collect), Array{Measures.Measure, 1}, Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#141#142")){Compose.Image{Compose.PDFBackend}}}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.StrokeDashPrimitive})
precompile(Tuple{getfield(Compose, Symbol("#141#142")){Compose.Image{Compose.PDFBackend}}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.LineWidthPrimitive, 1}, Int64})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.LineWidthPrimitive})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}, Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Length{:cy, Float64}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.isempty), Array{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.batch), Compose.Form{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(*)), Tuple{Base.Broadcast.Extruded{Array{Float64, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Measures.Length{:mm, Float64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Compose.arrowhead), Compose.Image{Compose.PDFBackend}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Float64, Float64})
precompile(Tuple{typeof(Compose.arrow), Compose.Image{Compose.PDFBackend}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Float64}, Measures.Length{:h, Float64}}})
precompile(Tuple{Type{Compose.StrokeDashPrimitive}, Array{Any, 1}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokeDashPrimitive}, Type{Compose.Property{Compose.StrokeDashPrimitive}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.StrokeDashPrimitive}}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#54#63")){Gadfly.Theme, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{getfield(Compose, Symbol("##text#26")), Symbol, typeof(Compose.text), Array{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{Float64, 1}, Array{AbstractString, 1}, Array{Compose.HRight, 1}, Array{Compose.VCenter, 1}, Array{Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, 1}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.text), Array{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{Float64, 1}, Array{AbstractString, 1}, Array{Compose.HRight, 1}, Array{Compose.VCenter, 1}})
precompile(Tuple{Type{Compose.TextPrimitive{P, R, O} where O<:(Tuple{Vararg{Measures.Measure, N}} where N) where R<:(Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)) where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, String, Compose.HRight, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Compose.resolve_position), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HRight, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#74#76")){Gadfly.Guide.YLabel, Gadfly.Theme, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{typeof(Compose.text), Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HCenter, Compose.VCenter, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HCenter, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Measure, Measures.Measure}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Cairo.destroy), Cairo.CairoSurfaceIOStream{UInt32}})
precompile(Tuple{typeof(Cairo.destroy), Cairo.CairoContext})
