precompile(Tuple{Base.Colon, Float64, Float64, Float64})
precompile(Tuple{Base.Colon, Float64, Int64, Float64})
precompile(Tuple{Base.Colon, Int64, Float64, Int64})
precompile(Tuple{Base.Colon, Int64, Int64, Float64})
precompile(Tuple{Base.CoreLogging.var"#@debug", LineNumberNode, Module, Vararg{Any, N} where N})
precompile(Tuple{Base.Multimedia.var"#@MIME_str", LineNumberNode, Module, Any})
precompile(Tuple{Base.Sort.var"##sortperm#12", Base.Sort.QuickSortAlg, Function, Function, Nothing, Base.Order.ForwardOrdering, typeof(Base.sortperm), Array{Int64, 1}})
precompile(Tuple{Base.Sort.var"#defalg##kw", NamedTuple{(:alg, :cols), Tuple{Nothing, Symbol}}, typeof(Base.Sort.defalg), DataFrames.DataFrame, Base.Order.Perm{Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Array{Number, 1}}})
precompile(Tuple{Base.var"##any#696", Function, typeof(Base.any), Function, Array{Int64, 1}})
precompile(Tuple{Base.var"##any#696", Function, typeof(Base.any), Function, Array{Union{Base.Missing, Float64}, 1}})
precompile(Tuple{Base.var"##any#696", Function, typeof(Base.any), Function, Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{Base.var"##open#317", Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), Mmap.var"#7#8"{Array{UInt8, 1}, Bool, Bool, Tuple{Int64}, Int64}, String, Vararg{String, N} where N})
precompile(Tuple{Base.var"##s77#169", Any, Any, Any, Any, Any})
precompile(Tuple{Base.var"##sprint#385", Nothing, Int64, typeof(Base.sprint), Function, Base.Set{AbstractString}, Vararg{Any, N} where N})
precompile(Tuple{Base.var"#@_inline_meta", LineNumberNode, Module})
precompile(Tuple{Base.var"#@assert", LineNumberNode, Module, Any, Vararg{Any, N} where N})
precompile(Tuple{Base.var"#@eval", LineNumberNode, Module, Any})
precompile(Tuple{Base.var"#sort!##kw", NamedTuple{(:by,), Tuple{Gadfly.Guide.var"#98#107"}}, typeof(Base.sort!), Array{Gadfly.Guide.PositionedGuide, 1}})
precompile(Tuple{Base.var"#sort!##kw", NamedTuple{(:by,), Tuple{Gadfly.Guide.var"#99#108"}}, typeof(Base.sort!), Array{Gadfly.Guide.PositionedGuide, 1}})
precompile(Tuple{Base.var"#sort##kw", NamedTuple{(:rev,), Tuple{Bool}}, typeof(Base.sort), DataFrames.DataFrame, Symbol})
precompile(Tuple{CategoricalArrays.var"#103#115"})
precompile(Tuple{CategoricalArrays.var"#104#116"})
precompile(Tuple{CategoricalArrays.var"#105#117"})
precompile(Tuple{CategoricalArrays.var"#109#121"})
precompile(Tuple{CategoricalArrays.var"#110#122"})
precompile(Tuple{CategoricalArrays.var"#111#123"})
precompile(Tuple{Compose.var"##PDF#135", Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Compose.PDF), String, Vararg{Any, N} where N})
precompile(Tuple{Compose.var"##_#130", Float64, Float64, ColorTypes.RGBA{Float64}, ColorTypes.RGBA{Float64}, Array{Any, 1}, Compose.LineCapButt, Compose.LineJoinMiter, Bool, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Nothing, Bool, Array{Compose.ImagePropertyState, 1}, Array{Compose.ImagePropertyFrame, 1}, Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Bool, Bool, String, Bool, Bool, Float64, Nothing, Nothing, Type{Compose.Image{Compose.PDFBackend}}, Cairo.CairoSurfaceIOStream{UInt32}, Cairo.CairoContext, Base.IOStream})
precompile(Tuple{Compose.var"#114#120"})
precompile(Tuple{Compose.var"#115#121"})
precompile(Tuple{Compose.var"#116#122"})
precompile(Tuple{Compose.var"#137#139", Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{Compose.var"#137#139", Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{Compose.var"#137#139", Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{Compose.var"#137#139", Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{Compose.var"#137#139", Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{Compose.var"#137#139", Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{Compose.var"#137#139", Compose.Property{Compose.JSIncludePrimitive}})
precompile(Tuple{Compose.var"#137#139", Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{Compose.var"#137#139", Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{Compose.var"#137#139", Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{Compose.var"#137#139", Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{Compose.var"#137#139", Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{Compose.var"#138#140", Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{Compose.var"#138#140", Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{Compose.var"#138#140", Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{Compose.var"#138#140", Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{Compose.var"#138#140", Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{Compose.var"#141#142"{Compose.Image{Compose.PDFBackend}}, Measures.Length{:mm, Float64}})
precompile(Tuple{Compose.var"#40#41"{Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{Compose.var"#44#45", ColorTypes.RGB{Float32}})
precompile(Tuple{Compose.var"#48#49"{Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}, Measures.Length{:mm, Float64}})
precompile(Tuple{Compose.var"#61#66", Int64})
precompile(Tuple{Compose.var"#9#10"{Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}, Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}})
precompile(Tuple{Compose.var"#context##kw", NamedTuple{(:minwidth, :minheight), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, typeof(Compose.context)})
precompile(Tuple{Compose.var"#context##kw", NamedTuple{(:minwidth, :minheight), Tuple{Nothing, Nothing}}, typeof(Compose.context), Measures.Length{:w, Float64}, Measures.Length{:h, Float64}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}})
precompile(Tuple{Compose.var"#context##kw", NamedTuple{(:minwidth, :minheight, :penalty), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Int64}}, typeof(Compose.context)})
precompile(Tuple{Compose.var"#context##kw", NamedTuple{(:minwidth, :minheight, :units), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Compose.UnitBox{Float64, Float64, Float64, Float64}}}, typeof(Compose.context)})
precompile(Tuple{Compose.var"#context##kw", NamedTuple{(:minwidth, :minheight, :units, :clip), Tuple{Nothing, Nothing, Compose.UnitBox{Int64, Float64, Int64, Float64}, Bool}}, typeof(Compose.context)})
precompile(Tuple{Compose.var"#context##kw", NamedTuple{(:units, :order), Tuple{Compose.UnitBox{Int64, Float64, Int64, Float64}, Int64}}, typeof(Compose.context)})
precompile(Tuple{Compose.var"#context##kw", NamedTuple{(:units, :raster), Tuple{Compose.UnitBox{Int64, Float64, Int64, Float64}, Bool}}, typeof(Compose.context)})
precompile(Tuple{Compose.var"#context##kw", NamedTuple{(:units,), Tuple{Compose.UnitBox{Float64, Float64, Float64, Float64}}}, typeof(Compose.context), Measures.Length{:mm, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{Compose.var"#context##kw", NamedTuple{(:units,), Tuple{Compose.UnitBox{Int64, Int64, Int64, Int64}}}, typeof(Compose.context), Int64, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{Core.Compiler.var"#256#258"{DataType, Tuple{Base.Colon}}, Int64})
precompile(Tuple{Core.Compiler.var"#256#258"{DataType, Tuple{Base.Sort.QuickSortAlg, Base.Order.ForwardOrdering}}, Int64})
precompile(Tuple{Core.Compiler.var"#256#258"{DataType, Tuple{Bool, Compose.UnitBox{Float64, Float64, Float64, Float64}}}, Int64})
precompile(Tuple{Core.Compiler.var"#256#258"{DataType, Tuple{Bool, Float64, Float64}}, Int64})
precompile(Tuple{Core.Compiler.var"#256#258"{DataType, Tuple{Compose.UnitBox{Float64, Float64, Float64, Float64}}}, Int64})
precompile(Tuple{Core.Compiler.var"#256#258"{DataType, Tuple{Float64, Float64}}, Int64})
precompile(Tuple{Core.Compiler.var"#256#258"{DataType, Tuple{Gadfly.Guide.var"#98#107"}}, Int64})
precompile(Tuple{Core.Compiler.var"#256#258"{DataType, Tuple{Gadfly.Guide.var"#99#108"}}, Int64})
precompile(Tuple{Core.Compiler.var"#256#258"{DataType, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{Core.Compiler.var"#256#258"{DataType, Tuple{Parsers.var"#1#2", Bool}}, Int64})
precompile(Tuple{Core.Compiler.var"#256#258"{DataType, Tuple{String}}, Int64})
precompile(Tuple{Core.var"#@doc", LineNumberNode, Module, Vararg{Any, N} where N})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:header, :normalizenames, :delim, :quotechar, :escapechar, :pool, :strict), Tuple{Int64, Bool, String, Char, Char, Bool, Bool}}, Type{CSV.File}, String})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:leftpad, :rightpad), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Compose.UnitBox{S, T, U, V} where V where U where T where S}, Compose.UnitBox{Int64, Float64, Int64, Float64}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:leftpad, :rightpad, :toppad, :bottompad), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Compose.UnitBox{S, T, U, V} where V where U where T where S}, Int64, Float64, Int64, Float64})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:linestyle,), Tuple{Array{String, 1}}}, Type{Gadfly.Data}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:location, :label, :color, :color_index, :day_date_min, :day_date_max, :day_index_max, :day_metric_max, :confirmed_max), Tuple{Array{String, 1}, Array{String, 1}, Array{ColorTypes.Colorant{T, N} where N where T, 1}, Array{Int64, 1}, Array{Dates.Date, 1}, Array{Dates.Date, 1}, Array{Int64, 1}, Array{Number, 1}, Array{Number, 1}}}, Type{DataFrames.DataFrame}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ticks,), Tuple{Array{Float64, 1}}}, Type{Gadfly.Guide.XTicks}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:ticks,), Tuple{Array{Float64, 1}}}, Type{Gadfly.Guide.YTicks}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:toppad, :bottompad), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Type{Compose.UnitBox{S, T, U, V} where V where U where T where S}, Compose.UnitBox{Int64, Float64, Int64, Float64}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:units, :aspect_ratio), Tuple{Compose.UnitBox{Int64, Float64, Int64, Float64}, Nothing}}, Type{Compose.Table}, Int64, Int64, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:xmin, :xmax), Tuple{Int64, Int64}}, Type{Gadfly.Coord.Cartesian}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:xmin, :xmax, :ymin, :ymax), Tuple{Int64, Int64, Float64, Float64}}, Type{Gadfly.Coord.Cartesian}})
precompile(Tuple{DataFrames.var"##make_unique!#1", Bool, typeof(DataFrames.make_unique!), Array{Symbol, 1}, Array{Symbol, 1}})
precompile(Tuple{DataFrames.var"#DataFrame#152#154", Bool, Type{DataFrames.DataFrame}, Array{AbstractArray{T, 1} where T, 1}, DataFrames.Index})
precompile(Tuple{DataFrames.var"#DataFrame#152#154", Bool, Type{DataFrames.DataFrame}, Array{Any, 1}, DataFrames.Index})
precompile(Tuple{DocStringExtensions.var"#32#33"{typeof(DocStringExtensions.template_hook)}, LineNumberNode, Vararg{Any, N} where N})
precompile(Tuple{Formatting.var"#11#12", Float64})
precompile(Tuple{Formatting.var"#11#12", Int64})
precompile(Tuple{Formatting.var"#13#14", Float64})
precompile(Tuple{Formatting.var"#2#5", Int64})
precompile(Tuple{Formatting.var"#3#6", Float64})
precompile(Tuple{Formatting.var"#format##kw", NamedTuple{(:commas, :precision), Tuple{Bool, Int64}}, typeof(Formatting.format), Float64})
precompile(Tuple{Formatting.var"#format##kw", NamedTuple{(:commas, :precision), Tuple{Bool, Int64}}, typeof(Formatting.format), Int64})
precompile(Tuple{Gadfly.Geom.var"#smooth##kw", NamedTuple{(:method, :smoothing), Tuple{Symbol, Float64}}, typeof(Gadfly.Geom.smooth)})
precompile(Tuple{Gadfly.Guide.var"#23#28"{OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}}, ColorTypes.Lab{Float64}})
precompile(Tuple{Gadfly.Guide.var"#35#44"{Gadfly.Theme, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{Gadfly.Guide.var"#54#63"{Gadfly.Theme, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{Gadfly.Guide.var"#6#14"{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Array{Measures.Measure, 1}, Measures.Length{:mm, Float64}, Array{Int64, 1}, Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, Gadfly.Scale.var"#labeler#64"{Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Gadfly.Theme, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.ParentDrawContext})
precompile(Tuple{Gadfly.Guide.var"#9#17"{Gadfly.Scale.var"#labeler#64"{Base.Dict{ColorTypes.RGB{Float32}, String}}}, ColorTypes.RGB{Float32}})
precompile(Tuple{Gadfly.Scale.var"##color_discrete_manual#56", Array{String, 1}, Nothing, typeof(Gadfly.Scale.color_discrete_manual), ColorTypes.LCHab{Float64}, Vararg{ColorTypes.LCHab{Float64}, N} where N})
precompile(Tuple{Gadfly.Scale.var"#27#29"{Gadfly.Scale.ContinuousScale}, Array{Float64, 1}})
precompile(Tuple{Gadfly.Scale.var"#31#33##kw", NamedTuple{(:format, :labels), Tuple{Symbol, Main.var"#41#54"}}, Gadfly.Scale.var"#31#33"{Gadfly.Scale.var"#31#32#34"{Array{Symbol, 1}, Gadfly.Scale.ContinuousScaleTransform}}})
precompile(Tuple{Gadfly.Scale.var"#31#33##kw", NamedTuple{(:format, :labels), Tuple{Symbol, Main.var"#42#55"}}, Gadfly.Scale.var"#31#33"{Gadfly.Scale.var"#31#32#34"{Array{Symbol, 1}, Gadfly.Scale.ContinuousScaleTransform}}})
precompile(Tuple{Gadfly.Scale.var"#31#33##kw", NamedTuple{(:format, :labels), Tuple{Symbol, Main.var"#49#62"}}, Gadfly.Scale.var"#31#33"{Gadfly.Scale.var"#31#32#34"{Array{Symbol, 1}, Gadfly.Scale.ContinuousScaleTransform}}})
precompile(Tuple{Gadfly.Scale.var"#57#58"{Array{ColorTypes.LCHab{Float32}, 1}}, Int64})
precompile(Tuple{Gadfly.Scale.var"#57#58"{Array{ColorTypes.LCHab{Float64}, 1}}, Int64})
precompile(Tuple{Gadfly.Scale.var"#61#65"{Base.Dict{ColorTypes.RGB{Float32}, String}}, ColorTypes.RGB{Float32}})
precompile(Tuple{Gadfly.Scale.var"#80#84"{Base.Dict{ColorTypes.Color{T, N} where N where T, AbstractString}}, ColorTypes.Lab{Float64}})
precompile(Tuple{Gadfly.Scale.var"#color_discrete_manual##kw", NamedTuple{(:levels,), Tuple{Array{String, 1}}}, typeof(Gadfly.Scale.color_discrete_manual), ColorTypes.LCHab{Float32}})
precompile(Tuple{Gadfly.Scale.var"#color_discrete_manual##kw", NamedTuple{(:levels,), Tuple{Array{String, 1}}}, typeof(Gadfly.Scale.color_discrete_manual), ColorTypes.LCHab{Float64}, Vararg{ColorTypes.LCHab{Float64}, N} where N})
precompile(Tuple{Gadfly.Scale.var"#default_labeler#45"{IndirectArrays.IndirectArray{String, 1, Int64, Array{Int64, 1}, Array{String, 1}}}, Array{Int64, 1}})
precompile(Tuple{Gadfly.Scale.var"#f#9"{Int64, Array{ColorTypes.Lab{Float64}, 1}}, Float64})
precompile(Tuple{Gadfly.Scale.var"#labeler#64"{Base.Dict{ColorTypes.RGB{Float32}, String}}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{Gadfly.Scale.var"#labeler#64"{Base.Dict{ColorTypes.RGB{Float32}, String}}, Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}})
precompile(Tuple{Gadfly.Scale.var"#labeler#83"{Base.Dict{ColorTypes.Color{T, N} where N where T, AbstractString}}, Base.KeySet{ColorTypes.Color{T, N} where N where T, Base.Dict{ColorTypes.Color{T, N} where N where T, Float64}}})
precompile(Tuple{Gadfly.Scale.var"#y_discrete##kw", NamedTuple{(:levels,), Tuple{Array{String, 1}}}, typeof(Gadfly.Scale.y_discrete)})
precompile(Tuple{Gadfly.Stat.var"#xticks##kw", NamedTuple{(:ticks,), Tuple{Array{Float64, 1}}}, typeof(Gadfly.Stat.xticks)})
precompile(Tuple{Gadfly.Stat.var"#yticks##kw", NamedTuple{(:ticks,), Tuple{Array{Float64, 1}}}, typeof(Gadfly.Stat.yticks)})
precompile(Tuple{Gadfly.Stat.var"#yticks##kw", NamedTuple{(:ticks,), Tuple{Symbol}}, typeof(Gadfly.Stat.yticks)})
precompile(Tuple{Gadfly.var"##plot#78", Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Gadfly.plot), Array{Gadfly.Layer, 1}, Vararg{Union{Array{Gadfly.Layer, 1}, Function, Gadfly.Element, Gadfly.Theme, Type}, N} where N})
precompile(Tuple{Gadfly.var"#105#125"{Base.Set{Symbol}, Base.Set{Symbol}}, Array{Symbol, 1}})
precompile(Tuple{Gadfly.var"#2#9"})
precompile(Tuple{Gadfly.var"#3#10"})
precompile(Tuple{Gadfly.var"#4#11"})
precompile(Tuple{Gadfly.var"#layer##kw", NamedTuple{(:x, :y, :color), Tuple{Symbol, Symbol, Symbol}}, typeof(Gadfly.layer), DataFrames.DataFrame, Gadfly.Geom.LineGeometry})
precompile(Tuple{Gadfly.var"#layer##kw", NamedTuple{(:x, :y, :color), Tuple{Symbol, Symbol, Symbol}}, typeof(Gadfly.layer), DataFrames.DataFrame, Type{Gadfly.Geom.RectangularBinGeometry}})
precompile(Tuple{Gadfly.var"#optimize_ticks##kw", NamedTuple{(:strict_span,), Tuple{Bool}}, typeof(Gadfly.optimize_ticks), Float64, Float64})
precompile(Tuple{Gadfly.var"#style##kw", NamedTuple{(:point_size, :line_width, :highlight_width, :grid_line_width, :grid_color, :major_label_font, :major_label_font_size, :major_label_color, :minor_label_font, :minor_label_font_size, :minor_label_color, :point_label_font, :point_label_font_size, :point_label_color, :key_title_font, :key_title_font_size, :key_title_color, :key_label_font, :key_label_font_size, :key_label_color, :key_position, :key_max_columns, :colorkey_swatch_shape, :discrete_highlight_color, :panel_fill, :panel_stroke, :plot_padding, :background_color, :default_color), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, ColorTypes.HSL{Float32}, String, Measures.Length{:mm, Float64}, ColorTypes.HSL{Float32}, String, Measures.Length{:mm, Float64}, ColorTypes.HSL{Float32}, String, Measures.Length{:mm, Float64}, ColorTypes.HSL{Float32}, String, Measures.Length{:mm, Float64}, ColorTypes.HSL{Float32}, String, Measures.Length{:mm, Float64}, ColorTypes.HSL{Float32}, Symbol, Int64, Symbol, Main.var"#39#40", Nothing, Nothing, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.HSL{Float32}, ColorTypes.HSL{Float32}}}, typeof(Gadfly.style)})
precompile(Tuple{Loess.var"#loess##kw", NamedTuple{(:span,), Tuple{Float64}}, typeof(Loess.loess), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{Main.var"#29#31", InlineStrings.String31})
precompile(Tuple{Main.var"#29#31", InlineStrings.String63})
precompile(Tuple{Main.var"#43#56", Float64, Array{ColorTypes.Lab{Float64}, 1}})
precompile(Tuple{Main.var"#45#58", Float64})
precompile(Tuple{Main.var"#48#61", Float64})
precompile(Tuple{Main.var"#50#63", Float64})
precompile(Tuple{Main.var"#50#63", Int64})
precompile(Tuple{Main.var"#52#65", Array{Float64, 1}})
precompile(Tuple{Mmap.var"#3#5"{Ptr{Nothing}, Int64}, Array{UInt8, 1}})
precompile(Tuple{PooledArrays.var"#1#2", PooledArrays.PooledArray{Base.Missing, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{PooledArrays.var"#1#2", PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{PooledArrays.var"#1#2", PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{PooledArrays.var"#1#2", PooledArrays.PooledArray{InlineStrings.String63, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{PooledArrays.var"#1#2", PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String15}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{PooledArrays.var"#1#2", PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String31}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{PooledArrays.var"#1#2", PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String3}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{PooledArrays.var"#1#2", PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{Printf.var"#@sprintf", LineNumberNode, Module, Any, Vararg{Any, N} where N})
precompile(Tuple{Ratios.var"#10#13"})
precompile(Tuple{Ratios.var"#11#14"})
precompile(Tuple{Ratios.var"#9#12"})
precompile(Tuple{StaticArrays.var"##s26#12", Any, Any, Any, Any})
precompile(Tuple{Type{Array{Array{Tuple{Int64, Float64}, 1}, 1}}, UndefInitializer, Int64})
precompile(Tuple{Type{Array{ColorTypes.RGB{Float32}, 1}}, UndefInitializer, Int64})
precompile(Tuple{Type{Array{ColorTypes.RGB{Float32}, N} where N}, UndefInitializer, Int64})
precompile(Tuple{Type{Array{Float64, N} where N}, UndefInitializer, Int64})
precompile(Tuple{Type{Array{Int64, N} where N}, UndefInitializer, Int64})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(&)), Tuple{Bool, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0}, Nothing, typeof(Base.:(<)), Tuple{Int64, Int64}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(<)), Tuple{Int64, Int64}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, DataFrames.var"#97#98"{Main.var"#1#2"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, DataFrames.var"#97#98"{Main.var"#10#12"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, DataFrames.var"#97#98"{Main.var"#13#14"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, DataFrames.var"#97#98"{Main.var"#15#16"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, DataFrames.var"#97#98"{Main.var"#17#19"{InlineStrings.String31}}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, DataFrames.var"#97#98"{Main.var"#17#19"{InlineStrings.String63}}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, DataFrames.var"#97#98"{Main.var"#18#20"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, DataFrames.var"#97#98"{Main.var"#21#22"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, DataFrames.var"#97#98"{Main.var"#23#24"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, DataFrames.var"#97#98"{Main.var"#3#6"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, DataFrames.var"#97#98"{Main.var"#30#32"{InlineStrings.String31}}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, DataFrames.var"#97#98"{Main.var"#30#32"{InlineStrings.String63}}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, DataFrames.var"#97#98"{Main.var"#33#34"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, DataFrames.var"#97#98"{Main.var"#35#36"{String}}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, DataFrames.var"#97#98"{Main.var"#37#38"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, DataFrames.var"#97#98"{Main.var"#5#8"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Main.var"#39#40", Tuple{Array{ColorTypes.Color{T, N} where N where T, 1}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{Float64}, Tuple{Array{Float64, 1}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, Type{Float64}, Tuple{Array{Int64, 1}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(!)), Tuple{Array{Bool, 1}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(!=)), Tuple{Array{Nothing, 1}, Base.RefValue{Nothing}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Array{Nothing, 1}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(*)), Tuple{Float64, Array{Float64, 1}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(+)), Tuple{Array{Float64, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, Array{Float64, 1}}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(+)), Tuple{Float64, Array{Float64, 1}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(-)), Tuple{Array{Float64, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, Array{Float64, 1}}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(-)), Tuple{Array{Float64, 1}, Float64}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.:(==)), Tuple{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64}, 1}, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64}, 1}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.abs2), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Array{Float64, 1}, Float64}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.mod1), Tuple{Array{Int64, 1}, Int64}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Base.sqrt), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{Float64, Array{Float64, 1}}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.get_stroke_vector), Tuple{Array{Symbol, 1}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.isconcrete), Tuple{Array{Union{Base.Missing, Float64}, 1}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.isconcrete), Tuple{Array{Union{Base.Missing, Int64}, 1}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(Gadfly.svg_color_class_from_label), Tuple{Array{String, 1}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(isa), Tuple{Array{Gadfly.Geom.LineGeometry, 1}, Base.RefValue{Type{Gadfly.Geom.SubplotGrid}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, typeof(isa), Tuple{Array{Gadfly.Geom.RectangularBinGeometry, 1}, Base.RefValue{Type{Gadfly.Geom.SubplotGrid}}}})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Array{Tuple{ColorTypes.RGB{Float32}, String}, 1}})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Dict{Symbol, Int64}})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, Gadfly.Stat.var"#29#31"{Gadfly.Aesthetics}}})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, Gadfly.Stat.var"#30#32"{Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}}})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Iterators.Flatten{Base.Generator{Base.Iterators.Zip{Tuple{Array{Any, 1}, Array{Any, 1}}}, Gadfly.var"#104#122"{Base.Set{Symbol}}}}})
precompile(Tuple{Type{Base.Dict{Type, Type}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, CSV.var"#10#13"{Bool}, Array{String, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Geom.var"#124#126"{Gadfly.Theme}, Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Geom.var"#125#127"{Gadfly.Theme}, Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Guide.var"#1#2"{Measures.Length{:mm, Float64}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Guide.var"#10#18", Array{String, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Guide.var"#101#110", Array{Gadfly.Guide.PositionedGuide, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Guide.var"#102#111", Array{Gadfly.Guide.PositionedGuide, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Guide.var"#19#24"{Gadfly.Theme, Measures.Length{:mm, Float64}}, Base.UnitRange{Int64}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Guide.var"#20#25"{Measures.Length{:mm, Float64}}, Base.ValueIterator{Base.Dict{ColorTypes.Color{T, N} where N where T, Float64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Guide.var"#31#40", Array{Float64, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Guide.var"#32#41", Array{Float64, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Guide.var"#5#13", Array{Tuple{Measures.Measure, Measures.Measure}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Guide.var"#50#59", Array{Float64, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Guide.var"#51#60", Array{Float64, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Guide.var"#9#17"{Gadfly.Scale.var"#labeler#64"{Base.Dict{ColorTypes.RGB{Float32}, String}}}, Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Guide.var"#make_layout#12"{Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, Gadfly.Scale.var"#labeler#64"{Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Int64}, Base.UnitRange{Int64}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Scale.var"#60#63", Base.Iterators.Zip{Tuple{Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Scale.var"#7#8", Tuple{ColorTypes.HSL{Float64}, ColorTypes.HSL{Float64}, ColorTypes.HSL{Float64}, ColorTypes.HSL{Float64}, ColorTypes.HSL{Float64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Scale.var"#7#8", Tuple{ColorTypes.HSL{Float64}, ColorTypes.HSL{Float64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Stat.var"#29#31"{Gadfly.Aesthetics}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.Stat.var"#30#32"{Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.var"#100#120", Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.var"#100#120", Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.RectangularBinGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.RectbinStatistic, Gadfly.Theme}, 1}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.var"#101#121"{Base.Set{Symbol}}, Array{Any, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.var"#104#122"{Base.Set{Symbol}}, Base.Iterators.Zip{Tuple{Array{Any, 1}, Array{Any, 1}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Gadfly.var"#128#130"{Base.Dict{Symbol, Gadfly.ScaleElement}}, Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Main.var"#41#54", Array{Float64, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Main.var"#42#55", Array{Float64, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Main.var"#46#59", Array{Float64, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Main.var"#47#60", Array{Float64, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, Main.var"#49#62", Array{Float64, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, typeof(Base.Iterators.cycle), Tuple{Array{Float64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Float64, 1}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, typeof(Base.Iterators.cycle), Tuple{IndirectArrays.IndirectArray{Int64, 1, UInt8, Array{UInt8, 1}, Array{Int64, 1}}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, typeof(Base.identity), Base.Iterators.Filter{Gadfly.Scale.var"#62#66", PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String31}, UInt32, 1, Array{UInt32, 1}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, typeof(Base.identity), Base.Iterators.Filter{Gadfly.Scale.var"#62#66", PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, typeof(Base.length), Tuple{Array{Float64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Float64, 1}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, typeof(Base.length), Tuple{IndirectArrays.IndirectArray{Int64, 1, UInt8, Array{UInt8, 1}, Array{Int64, 1}}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}}})
precompile(Tuple{Type{Base.Iterators.Filter{F, I} where I where F}, Gadfly.Scale.var"#62#66", PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String31}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{Type{Base.Iterators.Filter{F, I} where I where F}, Gadfly.Scale.var"#62#66", PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{Type{Base.Iterators.Flatten{I} where I}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Any, 1}, Array{Any, 1}}}, Gadfly.var"#104#122"{Base.Set{Symbol}}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Any, 1}, Array{Any, 1}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{String, 1}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Int64, 1}, Array{Float64, 1}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Base.Iterators.Cycle{Array{Float64, 1}}, Base.Iterators.Cycle{Array{ColorTypes.RGB{Float32}, 1}}, Base.Iterators.Cycle{Array{Float64, 1}}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Base.Iterators.Cycle{IndirectArrays.IndirectArray{Int64, 1, UInt8, Array{UInt8, 1}, Array{Int64, 1}}}, Base.Iterators.Cycle{IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, Base.Iterators.Cycle{IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}}}})
precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Float64, 1}})
precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Int64, 1}})
precompile(Tuple{Type{Base.LinearIndices{N, R} where R<:Tuple{Vararg{Base.AbstractUnitRange{Int64}, N}} where N}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{Type{Base.Multimedia.TextDisplay}, Base.IOContext{Base.PipeEndpoint}})
precompile(Tuple{Type{Base.Order.Perm{O, V} where V<:(AbstractArray{T, 1} where T) where O<:Base.Order.Ordering}, Base.Order.ForwardOrdering, Array{Int64, 1}})
precompile(Tuple{Type{Base.Order.Perm{O, V} where V<:(AbstractArray{T, 1} where T) where O<:Base.Order.Ordering}, Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Array{Number, 1}})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.Lab{Float64}, Base.Set{AbstractString}})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.Lab{Float64}, String})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, Base.Set{AbstractString}})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, String})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}})
precompile(Tuple{Type{Base.Pair{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}}, Any, Any})
precompile(Tuple{Type{Base.Set{T} where T}, Base.KeySet{Symbol, Base.Dict{Symbol, Any}}})
precompile(Tuple{Type{Base.Set{T} where T}, Tuple{Symbol, Symbol, Symbol, Symbol}})
precompile(Tuple{Type{Base.Set{T} where T}, Tuple{Symbol, Symbol}})
precompile(Tuple{Type{CSV.Context}, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg, CSV.Arg})
precompile(Tuple{Type{CSV.RefPool}, Type{InlineStrings.String15}})
precompile(Tuple{Type{CSV.RefPool}, Type{InlineStrings.String31}})
precompile(Tuple{Type{CSV.RefPool}, Type{InlineStrings.String3}})
precompile(Tuple{Type{CSV.RefPool}, Type{InlineStrings.String7}})
precompile(Tuple{Type{ColorTypes.HSL{T} where T<:AbstractFloat}, Int64, Float64, Float64})
precompile(Tuple{Type{ColorTypes.HSL{T} where T<:AbstractFloat}, Int64, Int64, Float64})
precompile(Tuple{Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, Int64, Int64, Float64})
precompile(Tuple{Type{Compose.CirclePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Float64, Float64, Float64, Symbol})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Float64, Float64, Float64, Symbol})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Compose.UnitBox{Int64, Float64, Int64, Float64}, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Nothing, Float64, Symbol})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Compose.UnitBox{Int64, Float64, Int64, Float64}, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Float64, Float64, Float64, Symbol})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Compose.UnitBox{Int64, Float64, Int64, Float64}, Nothing, Nothing, Nothing, Compose.ListNull{Compose.Container}, Compose.ListNode{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Float64, Float64, Float64, Symbol})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Nothing, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Nothing, Float64, Symbol})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Nothing, Nothing, Nothing, Nothing, Compose.ListNode{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Nothing, Float64, Symbol})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Nothing, Nothing, Nothing, Nothing, Compose.ListNull{Compose.Container}, Compose.ListNode{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Nothing, Float64, Symbol})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Nothing, Nothing, Nothing, Nothing, Compose.ListNull{Compose.Container}, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Nothing, Nothing, Float64, Symbol})
precompile(Tuple{Type{Compose.FontSizePrimitive}, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Compose.Form{P} where P<:Compose.FormPrimitive}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{Type{Compose.ImagePropertyState}, ColorTypes.RGBA{Float64}, ColorTypes.RGBA{Float64}, Array{Float64, 1}, Compose.LineCapButt, Compose.LineJoinMiter, Bool, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Bool})
precompile(Tuple{Type{Compose.ImagePropertyState}, ColorTypes.RGBA{Float64}, ColorTypes.RGBA{Float64}, Array{Float64, 1}, Compose.LineCapButt, Compose.LineJoinMiter, Bool, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Nothing, Bool})
precompile(Tuple{Type{Compose.Image{Compose.PDFBackend}}, String, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Compose.LineWidthPrimitive}, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}}, Array{Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{Type{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Array{Compose.FillOpacityPrimitive, 1}})
precompile(Tuple{Type{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Array{Compose.FillPrimitive, 1}})
precompile(Tuple{Type{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Compose.Rotation{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Float64, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{Type{Compose.StrokeDashPrimitive}, Array{Any, 1}})
precompile(Tuple{Type{Compose.StrokeDashPrimitive}, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HCenter, Compose.VTop, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HLeft, Compose.VBottom, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HLeft, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, String, Compose.HRight, Compose.VCenter, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{Type{Compose.UnitBox{S, T, U, V} where V where U where T where S}, Float64, Float64, Float64, Float64})
precompile(Tuple{Type{DataFrames.DataFrame}, CSV.File})
precompile(Tuple{Type{Distributions.TDist{T} where T<:Real}, Int64})
precompile(Tuple{Type{Gadfly.Guide.PositionedGuide}, Array{Compose.Context, 1}, Int64, Gadfly.Guide.RightGuidePosition, Bool})
precompile(Tuple{Type{Gadfly.Guide.Title}, String})
precompile(Tuple{Type{Gadfly.Scale.ContinuousColorScale}, Function, Gadfly.Scale.ContinuousScaleTransform, Float64, Float64})
precompile(Tuple{Type{InlineStrings.String15}, WeakRefStrings.PosLenString})
precompile(Tuple{Type{InlineStrings.String31}, WeakRefStrings.PosLenString})
precompile(Tuple{Type{InlineStrings.String3}, WeakRefStrings.PosLenString})
precompile(Tuple{Type{InlineStrings.String7}, WeakRefStrings.PosLenString})
precompile(Tuple{Type{Loess.KDInternalNode{Float64}}, Int64, Float64, Loess.KDInternalNode{Float64}, Loess.KDInternalNode{Float64}})
precompile(Tuple{Type{Loess.KDInternalNode{Float64}}, Int64, Float64, Loess.KDLeafNode, Loess.KDLeafNode})
precompile(Tuple{Type{Logging.ConsoleLogger}, Base.IOContext{Base.PipeEndpoint}})
precompile(Tuple{Type{Measures.BoundingBox{P1, P2} where P2<:(Tuple{Vararg{Measures.Measure, N}} where N) where P1<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Measures.BoundingBox{P1, P2} where P2<:(Tuple{Vararg{Measures.Measure, N}} where N) where P1<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{Type{Measures.BoundingBox{P1, P2} where P2<:(Tuple{Vararg{Measures.Measure, N}} where N) where P1<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{Type{NamedTuple{(:commas, :precision), T} where T<:Tuple}, Tuple{Bool, Int64}})
precompile(Tuple{Type{NamedTuple{(:format, :labels), T} where T<:Tuple}, Tuple{Symbol, Main.var"#41#54"}})
precompile(Tuple{Type{NamedTuple{(:format, :labels), T} where T<:Tuple}, Tuple{Symbol, Main.var"#42#55"}})
precompile(Tuple{Type{NamedTuple{(:format, :labels), T} where T<:Tuple}, Tuple{Symbol, Main.var"#49#62"}})
precompile(Tuple{Type{NamedTuple{(:header, :normalizenames, :delim, :quotechar, :escapechar, :pool, :strict), T} where T<:Tuple}, Tuple{Int64, Bool, String, Char, Char, Bool, Bool}})
precompile(Tuple{Type{NamedTuple{(:levels,), T} where T<:Tuple}, Tuple{Array{String, 1}}})
precompile(Tuple{Type{NamedTuple{(:linestyle,), T} where T<:Tuple}, Tuple{Array{String, 1}}})
precompile(Tuple{Type{NamedTuple{(:location, :label, :color, :color_index, :day_date_min, :day_date_max, :day_index_max, :day_metric_max, :confirmed_max), T} where T<:Tuple}, Tuple{Array{String, 1}, Array{String, 1}, Array{ColorTypes.Colorant{T, N} where N where T, 1}, Array{Int64, 1}, Array{Dates.Date, 1}, Array{Dates.Date, 1}, Array{Int64, 1}, Array{Number, 1}, Array{Number, 1}}})
precompile(Tuple{Type{NamedTuple{(:method, :smoothing), T} where T<:Tuple}, Tuple{Symbol, Float64}})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight, :penalty), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Int64}})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight, :units), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Compose.UnitBox{Float64, Float64, Float64, Float64}}})
precompile(Tuple{Type{NamedTuple{(:minwidth, :minheight, :units, :clip), T} where T<:Tuple}, Tuple{Nothing, Nothing, Compose.UnitBox{Int64, Float64, Int64, Float64}, Bool}})
precompile(Tuple{Type{NamedTuple{(:point_size, :line_width, :highlight_width, :grid_line_width, :grid_color, :major_label_font, :major_label_font_size, :major_label_color, :minor_label_font, :minor_label_font_size, :minor_label_color, :point_label_font, :point_label_font_size, :point_label_color, :key_title_font, :key_title_font_size, :key_title_color, :key_label_font, :key_label_font_size, :key_label_color, :key_position, :key_max_columns, :colorkey_swatch_shape, :discrete_highlight_color, :panel_fill, :panel_stroke, :plot_padding, :background_color, :default_color), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, ColorTypes.HSL{Float32}, String, Measures.Length{:mm, Float64}, ColorTypes.HSL{Float32}, String, Measures.Length{:mm, Float64}, ColorTypes.HSL{Float32}, String, Measures.Length{:mm, Float64}, ColorTypes.HSL{Float32}, String, Measures.Length{:mm, Float64}, ColorTypes.HSL{Float32}, String, Measures.Length{:mm, Float64}, ColorTypes.HSL{Float32}, Symbol, Int64, Symbol, Main.var"#39#40", Nothing, Nothing, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.HSL{Float32}, ColorTypes.HSL{Float32}}})
precompile(Tuple{Type{NamedTuple{(:ticks,), T} where T<:Tuple}, Tuple{Array{Float64, 1}}})
precompile(Tuple{Type{NamedTuple{(:ticks,), T} where T<:Tuple}, Tuple{Symbol}})
precompile(Tuple{Type{NamedTuple{(:units, :aspect_ratio), T} where T<:Tuple}, Tuple{Compose.UnitBox{Int64, Float64, Int64, Float64}, Nothing}})
precompile(Tuple{Type{NamedTuple{(:units, :order), T} where T<:Tuple}, Tuple{Compose.UnitBox{Int64, Float64, Int64, Float64}, Int64}})
precompile(Tuple{Type{NamedTuple{(:units, :raster), T} where T<:Tuple}, Tuple{Compose.UnitBox{Int64, Float64, Int64, Float64}, Bool}})
precompile(Tuple{Type{NamedTuple{(:x, :y, :color), T} where T<:Tuple}, Tuple{Symbol, Symbol, Symbol}})
precompile(Tuple{Type{NamedTuple{(:xmin, :xmax), T} where T<:Tuple}, Tuple{Int64, Int64}})
precompile(Tuple{Type{NamedTuple{(:xmin, :xmax, :ymin, :ymax), T} where T<:Tuple}, Tuple{Int64, Int64, Float64, Float64}})
precompile(Tuple{Type{Parsers.Options}, Base.Missing, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, UInt8, Array{String, 1}, Array{String, 1}, Nothing, Bool, Bool, Nothing, Bool, Bool})
precompile(Tuple{Type{Printf.Format{S, T} where T where S}, Base.CodeUnits{UInt8, String}, Array{Base.UnitRange{Int64}, 1}, Tuple{Printf.Spec{Base.Val{Char(0x64000000)}}}})
precompile(Tuple{Type{Printf.Format{S, T} where T where S}, Base.CodeUnits{UInt8, String}, Array{Base.UnitRange{Int64}, 1}, Tuple{Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x66000000)}}}})
precompile(Tuple{Type{Printf.Format{S, T} where T where S}, Base.CodeUnits{UInt8, String}, Array{Base.UnitRange{Int64}, 1}, Tuple{Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}}})
precompile(Tuple{Type{Printf.Spec{Base.Val{Char(0x64000000)}}}, Bool, Bool, Bool, Bool, Bool, Int64, Int64})
precompile(Tuple{Type{REPL.Terminals.TTYTerminal}, String, Base.IOStream, Base.IOContext{Base.PipeEndpoint}, Base.IOContext{Base.PipeEndpoint}})
precompile(Tuple{Type{SentinelArrays.SentinelArray{Dates.Date, 1, S, V, A} where A<:AbstractArray{Dates.Date, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{Float64, 1, S, V, A} where A<:AbstractArray{Float64, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{Type{SentinelArrays.SentinelArray{Int64, 1, S, V, A} where A<:AbstractArray{Int64, 1} where V where S}, UndefInitializer, Int64})
precompile(Tuple{typeof(Base.:(!=)), Float64, Float64})
precompile(Tuple{typeof(Base.:(!=)), InlineStrings.String31, String})
precompile(Tuple{typeof(Base.:(*)), Float64, Float64})
precompile(Tuple{typeof(Base.:(*)), Float64, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(*)), Int64, Float64})
precompile(Tuple{typeof(Base.:(*)), Int64, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(*)), Int64})
precompile(Tuple{typeof(Base.:(*)), Measures.Length{:mm, Float64}, Float64})
precompile(Tuple{typeof(Base.:(*)), Measures.Length{:mm, Float64}, Int64})
precompile(Tuple{typeof(Base.:(+)), Int64, Float64})
precompile(Tuple{typeof(Base.:(+)), Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(+)), Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(+)), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(+)), Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(+)), UInt64, Int64})
precompile(Tuple{typeof(Base.:(-)), Float64, Int64})
precompile(Tuple{typeof(Base.:(-)), Int64, Float64})
precompile(Tuple{typeof(Base.:(-)), Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:cx, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:cy, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(-)), Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(/)), Array{Float64, 1}, Float64})
precompile(Tuple{typeof(Base.:(/)), Float64, Int64})
precompile(Tuple{typeof(Base.:(/)), Int64, Float64})
precompile(Tuple{typeof(Base.:(/)), Measures.Length{:mm, Float64}, Int64})
precompile(Tuple{typeof(Base.:(/)), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(<)), Float64, Float64})
precompile(Tuple{typeof(Base.:(<)), Float64, Int64})
precompile(Tuple{typeof(Base.:(<)), Int64, Float64})
precompile(Tuple{typeof(Base.:(<=)), Float64, Float64})
precompile(Tuple{typeof(Base.:(<=)), Float64, Int64})
precompile(Tuple{typeof(Base.:(==)), Compose.ListNode{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNode{Compose.Form{P} where P<:Compose.FormPrimitive}})
precompile(Tuple{typeof(Base.:(==)), Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}})
precompile(Tuple{typeof(Base.:(==)), Float64, Int64})
precompile(Tuple{typeof(Base.:(==)), Function, Function})
precompile(Tuple{typeof(Base.:(==)), InlineStrings.String15, String})
precompile(Tuple{typeof(Base.:(==)), InlineStrings.String31, InlineStrings.String31})
precompile(Tuple{typeof(Base.:(==)), InlineStrings.String31, String})
precompile(Tuple{typeof(Base.:(==)), InlineStrings.String63, InlineStrings.String63})
precompile(Tuple{typeof(Base.:(==)), InlineStrings.String63, String})
precompile(Tuple{typeof(Base.:(>)), Float64, Float64})
precompile(Tuple{typeof(Base.:(>)), Float64, Int64})
precompile(Tuple{typeof(Base.:(>)), Int64, Float64})
precompile(Tuple{typeof(Base.:(>=)), Base.CoreLogging.LogLevel, Base.CoreLogging.LogLevel})
precompile(Tuple{typeof(Base.:(>=)), Float64, Float64})
precompile(Tuple{typeof(Base.:(>=)), Float64, Int64})
precompile(Tuple{typeof(Base.:(>=)), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.:(^)), Int64, Float64})
precompile(Tuple{typeof(Base.:(|)), Bool, Bool})
precompile(Tuple{typeof(Base.Broadcast.broadcastable), Type{Gadfly.Geom.SubplotGrid}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Bool, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float64, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float64, 1}, Float64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float64, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Gadfly.Geom.LineGeometry, 1}, Type})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Gadfly.Geom.RectangularBinGeometry, 1}, Type})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Nothing, 1}, Nothing})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{String, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64}, 1}, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64}, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Union{Base.Missing, Float64}, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Array{Nothing, 1}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{Float64, Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Array{Float64, 1}, Float64}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Bool, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0}, Nothing, typeof(Base.:(<)), Tuple{Int64, Int64}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Float64, Array{Float64, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, Array{Float64, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Type, Array{Int64, 1}})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Base.BitArray{1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Base.OneTo{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0}, Nothing, typeof(Base.:(&)), Tuple{Bool, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0}, Nothing, typeof(Base.:(<)), Tuple{Int64, Int64}}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0}, Nothing, typeof(Base.:(<)), Tuple{Int64, Int64}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#97#98"{Main.var"#1#2"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#97#98"{Main.var"#10#12"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#97#98"{Main.var"#13#14"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#97#98"{Main.var"#15#16"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#97#98"{Main.var"#17#19"{InlineStrings.String31}}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#97#98"{Main.var"#17#19"{InlineStrings.String63}}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#97#98"{Main.var"#18#20"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#97#98"{Main.var"#21#22"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#97#98"{Main.var"#23#24"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#97#98"{Main.var"#3#6"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#97#98"{Main.var"#30#32"{InlineStrings.String31}}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#97#98"{Main.var"#30#32"{InlineStrings.String63}}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#97#98"{Main.var"#33#34"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#97#98"{Main.var"#35#36"{String}}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#97#98"{Main.var"#37#38"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, DataFrames.var"#97#98"{Main.var"#5#8"}, Tuple{DataFrames.DataFrameRows{DataFrames.DataFrame}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Main.var"#39#40", Tuple{Array{ColorTypes.Color{T, N} where N where T, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{Float64}, Tuple{Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, Type{Float64}, Tuple{Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!)), Tuple{Array{Bool, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Array{Nothing, 1}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{Array{Float64, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, Array{Float64, 1}}}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Array{Float64, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, Array{Float64, 1}}}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Array{Float64, 1}, Float64}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64}, 1}, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64}, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.abs2), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(-)), Tuple{Array{Float64, 1}, Float64}}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.mod1), Tuple{Array{Int64, 1}, Int64}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.sqrt), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(+)), Tuple{Float64, Array{Float64, 1}}}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.get_stroke_vector), Tuple{Array{Symbol, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Union{Base.Missing, Float64}, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Union{Base.Missing, Int64}, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.svg_color_class_from_label), Tuple{Array{String, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(isa), Tuple{Array{Gadfly.Geom.LineGeometry, 1}, Base.RefValue{Type{Gadfly.Geom.SubplotGrid}}}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(isa), Tuple{Array{Gadfly.Geom.RectangularBinGeometry, 1}, Base.RefValue{Type{Gadfly.Geom.SubplotGrid}}}}})
precompile(Tuple{typeof(Base.Iterators.cycle), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.Iterators.cycle), IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{String, 1}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64}, 1}})
precompile(Tuple{typeof(Base.Iterators.enumerate), IterTools.TakeStrict{Base.Iterators.Zip{Tuple{Base.Iterators.Cycle{Array{Float64, 1}}, Base.Iterators.Cycle{Array{ColorTypes.RGB{Float32}, 1}}, Base.Iterators.Cycle{Array{Float64, 1}}}}}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{String, String, String, String, String, String, String, String, String}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{String, String, String, String, String, String, String, String}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{String, String, String, String, String, String, String}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{String, String, String, String, String, String}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{String}})
precompile(Tuple{typeof(Base.Iterators.flatten), Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}})
precompile(Tuple{typeof(Base.Iterators.flatten), Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.RectangularBinGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.RectbinStatistic, Gadfly.Theme}, 1}}})
precompile(Tuple{typeof(Base.Iterators.product), Array{Float64, 1}})
precompile(Tuple{typeof(Base.Iterators.product), Base.UnitRange{Int64}, Vararg{Base.UnitRange{Int64}, N} where N})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Any, 1}, Vararg{Array{Any, 1}, N} where N})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Float64, 1}, Array{Float64, 1}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Float64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Int64, 1}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.Iterators.zip), Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.Iterators.zip), Base.Iterators.Cycle{Array{Float64, 1}}, Base.Iterators.Cycle{Array{ColorTypes.RGB{Float32}, 1}}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.Iterators.zip), Base.Iterators.Cycle{IndirectArrays.IndirectArray{Int64, 1, UInt8, Array{UInt8, 1}, Array{Int64, 1}}}, Base.Iterators.Cycle{IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.Iterators.zip), Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, Array{String, 1}})
precompile(Tuple{typeof(Base.Iterators.zip), Base.KeySet{ColorTypes.Color{T, N} where N where T, Base.Dict{ColorTypes.Color{T, N} where N where T, Float64}}, Array{String, 1}})
precompile(Tuple{typeof(Base.Math.cbrt), Float64})
precompile(Tuple{typeof(Base.Math.cosd), Float64})
precompile(Tuple{typeof(Base.Math.sincos), Float32})
precompile(Tuple{typeof(Base.Math.sincos), Float64})
precompile(Tuple{typeof(Base.Math.sind), Float64})
precompile(Tuple{typeof(Base.Order.lt), Base.Order.ForwardOrdering, Float64, Float64})
precompile(Tuple{typeof(Base.Order.lt), Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Int64, Int64})
precompile(Tuple{typeof(Base.Sort.defalg), DataFrames.DataFrame, Type, Base.Order.Perm{Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Array{Number, 1}}})
precompile(Tuple{typeof(Base.StringVector), Int64})
precompile(Tuple{typeof(Base.Threads.resize_nthreads!), Array{Array{Grisu.Bignums.Bignum, 1}, 1}, Array{Grisu.Bignums.Bignum, 1}})
precompile(Tuple{typeof(Base._all), StaticArrays.var"#7#8", Core.SimpleVector, Base.Colon})
precompile(Tuple{typeof(Base._all), typeof(CSV.isvaliddelim), String, Base.Colon})
precompile(Tuple{typeof(Base._any), typeof(Base.ismissing), Array{Int64, 1}, Base.Colon})
precompile(Tuple{typeof(Base._any), typeof(Base.ismissing), Array{Union{Base.Missing, Float64}, 1}, Base.Colon})
precompile(Tuple{typeof(Base._any), typeof(Base.ismissing), Array{Union{Base.Missing, Int64}, 1}, Base.Colon})
precompile(Tuple{typeof(Base._array_for), Type{Array{Tuple{Gadfly.Stat.RectbinStatistic, Gadfly.Theme}, 1}}, Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}, Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Base.UnitRange{Int64}}, Array{Any, 1}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{ColorTypes.Lab{Float64}}, Base.UnitRange{Int64}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.Context}, Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Float64}, Array{Tuple{Float64, Float64}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base._array_for), Type{Gadfly.Geom.LineGeometry}, Array{Gadfly.Layer, 1}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Gadfly.Geom.RectangularBinGeometry}, Array{Gadfly.Layer, 1}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Int64}, Array{Tuple{Float64, Int64}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Add{Measures.Length{:cx, Float64}, Measures.Length{:mm, Float64}}}, Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Add{Measures.Length{:cy, Float64}, Measures.Length{:mm, Float64}}}, Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}}, Base.UnitRange{Int64}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Length{:mm, Float64}}, Array{Measures.Measure, 1}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Measures.Length{:mm, Float64}}, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{String}, Array{Any, 1}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{String}, Array{Float64, 1}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{String}, Base.KeySet{ColorTypes.Color{T, N} where N where T, Base.Dict{ColorTypes.Color{T, N} where N where T, Float64}}, Base.HasLength, Int64})
precompile(Tuple{typeof(Base._array_for), Type{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}}, Array{Gadfly.Layer, 1}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Tuple{Gadfly.Geom.RectangularBinGeometry, Gadfly.Theme}}, Array{Gadfly.Layer, 1}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._array_for), Type{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base._iterate), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Int64})
precompile(Tuple{typeof(Base._mapreduce), Function, Function, Base.IndexLinear, Base.SkipMissing{Array{Union{Base.Missing, Int64}, 1}}})
precompile(Tuple{typeof(Base._mapreduce), Gadfly.var"#92#111"{Array{Symbol, 1}}, typeof(Base.:(|)), Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{typeof(Base._mapreduce), Gadfly.var"#93#112"{Array{Symbol, 1}}, typeof(Base.:(|)), Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.abs2), typeof(Base.add_sum), Base.IndexLinear, Array{Float64, 1}})
precompile(Tuple{typeof(Base._mapreduce_dim), Function, Function, Base._InitialValue, Array{Float64, 1}, Base.Colon})
precompile(Tuple{typeof(Base._mapreduce_dim), Function, Function, Base._InitialValue, Array{Symbol, 1}, Base.Colon})
precompile(Tuple{typeof(Base._similar_for), Array{Float64, 1}, Type{ColorTypes.Lab{Float64}}, Base.Generator{Array{Float64, 1}, Main.var"#46#59"}, Base.HasShape{1}})
precompile(Tuple{typeof(Base._similar_for), Array{Float64, 1}, Type{ColorTypes.Lab{Float64}}, Base.Generator{Array{Float64, 1}, Main.var"#47#60"}, Base.HasShape{1}})
precompile(Tuple{typeof(Base._similar_for), Array{Float64, 1}, Type{String}, Base.Generator{Array{Float64, 1}, Main.var"#53#66"}, Base.HasShape{1}})
precompile(Tuple{typeof(Base._similar_for), Array{Gadfly.StatisticElement, 1}, Type{Tuple{Gadfly.Stat.RectbinStatistic, Gadfly.Theme}}, Base.Generator{Array{Gadfly.StatisticElement, 1}, Gadfly.var"#97#117"{Gadfly.Layer, Gadfly.Plot, Gadfly.var"#_theme#115"}}, Base.HasShape{1}})
precompile(Tuple{typeof(Base._similar_for), Array{Gadfly.StatisticElement, 1}, Type{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}}, Base.Generator{Array{Gadfly.StatisticElement, 1}, Gadfly.var"#97#117"{Gadfly.Layer, Gadfly.Plot, Gadfly.var"#_theme#115"}}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.abs), Float64})
precompile(Tuple{typeof(Base.abs), Int64})
precompile(Tuple{typeof(Base.add_sum), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.afoldl), Base.var"#42#43", Type, Type, Type, Type, Type, Type, Type, Type})
precompile(Tuple{typeof(Base.afoldl), Base.var"#42#43", Type, Type, Type, Type, Type})
precompile(Tuple{typeof(Base.afoldl), typeof(Base.:(*)), Float64, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.afoldl), typeof(Base.max), Int64, Int64, Int64})
precompile(Tuple{typeof(Base.afoldl), typeof(Base.min), Int64, Int64, Int64})
precompile(Tuple{typeof(Base.all), Function, Core.SimpleVector})
precompile(Tuple{typeof(Base.any), Base.BitArray{1}})
precompile(Tuple{typeof(Base.any), Function, Array{Int64, 1}})
precompile(Tuple{typeof(Base.any), Function, Array{Union{Base.Missing, Float64}, 1}})
precompile(Tuple{typeof(Base.any), Function, Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.any), Tuple{Bool, Bool, Bool}})
precompile(Tuple{typeof(Base.append!), Array{AbstractString, 1}, Array{String, 1}})
precompile(Tuple{typeof(Base.append!), Array{Any, 1}, Array{Gadfly.Guide.PositionedGuide, 1}})
precompile(Tuple{typeof(Base.append!), Array{Any, 1}, Base.SkipMissing{Array{String, 1}}})
precompile(Tuple{typeof(Base.append!), Array{Any, 1}, Base.SkipMissing{PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}}})
precompile(Tuple{typeof(Base.append!), Array{Array{Compose.Context, 1}, 1}, Array{Array{Compose.Context, 1}, 1}})
precompile(Tuple{typeof(Base.append!), Array{ColorTypes.RGB{Float32}, 1}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.append!), Array{Float64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.append!), Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.argmax), Array{Float64, 1}})
precompile(Tuple{typeof(Base.argmin), Array{Float64, 1}})
precompile(Tuple{typeof(Base.atan), Float64, Float64})
precompile(Tuple{typeof(Base.ceil), Float64})
precompile(Tuple{typeof(Base.ceil), Type{Int64}, Float64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, Gadfly.var"#101#121"{Base.Set{Symbol}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{ColorTypes.Color{T, N} where N where T, 1}, Gadfly.Guide.var"#9#17"{Gadfly.Scale.var"#labeler#64"{Base.Dict{ColorTypes.RGB{Float32}, String}}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, Gadfly.Guide.var"#31#40"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, Gadfly.Guide.var"#32#41"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, Gadfly.Guide.var"#50#59"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, Gadfly.Guide.var"#51#60"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, Main.var"#41#54"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, Main.var"#42#55"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, Main.var"#49#62"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Guide.PositionedGuide, 1}, Gadfly.Guide.var"#101#110"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Guide.PositionedGuide, 1}, Gadfly.Guide.var"#102#111"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{String, 1}, CSV.var"#10#13"{Bool}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{String, 1}, Gadfly.Guide.var"#10#18"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Gadfly.Guide.var"#5#13"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Filter{Gadfly.Scale.var"#62#66", PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String31}, UInt32, 1, Array{UInt32, 1}}}, typeof(Base.identity)}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Filter{Gadfly.Scale.var"#62#66", PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}}, typeof(Base.identity)}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Gadfly.var"#100#120"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.RectangularBinGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.RectbinStatistic, Gadfly.Theme}, 1}}}, Gadfly.var"#100#120"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, Gadfly.Geom.var"#124#126"{Gadfly.Theme}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, Gadfly.Geom.var"#125#127"{Gadfly.Theme}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}}, Gadfly.var"#128#130"{Base.Dict{Symbol, Gadfly.ScaleElement}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Zip{Tuple{Array{String, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, Gadfly.Scale.var"#60#63"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Gadfly.Guide.var"#1#2"{Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, Gadfly.Guide.var"#19#24"{Gadfly.Theme, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.ValueIterator{Base.Dict{ColorTypes.Color{T, N} where N where T, Float64}}, Gadfly.Guide.var"#20#25"{Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{Array{Float64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Float64, 1}}, typeof(Base.Iterators.cycle)}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{Array{Float64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Float64, 1}}, typeof(Base.length)}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{ColorTypes.HSL{Float64}, ColorTypes.HSL{Float64}, ColorTypes.HSL{Float64}, ColorTypes.HSL{Float64}, ColorTypes.HSL{Float64}}, Gadfly.Scale.var"#7#8"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{ColorTypes.HSL{Float64}, ColorTypes.HSL{Float64}}, Gadfly.Scale.var"#7#8"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{IndirectArrays.IndirectArray{Int64, 1, UInt8, Array{UInt8, 1}, Array{Int64, 1}}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}}, typeof(Base.Iterators.cycle)}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{IndirectArrays.IndirectArray{Int64, 1, UInt8, Array{UInt8, 1}, Array{Int64, 1}}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}}, typeof(Base.length)}})
precompile(Tuple{typeof(Base.collect), Base.Iterators.ProductIterator{Tuple{Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.collect), Base.SkipMissing{Array{String, 1}}})
precompile(Tuple{typeof(Base.collect), Type{Tuple{Int64, ColorTypes.RGB{Float32}, Int64}}, IterTools.TakeStrict{Base.Iterators.Zip{Tuple{Base.Iterators.Cycle{IndirectArrays.IndirectArray{Int64, 1, UInt8, Array{UInt8, 1}, Array{Int64, 1}}}, Base.Iterators.Cycle{IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, Base.Iterators.Cycle{IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}}}}}})
precompile(Tuple{typeof(Base.collect), Type{Tuple{Int64, Float64}}, Base.Iterators.Zip{Tuple{Array{Int64, 1}, Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.collect_similar), Array{Float64, 1}, Base.Generator{Array{Float64, 1}, Main.var"#46#59"}})
precompile(Tuple{typeof(Base.collect_similar), Array{Float64, 1}, Base.Generator{Array{Float64, 1}, Main.var"#47#60"}})
precompile(Tuple{typeof(Base.collect_similar), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, Gadfly.Guide.var"#make_layout#12"{Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, Gadfly.Scale.var"#labeler#64"{Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Int64}}})
precompile(Tuple{typeof(Base.collect_to!), Array{Base.Iterators.Cycle{I} where I, 1}, Base.Generator{Tuple{IndirectArrays.IndirectArray{Int64, 1, UInt8, Array{UInt8, 1}, Array{Int64, 1}}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}}, typeof(Base.Iterators.cycle)}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Tuple{Gadfly.Stat.RectbinStatistic, Gadfly.Theme}, 1}, 1}, Array{Tuple{Gadfly.Stat.RectbinStatistic, Gadfly.Theme}, 1}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, Base.var"#4#5"{Gadfly.var"#96#116"{Gadfly.Plot, Gadfly.var"#_theme#115"}}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, Base.var"#4#5"{Gadfly.var"#96#116"{Gadfly.Plot, Gadfly.var"#_theme#115"}}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.UnitRange{Int64}, 1}, Base.UnitRange{Int64}, Base.Generator{Array{Any, 1}, Compose.var"#61#66"}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{ColorTypes.Lab{Float64}, 1}, ColorTypes.Lab{Float64}, Base.Generator{Array{Float64, 1}, Main.var"#46#59"}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{ColorTypes.Lab{Float64}, 1}, ColorTypes.Lab{Float64}, Base.Generator{Array{Float64, 1}, Main.var"#47#60"}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{ColorTypes.Lab{Float64}, 1}, ColorTypes.Lab{Float64}, Base.Generator{Base.UnitRange{Int64}, Gadfly.Guide.var"#21#26"{Main.var"#48#61", Gadfly.Theme}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.Context, 1}, Compose.Context, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}}, Gadfly.var"#128#130"{Base.Dict{Symbol, Gadfly.ScaleElement}}}, Tuple{Int64, Int64, Int64, Int64, Int64}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.var"#9#10"{Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.var"#9#10"{Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Float64, Int64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.var"#9#10"{Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.var"#9#10"{Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.var"#9#10"{Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.var"#9#10"{Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.var"#9#10"{Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Gadfly.Geom.LineGeometry, 1}, Gadfly.Geom.LineGeometry, Base.Generator{Array{Gadfly.Layer, 1}, Gadfly.var"#129#131"}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Gadfly.Geom.RectangularBinGeometry, 1}, Gadfly.Geom.RectangularBinGeometry, Base.Generator{Array{Gadfly.Layer, 1}, Gadfly.var"#129#131"}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Add{Measures.Length{:cx, Float64}, Measures.Length{:mm, Float64}}, 1}, Measures.Add{Measures.Length{:cx, Float64}, Measures.Length{:mm, Float64}}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, Gadfly.Geom.var"#124#126"{Gadfly.Theme}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Add{Measures.Length{:cy, Float64}, Measures.Length{:mm, Float64}}, 1}, Measures.Add{Measures.Length{:cy, Float64}, Measures.Length{:mm, Float64}}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, Gadfly.Geom.var"#125#127"{Gadfly.Theme}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, 1}, Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, Base.Generator{Base.UnitRange{Int64}, Gadfly.Guide.var"#19#24"{Gadfly.Theme, Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Base.Generator{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Gadfly.Guide.var"#1#2"{Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Measures.Measure, 1}, Compose.var"#48#49"{Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Gadfly.Guide.var"#33#42"}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Gadfly.Guide.var"#34#43"}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Gadfly.Guide.var"#4#11"}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Gadfly.Guide.var"#5#13"}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Gadfly.Guide.var"#52#61"}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Gadfly.Guide.var"#53#62"}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{Any, 1}, typeof(Base.string)}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{Float64, 1}, Main.var"#42#55"}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{Float64, 1}, Main.var"#53#66"}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Base.KeySet{ColorTypes.Color{T, N} where N where T, Base.Dict{ColorTypes.Color{T, N} where N where T, Float64}}, Gadfly.Guide.var"#23#28"{OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Base.KeySet{ColorTypes.Color{T, N} where N where T, Base.Dict{ColorTypes.Color{T, N} where N where T, Float64}}, Gadfly.Scale.var"#80#84"{Base.Dict{ColorTypes.Color{T, N} where N where T, AbstractString}}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, Base.Generator{Array{Gadfly.Layer, 1}, Gadfly.var"#99#119"{Gadfly.Plot, Gadfly.var"#_theme#115"}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Gadfly.Geom.RectangularBinGeometry, Gadfly.Theme}, 1}, Tuple{Gadfly.Geom.RectangularBinGeometry, Gadfly.Theme}, Base.Generator{Array{Gadfly.Layer, 1}, Gadfly.var"#99#119"{Gadfly.Plot, Gadfly.var"#_theme#115"}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Gadfly.Stat.RectbinStatistic, Gadfly.Theme}, 1}, Tuple{Gadfly.Stat.RectbinStatistic, Gadfly.Theme}, Base.Generator{Array{Gadfly.StatisticElement, 1}, Gadfly.var"#97#117"{Gadfly.Layer, Gadfly.Plot, Gadfly.var"#_theme#115"}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, Base.Generator{Array{Gadfly.StatisticElement, 1}, Gadfly.var"#97#117"{Gadfly.Layer, Gadfly.Plot, Gadfly.var"#_theme#115"}}, Int64})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s813", 1} where var"#s813"}, Array{Dates.Date, 1}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s813", 1} where var"#s813"}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s813", 1} where var"#s813"}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s813", 1} where var"#s813"}, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s813", 1} where var"#s813"}, PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s813", 1} where var"#s813"}, PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s813", 1} where var"#s813"}, PooledArrays.PooledArray{InlineStrings.String63, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s813", 1} where var"#s813"}, PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String15}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s813", 1} where var"#s813"}, PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String31}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s813", 1} where var"#s813"}, PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String3}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s813", 1} where var"#s813"}, PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s813", 1} where var"#s813"}, SentinelArrays.SentinelArray{Dates.Date, 1, Dates.Date, Base.Missing, Array{Dates.Date, 1}}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s813", 1} where var"#s813"}, SentinelArrays.SentinelArray{Float64, 1, Float64, Base.Missing, Array{Float64, 1}}})
precompile(Tuple{typeof(Base.convert), Type{AbstractArray{var"#s813", 1} where var"#s813"}, SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.convert), Type{Array{ColorTypes.RGB{Float32}, 1}}, Array{ColorTypes.LCHab{Float32}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Array{ColorTypes.RGB{Float32}, 1}}, Array{ColorTypes.LCHab{Float64}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Base.BitArray{1}}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.convert), Type{Base.CoreLogging.LogLevel}, Base.CoreLogging.LogLevel})
precompile(Tuple{typeof(Base.convert), Type{Base.Dict{K, V} where V where K}, Base.Dict{Type, Type}})
precompile(Tuple{typeof(Base.convert), Type{Base.Dict{Union{Base.Missing, InlineStrings.String15}, UInt32}}, Base.Dict{Union{Base.Missing, InlineStrings.String7}, UInt32}})
precompile(Tuple{typeof(Base.convert), Type{Base.Dict{Union{Base.Missing, InlineStrings.String31}, UInt32}}, Base.Dict{Union{Base.Missing, InlineStrings.String15}, UInt32}})
precompile(Tuple{typeof(Base.convert), Type{Base.Dict{Union{Base.Missing, InlineStrings.String63}, UInt32}}, Base.Dict{Union{Base.Missing, InlineStrings.String31}, UInt32}})
precompile(Tuple{typeof(Base.convert), Type{ColorTypes.RGB{Float32}}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Base.convert), Type{Float64}, Int64})
precompile(Tuple{typeof(Base.convert), Type{Int64}, UInt64})
precompile(Tuple{typeof(Base.convert), Type{Integer}, Int64})
precompile(Tuple{typeof(Base.convert), Type{Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.convert), Type{Type}, Type})
precompile(Tuple{typeof(Base.convert), Type{Union{Array{String, 1}, Array{Symbol, 1}, Integer, AbstractArray{var"#s101", 1} where var"#s101"<:Integer}}, Int64})
precompile(Tuple{typeof(Base.convert), Type{Union{Base.Cmd, Base.CodeUnits{UInt8, String}, AbstractString, Array{UInt8, 1}, IO, FilePathsBase.AbstractPath, Base.SubArray{UInt8, 1, Array{UInt8, 1}, I, L} where L where I}}, Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{typeof(Base.convert), Type{Union{Base.Cmd, Base.CodeUnits{UInt8, String}, AbstractString, Array{UInt8, 1}, IO, FilePathsBase.AbstractPath, Base.SubArray{UInt8, 1, Array{UInt8, 1}, I, L} where L where I}}, String})
precompile(Tuple{typeof(Base.convert), Type{Union{Char, UInt8}}, Char})
precompile(Tuple{typeof(Base.convert), Type{Union{Char, UInt8}}, UInt8})
precompile(Tuple{typeof(Base.convert), Type{Union{Function, Real, Base.AbstractDict{K, V} where V where K, AbstractArray{T, 1} where T, Type}}, Bool})
precompile(Tuple{typeof(Base.convert), Type{Union{Function, Real, Base.AbstractDict{K, V} where V where K, AbstractArray{T, 1} where T, Type}}, Float64})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, AbstractArray{T, 2} where T, AbstractArray{T, 1} where T, Distributions.Distribution{F, S} where S<:Distributions.ValueSupport where F<:Distributions.VariateForm, IndirectArrays.IndirectArray{T, N, I, A, V} where V<:Union{Base.AbstractDict{I, T}, AbstractArray{T, 1}} where A<:AbstractArray{I, N} where I where N where T}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, AbstractArray{T, 2} where T, AbstractArray{T, 1} where T}}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{String, 1}, String}}, Array{String, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{String, 1}, String}}, String})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{String, 1}}}, Array{String, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, I, A, V} where V<:Union{Base.AbstractDict{I, T}, AbstractArray{T, 1}} where A<:AbstractArray{I, N} where I where N where T}}, Array{ColorTypes.HSL{Float32}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, I, A, V} where V<:Union{Base.AbstractDict{I, T}, AbstractArray{T, 1}} where A<:AbstractArray{I, N} where I where N where T}}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, I, A, V} where V<:Union{Base.AbstractDict{I, T}, AbstractArray{T, 1}} where A<:AbstractArray{I, N} where I where N where T}}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, I, A, V} where V<:Union{Base.AbstractDict{I, T}, AbstractArray{T, 1}} where A<:AbstractArray{I, N} where I where N where T}}, IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Char, UInt8, String}}, String})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Compose.UnitBox{S, T, U, V} where V where U where T where S}}, Compose.UnitBox{Int64, Float64, Int64, Float64}})
precompile(Tuple{typeof(Base.copy), Array{ColorTypes.Colorant{T, N} where N where T, 1}})
precompile(Tuple{typeof(Base.copy), Array{Dates.Date, 1}})
precompile(Tuple{typeof(Base.copy), Array{Float64, 1}})
precompile(Tuple{typeof(Base.copy), Array{Int64, 1}})
precompile(Tuple{typeof(Base.copy), Array{Union{Base.Missing, Float64}, 1}})
precompile(Tuple{typeof(Base.copy), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.copy), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String31}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.copy), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.copyto!), Array{Any, 1}, Tuple{Array{Gadfly.Layer, 1}, Gadfly.Coord.Cartesian, Gadfly.Scale.ContinuousScale, Gadfly.Scale.ContinuousScale, Gadfly.Guide.YTicks, Gadfly.Scale.DiscreteColorScale}})
precompile(Tuple{typeof(Base.copyto!), Array{Any, 1}, Tuple{Array{Gadfly.Layer, 1}, Gadfly.Coord.Cartesian, Gadfly.Scale.ContinuousScale, Gadfly.Scale.DiscreteScale, Gadfly.Scale.ContinuousColorScale}})
precompile(Tuple{typeof(Base.copyto!), Array{Float64, 1}, Tuple{Float64, Int64}})
precompile(Tuple{typeof(Base.count), Array{Bool, 1}})
precompile(Tuple{typeof(Base.delete!), Base.IdDict{Any, Any}, Any})
precompile(Tuple{typeof(Base.empty), Array{Any, 1}, Type{Array{Any, 1}}})
precompile(Tuple{typeof(Base.empty), Base.Dict{Any, Any}, Type{ColorTypes.RGB{Float32}}, Type{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.extrema), Array{Float64, 1}})
precompile(Tuple{typeof(Base.extrema), Array{Union{Base.Missing, Float64}, 1}})
precompile(Tuple{typeof(Base.extrema), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.fill), Array{ColorTypes.Color{T, N} where N where T, 1}})
precompile(Tuple{typeof(Base.fill), Array{ColorTypes.Lab{Float64}, 1}})
precompile(Tuple{typeof(Base.fill), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.fill), Bool, Int64})
precompile(Tuple{typeof(Base.fill), ColorTypes.HSL{Float32}})
precompile(Tuple{typeof(Base.fill), ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.fill), Float64, Int64})
precompile(Tuple{typeof(Base.fill), String, Int64})
precompile(Tuple{typeof(Base.filter), Function, DataFrames.DataFrame})
precompile(Tuple{typeof(Base.filter), Gadfly.var"#89#108"{Array{Symbol, 1}}, Base.Dict{Symbol, Any}})
precompile(Tuple{typeof(Base.filter), Main.var"#29#31", Array{Union{Base.Missing, InlineStrings.String31}, 1}})
precompile(Tuple{typeof(Base.filter), Main.var"#29#31", Array{Union{Base.Missing, InlineStrings.String63}, 1}})
precompile(Tuple{typeof(Base.findmax), Array{Dates.Date, 1}})
precompile(Tuple{typeof(Base.findmax), Array{Int64, 1}})
precompile(Tuple{typeof(Base.findmax), Array{Union{Base.Missing, Float64}, 1}})
precompile(Tuple{typeof(Base.findmax), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.findmin), Array{Dates.Date, 1}})
precompile(Tuple{typeof(Base.findnext), String, String, Int64})
precompile(Tuple{typeof(Base.first), Array{Gadfly.Guide.PositionedGuide, 1}})
precompile(Tuple{typeof(Base.firstindex), Array{ColorTypes.Colorant{T, N} where N where T, 1}})
precompile(Tuple{typeof(Base.firstindex), Array{Dates.Date, 1}})
precompile(Tuple{typeof(Base.firstindex), Array{Float64, 1}})
precompile(Tuple{typeof(Base.firstindex), Array{Int64, 1}})
precompile(Tuple{typeof(Base.firstindex), Array{Number, 1}})
precompile(Tuple{typeof(Base.firstindex), Array{String, 1}})
precompile(Tuple{typeof(Base.firstindex), Array{Union{Base.Missing, Float64}, 1}})
precompile(Tuple{typeof(Base.firstindex), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.firstindex), PooledArrays.PooledArray{Base.Missing, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.firstindex), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.firstindex), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.firstindex), PooledArrays.PooledArray{InlineStrings.String63, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.firstindex), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String15}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.firstindex), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String31}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.firstindex), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String3}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.firstindex), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.floor), Float64})
precompile(Tuple{typeof(Base.floor), Int64})
precompile(Tuple{typeof(Base.get!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.ContinuousColorScale, Int64})
precompile(Tuple{typeof(Base.get!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.ContinuousScale, Int64})
precompile(Tuple{typeof(Base.get!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteColorScale, Int64})
precompile(Tuple{typeof(Base.get!), Base.Dict{Gadfly.ScaleElement, Int64}, Gadfly.Scale.DiscreteScale, Int64})
precompile(Tuple{typeof(Base.get), Base.Dict{Type, Type}, Type, Type})
precompile(Tuple{typeof(Base.getindex), Array{AbstractString, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Base.getindex), Array{AbstractString, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Base.SubString{String}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Bool, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.Colorant{T, N} where N where T, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.Colorant{T, N} where N where T, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.Color{T, N} where N where T, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.HSL{Float32}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{ColorTypes.RGB{Float32}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Compose.FillOpacityPrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Compose.FillPrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Compose.FontPrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Compose.FontSizePrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Compose.JSCallPrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Compose.JSIncludePrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Compose.LineWidthPrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Compose.SVGAttributePrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Compose.SVGClassPrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Compose.StrokeDashPrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Compose.StrokePrimitive, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Dates.Date, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Dates.Date, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Float64, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Float64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Float64, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.getindex), Array{Float64, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Float64, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Float64, 2}, Int64, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Gadfly.Aesthetics, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.getindex), Array{Gadfly.Data, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.getindex), Array{Gadfly.Guide.PositionedGuide, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Gadfly.Guide.PositionedGuide, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Measures.Length{:mm, Float64}, 1}, Array{Bool, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Number, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Number, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{String, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{String, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Symbol, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Symbol, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Float64, Float64}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Float64, Int64}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Float64}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Gadfly.Geom.RectangularBinGeometry, Gadfly.Theme}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Gadfly.Stat.RectbinStatistic, Gadfly.Theme}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{UInt8, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, Float64}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, Float64}, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, Float64}, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, Float64}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, Int64}, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, Int64}, 1}, Base.BitArray{1}})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, Int64}, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, Int64}, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Base.Dict{Array{Float64, 1}, Int64}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.getindex), Base.Dict{String, Function}, String})
precompile(Tuple{typeof(Base.getindex), Base.Dict{Symbol, Any}, Symbol})
precompile(Tuple{typeof(Base.getindex), Base.Dict{UInt64, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}, UInt64})
precompile(Tuple{typeof(Base.getindex), Base.EnvDict, String})
precompile(Tuple{typeof(Base.getindex), Base.RefValue{Base.CoreLogging.LogLevel}})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{Dates.Date, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{Float64, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{typeof(Base.getindex), Base.ReinterpretArray{Int64, 1, UInt8, Array{UInt8, 1}, false}, Int64})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Array{Int64, 1}, Base.Colon})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Base.Colon, Symbol})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Base.UnitRange{Int64}, Base.Colon})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, typeof(Base.:(!)), Symbol})
precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrameRow{DataFrames.DataFrame, DataFrames.Index}, Symbol})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, Gadfly.Guide.var"#100#109"}, Gadfly.Guide.BottomGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, Gadfly.Guide.var"#100#109"}, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, Gadfly.Guide.var"#100#109"}, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, Gadfly.Guide.var"#100#109"}, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, Gadfly.Guide.var"#100#109"}, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, Gadfly.Guide.var"#100#109"}, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, Gadfly.Guide.var"#97#106"}, Gadfly.Guide.BottomGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, Gadfly.Guide.var"#97#106"}, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, Gadfly.Guide.var"#97#106"}, Gadfly.Guide.OverGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, Gadfly.Guide.var"#97#106"}, Gadfly.Guide.RightGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, Gadfly.Guide.var"#97#106"}, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, Gadfly.Guide.var"#97#106"}, Gadfly.Guide.UnderGuidePosition})
precompile(Tuple{typeof(Base.getindex), Float64, Int64})
precompile(Tuple{typeof(Base.getindex), Int64, Int64})
precompile(Tuple{typeof(Base.getindex), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Base.getindex), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{Base.Missing, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{Base.Missing, UInt32, 1, Array{UInt32, 1}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String63, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{InlineStrings.String63, UInt32, 1, Array{UInt32, 1}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String15}, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String15}, UInt32, 1, Array{UInt32, 1}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String31}, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String31}, UInt32, 1, Array{UInt32, 1}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String31}, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String3}, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String3}, UInt32, 1, Array{UInt32, 1}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.getindex), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(Base.getindex), Type{ColorTypes.Colorant{T, N} where N where T}})
precompile(Tuple{typeof(Base.getindex), Type{ColorTypes.RGBA{Float32}}, ColorTypes.HSL{Float32}})
precompile(Tuple{typeof(Base.getindex), Type{ColorTypes.RGB{Float32}}})
precompile(Tuple{typeof(Base.getindex), Type{Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.getindex), Type{Dates.Date}})
precompile(Tuple{typeof(Base.getindex), Type{Float64}, Float64})
precompile(Tuple{typeof(Base.getindex), Type{Number}})
precompile(Tuple{typeof(Base.getproperty), Compose.Context, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.ListNode{Compose.Container}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.ListNode{Compose.Form{P} where P<:Compose.FormPrimitive}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Property{Compose.FillOpacityPrimitive}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Property{Compose.FillPrimitive}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Property{Compose.SVGAttributePrimitive}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Property{Compose.SVGClassPrimitive}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Compose.Property{Compose.StrokePrimitive}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Gadfly.Guide.PositionedGuide, Symbol})
precompile(Tuple{typeof(Base.getproperty), IndirectArrays.IndirectArray{String, 1, Int64, Array{Int64, 1}, Array{String, 1}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), Loess.KDInternalNode{Float64}, Symbol})
precompile(Tuple{typeof(Base.grow_to!), Array{Array{Any, 1}, 1}, Base.Generator{Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Gadfly.var"#100#120"}, Tuple{Int64, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Int64}})
precompile(Tuple{typeof(Base.grow_to!), Array{Array{Any, 1}, 1}, Base.Generator{Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.RectangularBinGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.RectbinStatistic, Gadfly.Theme}, 1}}}, Gadfly.var"#100#120"}, Tuple{Int64, Array{Tuple{Gadfly.Geom.RectangularBinGeometry, Gadfly.Theme}, 1}, Int64}})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, Gadfly.Stat.var"#29#31"{Gadfly.Aesthetics}}, Int64})
precompile(Tuple{typeof(Base.grow_to!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Base.Generator{Array{ColorTypes.RGB{Float32}, 1}, Gadfly.Stat.var"#30#32"{Gadfly.Aesthetics, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}}, Int64})
precompile(Tuple{typeof(Base.hash), Any, UInt64})
precompile(Tuple{typeof(Base.hashindex), ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.hashindex), InlineStrings.String63, Int64})
precompile(Tuple{typeof(Base.haskey), Base.Dict{String, Function}, String})
precompile(Tuple{typeof(Base.haskey), Base.Dict{Symbol, Any}, Symbol})
precompile(Tuple{typeof(Base.haskey), Base.Dict{UInt64, Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}}, UInt64})
precompile(Tuple{typeof(Base.haskey), Base.IdDict{Any, Any}, Symbol})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Any, Nothing}, Type})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Type, Type}, Type})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Type})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Type})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Type})
precompile(Tuple{typeof(Base.identity), Float64})
precompile(Tuple{typeof(Base.identity), Int64})
precompile(Tuple{typeof(Base.in), ColorTypes.Lab{Float64}, Base.Set{ColorTypes.Color{T, N} where N where T}})
precompile(Tuple{typeof(Base.in), ColorTypes.RGB{Float32}, Base.Set{ColorTypes.Color{T, N} where N where T}})
precompile(Tuple{typeof(Base.in), InlineStrings.String31, Array{String, 1}})
precompile(Tuple{typeof(Base.in), InlineStrings.String31, Array{Union{Base.Missing, InlineStrings.String31}, 1}})
precompile(Tuple{typeof(Base.in), InlineStrings.String63, Array{String, 1}})
precompile(Tuple{typeof(Base.in), InlineStrings.String63, Array{Union{Base.Missing, InlineStrings.String63}, 1}})
precompile(Tuple{typeof(Base.in), InlineStrings.String63, Base.Set{Any}})
precompile(Tuple{typeof(Base.in), String, Base.Set{Any}})
precompile(Tuple{typeof(Base.indexed_iterate), Array{String, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Array{String, 1}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}, Int64, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Float64, ColorTypes.RGB{Float32}, Float64}, Int64, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Float64, ColorTypes.RGB{Float32}, Float64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Float64, Float64}, Int64, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Float64, Float64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Float64, Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Float64, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int64, ColorTypes.RGB{Float32}, Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int64, ColorTypes.RGB{Float32}, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int64, Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int64, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int64, String}, Int64, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int64, String}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Ptr{Nothing}, Int64}, Int64, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Ptr{Nothing}, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Symbol, String}, Int64, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Symbol, String}, Int64})
precompile(Tuple{typeof(Base.intersect), Array{Symbol, 1}, Base.KeySet{Symbol, Base.Dict{Symbol, Any}}})
precompile(Tuple{typeof(Base.intersect), Base.Set{Symbol}, Base.Set{Symbol}})
precompile(Tuple{typeof(Base.invokelatest), Any})
precompile(Tuple{typeof(Base.isabstracttype), Any})
precompile(Tuple{typeof(Base.isempty), Array{Base.UnitRange{Int64}, 1}})
precompile(Tuple{typeof(Base.isempty), Array{Compose.CirclePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Base.isempty), Array{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Base.isempty), Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Base.isempty), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Base.isempty), Array{Float64, 1}})
precompile(Tuple{typeof(Base.isempty), Array{Int64, 1}})
precompile(Tuple{typeof(Base.isempty), Base.Dict{ColorTypes.Color{T, N} where N where T, Float64}})
precompile(Tuple{typeof(Base.isempty), DataFrames.DataFrame})
precompile(Tuple{typeof(Base.isempty), IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.isempty), OrderedCollections.OrderedDict{Any, Any}})
precompile(Tuple{typeof(Base.isequal), ColorTypes.Lab{Float64}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Base.isequal), ColorTypes.RGB{Float32}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.isequal), InlineStrings.String31, InlineStrings.String31})
precompile(Tuple{typeof(Base.isequal), InlineStrings.String63, InlineStrings.String63})
precompile(Tuple{typeof(Base.isequal), Type, Type})
precompile(Tuple{typeof(Base.isfinite), Float64})
precompile(Tuple{typeof(Base.iterate), Array{Array{Compose.Context, 1}, 1}, Int64})
precompile(Tuple{typeof(Base.iterate), Array{Array{Compose.Context, 1}, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Base.PkgId, 1}, Int64})
precompile(Tuple{typeof(Base.iterate), Array{Base.PkgId, 1}})
precompile(Tuple{typeof(Base.iterate), Array{ColorTypes.RGB{Float32}, 1}, Int64})
precompile(Tuple{typeof(Base.iterate), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Compose.Context, 1}, Int64})
precompile(Tuple{typeof(Base.iterate), Array{Compose.Context, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Float64, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Int64, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Tuple{Symbol, String}, 1}, Int64})
precompile(Tuple{typeof(Base.iterate), Array{Tuple{Symbol, String}, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Union{Base.Missing, Float64}, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Union{Base.Missing, InlineStrings.String31}, 1}, Int64})
precompile(Tuple{typeof(Base.iterate), Array{Union{Base.Missing, InlineStrings.String31}, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Union{Base.Missing, InlineStrings.String63}, 1}, Int64})
precompile(Tuple{typeof(Base.iterate), Array{Union{Base.Missing, InlineStrings.String63}, 1}})
precompile(Tuple{typeof(Base.iterate), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{ColorTypes.RGB{Float32}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{ColorTypes.RGB{Float32}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{String, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{String, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64}, 1}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{IterTools.TakeStrict{Base.Iterators.Zip{Tuple{Base.Iterators.Cycle{Array{Float64, 1}}, Base.Iterators.Cycle{Array{ColorTypes.RGB{Float32}, 1}}, Base.Iterators.Cycle{Array{Float64, 1}}}}}}, Tuple{Int64, Tuple{Int64, Tuple{Int64, Int64, Int64}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{IterTools.TakeStrict{Base.Iterators.Zip{Tuple{Base.Iterators.Cycle{Array{Float64, 1}}, Base.Iterators.Cycle{Array{ColorTypes.RGB{Float32}, 1}}, Base.Iterators.Cycle{Array{Float64, 1}}}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String, String, String}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String, String, String}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String, String}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String, String}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String, String}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String, String, String, String, String, String}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{String}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Array{Any, 1}}, Tuple{Int64, IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}, Tuple{Base.OneTo{Int64}, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Tuple{Int64, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Geom.RectangularBinGeometry, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.RectbinStatistic, Gadfly.Theme}, 1}}}, Tuple{Int64, Array{Tuple{Gadfly.Stat.RectbinStatistic, Gadfly.Theme}, 1}, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{Float64, 1}}}, Tuple{Tuple{Float64, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}}}, Tuple{Tuple{Int64, Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{String, 1}}}, Tuple{Int64, Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{String, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, Array{String, 1}}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Base.KeySet{Any, OrderedCollections.OrderedDict{Any, Any}}, Array{String, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Base.KeySet{ColorTypes.Color{T, N} where N where T, Base.Dict{ColorTypes.Color{T, N} where N where T, Float64}}, Array{String, 1}}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Base.KeySet{ColorTypes.Color{T, N} where N where T, Base.Dict{ColorTypes.Color{T, N} where N where T, Float64}}, Array{String, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Set{Int64}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.Set{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.SkipMissing{Base.Iterators.Flatten{Base.Generator{Base.Iterators.Filter{Gadfly.Scale.var"#79#82", Tuple{Gadfly.Data}}, Gadfly.Scale.var"#78#81"}}}, Tuple{Int64, Array{Union{Base.Missing, Float64}, 1}, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.SkipMissing{Base.Iterators.Flatten{Base.Generator{Base.Iterators.Filter{Gadfly.Scale.var"#79#82", Tuple{Gadfly.Data}}, Gadfly.Scale.var"#78#81"}}}, Tuple{Int64, Array{Union{Base.Missing, Int64}, 1}, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.ValueIterator{Base.Dict{Type, Type}}})
precompile(Tuple{typeof(Base.iterate), Base.ValueIterator{OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.ValueIterator{OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}}})
precompile(Tuple{typeof(Base.iterate), IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, Gadfly.Guide.var"#30#39"}, Tuple{Bool, Float64, Tuple{Float64, Float64}, Tuple{Int64, Int64}}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, Gadfly.Guide.var"#30#39"}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, Gadfly.Guide.var"#49#58"}, Tuple{Bool, Float64, Tuple{Float64, Float64}, Tuple{Int64, Int64}}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}, Gadfly.Guide.var"#49#58"}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Int64, 1}}}, Gadfly.Guide.var"#49#58"}, Tuple{Bool, Float64, Tuple{Float64, Int64}, Tuple{Int64, Int64}}})
precompile(Tuple{typeof(Base.iterate), IterTools.GroupBy{Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Int64, 1}}}, Gadfly.Guide.var"#49#58"}})
precompile(Tuple{typeof(Base.iterate), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String31}, UInt32, 1, Array{UInt32, 1}}, Tuple{Base.OneTo{Int64}, Int64}})
precompile(Tuple{typeof(Base.iterate), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String31}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.iterate), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}, Tuple{Base.OneTo{Int64}, Int64}})
precompile(Tuple{typeof(Base.iterate), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.join), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.Set{AbstractString}, String})
precompile(Tuple{typeof(Base.keys), Base.Dict{ColorTypes.Color{T, N} where N where T, Float64}})
precompile(Tuple{typeof(Base.keys), Base.Dict{Symbol, Any}})
precompile(Tuple{typeof(Base.keys), OrderedCollections.OrderedDict{Any, Any}})
precompile(Tuple{typeof(Base.lastindex), Array{Bool, 1}})
precompile(Tuple{typeof(Base.lastindex), Array{Float64, 1}})
precompile(Tuple{typeof(Base.lastindex), Array{String, 1}})
precompile(Tuple{typeof(Base.length), Array{Array{Compose.Context, 1}, 1}})
precompile(Tuple{typeof(Base.length), Array{ColorTypes.Colorant{T, N} where N where T, 1}})
precompile(Tuple{typeof(Base.length), Array{ColorTypes.Lab{Float64}, 1}})
precompile(Tuple{typeof(Base.length), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.length), Array{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}, 1}})
precompile(Tuple{typeof(Base.length), Array{Compose.FillOpacityPrimitive, 1}})
precompile(Tuple{typeof(Base.length), Array{Compose.FillPrimitive, 1}})
precompile(Tuple{typeof(Base.length), Array{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N), 1}})
precompile(Tuple{typeof(Base.length), Array{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, 1}})
precompile(Tuple{typeof(Base.length), Array{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}, 1}})
precompile(Tuple{typeof(Base.length), Array{Compose.SVGAttributePrimitive, 1}})
precompile(Tuple{typeof(Base.length), Array{Compose.SVGClassPrimitive, 1}})
precompile(Tuple{typeof(Base.length), Array{Compose.StrokePrimitive, 1}})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Base.length), Array{Dates.Date, 1}})
precompile(Tuple{typeof(Base.length), Array{Float64, 1}})
precompile(Tuple{typeof(Base.length), Array{Number, 1}})
precompile(Tuple{typeof(Base.length), Array{Tuple{Float64}, 1}})
precompile(Tuple{typeof(Base.length), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64}, 1}})
precompile(Tuple{typeof(Base.length), Array{Union{Base.Missing, Float64}, 1}})
precompile(Tuple{typeof(Base.length), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.length), Core.SimpleVector})
precompile(Tuple{typeof(Base.length), PooledArrays.PooledArray{Base.Missing, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.length), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.length), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.length), PooledArrays.PooledArray{InlineStrings.String63, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.length), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String15}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.length), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String31}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.length), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String3}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.length), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.length), SentinelArrays.SentinelArray{Float64, 1, Float64, Base.Missing, Array{Float64, 1}}})
precompile(Tuple{typeof(Base.length), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.log10), Float64})
precompile(Tuple{typeof(Base.map), Function, Array{Float64, 1}})
precompile(Tuple{typeof(Base.map), typeof(Base.isempty), Tuple{Array{Float64, 1}, Array{ColorTypes.RGB{Float32}, 1}, Array{Float64, 1}}})
precompile(Tuple{typeof(Base.map), typeof(Base.isempty), Tuple{IndirectArrays.IndirectArray{Int64, 1, UInt8, Array{UInt8, 1}, Array{Int64, 1}}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.map), typeof(Base.length), Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.max), Base.SkipMissing{Array{Union{Base.Missing, Int64}, 1}}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base.max), Float64, Float64})
precompile(Tuple{typeof(Base.max), Int64, Int64, Int64, Int64, Vararg{Int64, N} where N})
precompile(Tuple{typeof(Base.max), Int64, Int64})
precompile(Tuple{typeof(Base.max), Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.maximum), Array{Dates.Date, 1}})
precompile(Tuple{typeof(Base.maximum), Array{Float64, 1}})
precompile(Tuple{typeof(Base.maximum), Array{Int64, 1}})
precompile(Tuple{typeof(Base.maximum), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.maximum), Array{Union{Base.Missing, Float64}, 1}})
precompile(Tuple{typeof(Base.maximum), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.maximum), Base.SkipMissing{Array{Float64, 1}}})
precompile(Tuple{typeof(Base.maximum), Base.SkipMissing{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.maximum), Base.SkipMissing{Array{Union{Base.Missing, Int64}, 1}}})
precompile(Tuple{typeof(Base.merge!), Base.Dict{Symbol, Gadfly.ScaleElement}, Base.Dict{Any, Any}})
precompile(Tuple{typeof(Base.merge), Base.Dict{Symbol, Any}, Base.Dict{Symbol, Any}})
precompile(Tuple{typeof(Base.merge_types), Tuple{Vararg{Symbol, N} where N}, Type{var"#s77"} where var"#s77"<:(NamedTuple{names, T} where T<:Tuple where names), Type{var"#s76"} where var"#s76"<:(NamedTuple{names, T} where T<:Tuple where names)})
precompile(Tuple{typeof(Base.min), Int64, Int64, Int64, Int64, Vararg{Int64, N} where N})
precompile(Tuple{typeof(Base.min), Int64, Int64})
precompile(Tuple{typeof(Base.minimum), Array{Dates.Date, 1}})
precompile(Tuple{typeof(Base.minimum), Array{Float64, 1}})
precompile(Tuple{typeof(Base.minimum), Array{Int64, 1}})
precompile(Tuple{typeof(Base.minimum), Array{Union{Base.Missing, Float64}, 1}})
precompile(Tuple{typeof(Base.minimum), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.minimum), Base.SkipMissing{Array{Float64, 1}}})
precompile(Tuple{typeof(Base.minimum), Base.SkipMissing{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.minimum), Tuple{Int64}})
precompile(Tuple{typeof(Base.ntuple), StaticArrays.var"#3#4", Base.Val{1}})
precompile(Tuple{typeof(Base.parent), SentinelArrays.SentinelArray{Dates.Date, 1, Dates.Date, Base.Missing, Array{Dates.Date, 1}}})
precompile(Tuple{typeof(Base.parent), SentinelArrays.SentinelArray{Float64, 1, Float64, Base.Missing, Array{Float64, 1}}})
precompile(Tuple{typeof(Base.parent), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, UInt64})
precompile(Tuple{typeof(Base.prod), Tuple{Int64}})
precompile(Tuple{typeof(Base.promote), Float64, Float64})
precompile(Tuple{typeof(Base.promote_typeof), Array{Gadfly.Layer, 1}, Gadfly.Coord.Cartesian, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.promote_typeof), Float64, Int64, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.promote_typeof), Gadfly.Coord.Cartesian, Gadfly.Scale.ContinuousScale, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.promote_typeof), Gadfly.Scale.ContinuousScale, Gadfly.Guide.YTicks, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.promote_typeof), Gadfly.Scale.ContinuousScale, Gadfly.Scale.ContinuousScale, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.promote_typeof), Gadfly.Scale.ContinuousScale, Gadfly.Scale.DiscreteScale, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.push!), Array{Array{Any, 1}, 1}, Array{Any, 1}})
precompile(Tuple{typeof(Base.push!), Array{Array{Compose.Context, 1}, 1}, Array{Compose.Context, 1}})
precompile(Tuple{typeof(Base.push!), Array{ColorTypes.Colorant{T, N} where N where T, 1}, ColorTypes.HSL{Float64}})
precompile(Tuple{typeof(Base.push!), Array{ColorTypes.Color{T, N} where N where T, 1}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Base.push!), Array{ColorTypes.Color{T, N} where N where T, 1}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Form{P} where P<:Compose.FormPrimitive, 1}, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.JSIncludePrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Base.push!), Array{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}, 1}, Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}})
precompile(Tuple{typeof(Base.push!), Array{Dates.Date, 1}, Dates.Date})
precompile(Tuple{typeof(Base.push!), Array{Float64, 1}, Float64})
precompile(Tuple{typeof(Base.push!), Array{Gadfly.Guide.PositionedGuide, 1}, Gadfly.Guide.PositionedGuide})
precompile(Tuple{typeof(Base.push!), Array{Gadfly.GuideElement, 1}, Gadfly.Guide.ColorKey})
precompile(Tuple{typeof(Base.push!), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.push!), Array{Number, 1}, Float64})
precompile(Tuple{typeof(Base.push!), Array{Number, 1}, Int64})
precompile(Tuple{typeof(Base.push!), Array{String, 1}, InlineStrings.String31})
precompile(Tuple{typeof(Base.push!), Array{String, 1}, InlineStrings.String63})
precompile(Tuple{typeof(Base.push!), Array{Tuple{Int64, Int64, Compose.Container}, 1}, Tuple{Int64, Int64, Compose.Context}})
precompile(Tuple{typeof(Base.push!), Base.Set{AbstractString}, String})
precompile(Tuple{typeof(Base.push!), Base.Set{Any}, InlineStrings.String63})
precompile(Tuple{typeof(Base.push!), Base.Set{Any}, Type})
precompile(Tuple{typeof(Base.push!), Base.Set{Array{Float64, 1}}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.push!), Base.Set{ColorTypes.Color{T, N} where N where T}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Base.push!), Base.Set{ColorTypes.Color{T, N} where N where T}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.push!), Base.Set{Int64}, Int64})
precompile(Tuple{typeof(Base.push!), DataFrames.DataFrame, Tuple{InlineStrings.String31, InlineStrings.String31, ColorTypes.HSL{Float64}, Int64, Dates.Date, Dates.Date, Int64, Int64, Int64}})
precompile(Tuple{typeof(Base.push!), DataFrames.DataFrame, Tuple{InlineStrings.String63, InlineStrings.String63, ColorTypes.HSL{Float64}, Int64, Dates.Date, Dates.Date, Int64, Float64, Int64}})
precompile(Tuple{typeof(Base.push!), DataFrames.DataFrame, Tuple{InlineStrings.String63, InlineStrings.String63, ColorTypes.HSL{Float64}, Int64, Dates.Date, Dates.Date, Int64, Int64, Int64}})
precompile(Tuple{typeof(Base.push!), OrderedCollections.OrderedSet{Any}, InlineStrings.String31})
precompile(Tuple{typeof(Base.push!), OrderedCollections.OrderedSet{Any}, InlineStrings.String63})
precompile(Tuple{typeof(Base.rand), Random.MersenneTwister, Type{UInt8}, Int64})
precompile(Tuple{typeof(Base.reduce), typeof(Base.vcat), Array{Array{Any, 1}, 1}})
precompile(Tuple{typeof(Base.reinterpret), Type{Dates.Date}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.reinterpret), Type{Float64}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.reinterpret), Type{Int64}, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.replace), String, Base.Pair{String, String}})
precompile(Tuple{typeof(Base.resize!), Array{UInt32, 1}, Int64})
precompile(Tuple{typeof(Base.reverse), Array{String, 1}})
precompile(Tuple{typeof(Base.round), Type{Int64}, Int64})
precompile(Tuple{typeof(Base.setdiff), Base.Set{Symbol}, Base.Set{Symbol}})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{ColorTypes.Colorant{T, N} where N where T, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Dates.Date, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Float64, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Number, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{String, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, PooledArrays.PooledArray{Base.Missing, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, PooledArrays.PooledArray{InlineStrings.String63, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String15}, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String31}, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String3}, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{AbstractString, 1}, String, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Gadfly.Stat.RectbinStatistic, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Gadfly.Stat.SmoothStatistic, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Array{T, N} where N where T, 1}, Array{Float64, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Array{Tuple{Int64, Float64}, 1}, 1}, Array{Tuple{Int64, Float64}, 1}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{ColorTypes.Colorant{T, N} where N where T, 1}, ColorTypes.LCHab{Float32}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{ColorTypes.Colorant{T, N} where N where T, 1}, ColorTypes.LCHab{Float64}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{ColorTypes.RGB{Float32}, 1}, ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Dates.Date, 1}, Dates.Date, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Float64, 1}, Float64, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Float64, 2}, Float64, Int64, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Int32, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Measures.Measure, 1}, Measures.Length{:mm, Float64}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Nothing, 1}, Nothing, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Number, 1}, Float64, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Number, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Float64}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Tuple{Measures.Measure, Measures.Measure}, 1}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{UInt32, 1}, UInt32, Int64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Nothing}, Nothing, Type{Gadfly.Guide.Title}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Nothing}, Nothing, Type{Gadfly.Guide.XLabel}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Nothing}, Nothing, Type{Gadfly.Guide.XTicks}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Nothing}, Nothing, Type{Gadfly.Guide.YLabel}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Nothing}, Nothing, Type{Gadfly.Guide.YTicks}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.Color{T, N} where N where T, AbstractString}, String, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.Color{T, N} where N where T, Float64}, Float64, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.RGB{Float32}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}}, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, AbstractString}, String, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Scale.ContinuousColorScale, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Scale.ContinuousScale, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Scale.DiscreteScale, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Type{Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FillOpacityPrimitive}, Type{Compose.Property{Compose.FillOpacityPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FillPrimitive}, Type{Compose.Property{Compose.FillPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FontPrimitive}, Type{Compose.Property{Compose.FontPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.FontSizePrimitive}, Type{Compose.Property{Compose.FontSizePrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.JSCallPrimitive}, Type{Compose.Property{Compose.JSCallPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.JSIncludePrimitive}, Type{Compose.Property{Compose.JSIncludePrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.LineWidthPrimitive}, Type{Compose.Property{Compose.LineWidthPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.SVGAttributePrimitive}, Type{Compose.Property{Compose.SVGAttributePrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.SVGClassPrimitive}, Type{Compose.Property{Compose.SVGClassPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.StrokeDashPrimitive}, Type{Compose.Property{Compose.StrokeDashPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}, Compose.Property{Compose.StrokePrimitive}, Type{Compose.Property{Compose.StrokePrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillOpacityPrimitive}, Type{Compose.Property{Compose.FillOpacityPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.FillPrimitive}, Type{Compose.Property{Compose.FillPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.JSCallPrimitive}, Type{Compose.Property{Compose.JSCallPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.SVGClassPrimitive}, Type{Compose.Property{Compose.SVGClassPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokeDashPrimitive}, Type{Compose.Property{Compose.StrokeDashPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Compose.Property{Compose.StrokePrimitive}, Type{Compose.Property{Compose.StrokePrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.FillOpacityPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.FillPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.JSCallPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.SVGClassPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.StrokeDashPrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Nothing, Type{Compose.Property{Compose.StrokePrimitive}}})
precompile(Tuple{typeof(Base.setindex!), Compose.Table, Array{Compose.Context, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.setindex!), DataFrames.DataFrame, Base.UnitRange{Int64}, typeof(Base.:(!)), Symbol})
precompile(Tuple{typeof(Base.setindex!), DataFrames.DataFrame, ColorTypes.LCHab{Float32}, Int64, Symbol})
precompile(Tuple{typeof(Base.setindex!), DataFrames.DataFrame, ColorTypes.LCHab{Float64}, Int64, Symbol})
precompile(Tuple{typeof(Base.setindex!), DataFrames.DataFrame, Dates.Date, Int64, Symbol})
precompile(Tuple{typeof(Base.setindex!), DataFrames.DataFrame, Float64, Int64, Symbol})
precompile(Tuple{typeof(Base.setindex!), DataFrames.DataFrame, Int64, Int64, Symbol})
precompile(Tuple{typeof(Base.setindex!), DataFrames.DataFrame, String, Int64, Symbol})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{Any, Any}, Int64, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, String, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, String, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Base.Set{AbstractString}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Base.Set{AbstractString}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.setindex!), SentinelArrays.SentinelArray{Dates.Date, 1, Dates.Date, Base.Missing, Array{Dates.Date, 1}}, Dates.Date, Int64})
precompile(Tuple{typeof(Base.setindex!), SentinelArrays.SentinelArray{Float64, 1, Float64, Base.Missing, Array{Float64, 1}}, Float64, Int64})
precompile(Tuple{typeof(Base.setindex!), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Int64, Int64})
precompile(Tuple{typeof(Base.setindex_widen_up_to), Array{Base.Iterators.Cycle{IndirectArrays.IndirectArray{Int64, 1, UInt8, Array{UInt8, 1}, Array{Int64, 1}}}, 1}, Base.Iterators.Cycle{IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, Int64})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, Array{Dates.Date, 1}})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, Array{Float64, 1}})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, Array{Int64, 1}})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, Array{UInt32, 1}})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, PooledArrays.PooledArray{InlineStrings.String63, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, SentinelArrays.SentinelArray{Dates.Date, 1, Dates.Date, Base.Missing, Array{Dates.Date, 1}}})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, SentinelArrays.SentinelArray{Float64, 1, Float64, Base.Missing, Array{Float64, 1}}})
precompile(Tuple{typeof(Base.setproperty!), CSV.Column, Symbol, SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.setproperty!), Compose.Context, Symbol, Compose.ListNull{Compose.Form{P} where P<:Compose.FormPrimitive}})
precompile(Tuple{typeof(Base.setproperty!), Compose.Context, Symbol, Compose.UnitBox{Int64, Float64, Int64, Float64}})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.setproperty!), Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Symbol, Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}})
precompile(Tuple{typeof(Base.setproperty!), Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Symbol, Compose.ListNull{Compose.Property{P} where P<:Compose.PropertyPrimitive}})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, Array{ColorTypes.HSL{Float32}, 1}})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, Array{Int64, 1}})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.setproperty!), OrderedCollections.OrderedDict{Any, Any}, Symbol, Int64})
precompile(Tuple{typeof(Base.setproperty!), OrderedCollections.OrderedDict{Any, Nothing}, Symbol, Int64})
precompile(Tuple{typeof(Base.setproperty!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, Symbol, Int64})
precompile(Tuple{typeof(Base.setproperty!), OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, Base.Set{AbstractString}}, Symbol, Int64})
precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(Base.:(&)), Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Base.Broadcast.Extruded{Array{Nothing, 1}, Tuple{Bool}, Tuple{Int64}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}}}}}, Type{Bool}})
precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, typeof(getfield), Tuple{Base.Broadcast.Extruded{Array{Gadfly.Data, 1}, Tuple{Bool}, Tuple{Int64}}, Base.RefValue{Symbol}}}, Type{Nothing}})
precompile(Tuple{typeof(Base.similar), Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Base.size), Array{Float64, 2}, Int64})
precompile(Tuple{typeof(Base.size), Array{Int64, 1}})
precompile(Tuple{typeof(Base.size), Array{String, 1}})
precompile(Tuple{typeof(Base.size), Array{Union{Base.Missing, Float64}, 1}})
precompile(Tuple{typeof(Base.size), Array{Union{Base.Missing, InlineStrings.String31}, 1}})
precompile(Tuple{typeof(Base.size), Array{Union{Base.Missing, InlineStrings.String63}, 1}})
precompile(Tuple{typeof(Base.size), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.size), DataFrames.DataFrame})
precompile(Tuple{typeof(Base.size), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.size), IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.skipmissing), Array{Float64, 1}})
precompile(Tuple{typeof(Base.skipmissing), Array{Int64, 1}})
precompile(Tuple{typeof(Base.skipmissing), Array{String, 1}})
precompile(Tuple{typeof(Base.skipmissing), Array{Union{Base.Missing, Int64}, 1}})
precompile(Tuple{typeof(Base.skipmissing), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.something), Base.Some{Int64}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.ForwardOrdering, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.sortperm), Array{Int64, 1}})
precompile(Tuple{typeof(Base.split), String, String})
precompile(Tuple{typeof(Base.string), String, String, String, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Base.string), String, Symbol, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.sum), Array{Bool, 1}})
precompile(Tuple{typeof(Base.sum), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.sum), Function, Array{Float64, 1}})
precompile(Tuple{typeof(Base.supertype), DataType})
precompile(Tuple{typeof(Base.supertype), UnionAll})
precompile(Tuple{typeof(Base.task_local_storage)})
precompile(Tuple{typeof(Base.typename), UnionAll})
precompile(Tuple{typeof(Base.union!), Base.Set{Symbol}, Base.KeySet{Symbol, Base.Dict{Symbol, Any}}})
precompile(Tuple{typeof(Base.unique), Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64}, 1}})
precompile(Tuple{typeof(Base.unique), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.unique), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String31}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.unique), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}})
precompile(Tuple{typeof(Base.values), Base.Dict{Type, Type}})
precompile(Tuple{typeof(Base.vcat), Array{Float64, 1}, Base.Missing, Base.Missing})
precompile(Tuple{typeof(Base.vcat), Array{Float64, 1}, Float64, Float64})
precompile(Tuple{typeof(Base.vcat), Array{Float64, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.vcat), Array{Int64, 1}, Base.Missing, Base.Missing})
precompile(Tuple{typeof(Base.vcat), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}})
precompile(Tuple{typeof(Base.vcat), Float64, Array{Float64, 1}})
precompile(Tuple{typeof(Base.vcat), Float64, Float64})
precompile(Tuple{typeof(Base.vcat), Float64, Int64})
precompile(Tuple{typeof(Base.vcat), IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}, Base.Missing, Base.Missing})
precompile(Tuple{typeof(Base.vcat), Int64, Array{Float64, 1}})
precompile(Tuple{typeof(Base.vcat), Int64, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}})
precompile(Tuple{typeof(Base.vcat), Int64, Int64})
precompile(Tuple{typeof(Base.vect), Array{Gadfly.Layer, 1}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.vect), ColorTypes.HSL{Float32}})
precompile(Tuple{typeof(Base.vect), ColorTypes.HSL{Float64}, Vararg{ColorTypes.HSL{Float64}, N} where N})
precompile(Tuple{typeof(Base.vect), ColorTypes.LCHab{Float64}, Vararg{ColorTypes.LCHab{Float64}, N} where N})
precompile(Tuple{typeof(Base.vect), Compose.Context})
precompile(Tuple{typeof(Base.vect), Compose.FillOpacityPrimitive})
precompile(Tuple{typeof(Base.vect), Compose.FillPrimitive})
precompile(Tuple{typeof(Base.vect), Float64, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.vect), Gadfly.Stat.RectbinStatistic})
precompile(Tuple{typeof(Base.vect), Gadfly.Stat.SmoothStatistic})
precompile(Tuple{typeof(Base.vect), Measures.Length{:mm, Float64}, Vararg{Measures.Length{:mm, Float64}, N} where N})
precompile(Tuple{typeof(Base.vect), Tuple{Int64, ColorTypes.RGB{Float32}, Int64}})
precompile(Tuple{typeof(Base.vect), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Vararg{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, N} where N})
precompile(Tuple{typeof(Base.vect), Tuple{Symbol, String}, Vararg{Tuple{Symbol, String}, N} where N})
precompile(Tuple{typeof(CSV.checkcommentandemptyline), Array{UInt8, 1}, Int64, Int64, Any, Bool, Base.RefValue{Int64}})
precompile(Tuple{typeof(CSV.checkvaliddelim), String})
precompile(Tuple{typeof(CSV.columnname), Array{UInt8, 1}, Parsers.PosLen, Int16, Parsers.Options, Int64})
precompile(Tuple{typeof(CSV.detectcolumnnames), Array{UInt8, 1}, Int64, Int64, Int64, Parsers.Options, Any, Bool})
precompile(Tuple{typeof(CSV.finaltype), Type})
precompile(Tuple{typeof(CSV.getbytebuffer), Base.GenericIOBuffer{Array{UInt8, 1}}, Bool})
precompile(Tuple{typeof(CSV.getname), Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{typeof(CSV.getpool), Bool})
precompile(Tuple{typeof(CSV.getref!), CSV.RefPool, Type{InlineStrings.String15}, InlineStrings.String15})
precompile(Tuple{typeof(CSV.getref!), CSV.RefPool, Type{InlineStrings.String31}, InlineStrings.String31})
precompile(Tuple{typeof(CSV.getref!), CSV.RefPool, Type{InlineStrings.String3}, InlineStrings.String3})
precompile(Tuple{typeof(CSV.getref!), CSV.RefPool, Type{InlineStrings.String63}, InlineStrings.String63})
precompile(Tuple{typeof(CSV.getref!), CSV.RefPool, Type{InlineStrings.String7}, InlineStrings.String7})
precompile(Tuple{typeof(CSV.getsource), Any, Bool})
precompile(Tuple{typeof(CSV.makepooled2!), CSV.Column, Type{Base.Missing}, Base.Dict{Base.Missing, UInt32}, Array{UInt32, 1}})
precompile(Tuple{typeof(CSV.makepooled2!), CSV.Column, Type{InlineStrings.String15}, Base.Dict{Union{Base.Missing, InlineStrings.String15}, UInt32}, Array{UInt32, 1}})
precompile(Tuple{typeof(CSV.makepooled2!), CSV.Column, Type{InlineStrings.String31}, Base.Dict{Union{Base.Missing, InlineStrings.String31}, UInt32}, Array{UInt32, 1}})
precompile(Tuple{typeof(CSV.makepooled2!), CSV.Column, Type{InlineStrings.String3}, Base.Dict{Union{Base.Missing, InlineStrings.String3}, UInt32}, Array{UInt32, 1}})
precompile(Tuple{typeof(CSV.makepooled2!), CSV.Column, Type{InlineStrings.String63}, Base.Dict{Union{Base.Missing, InlineStrings.String63}, UInt32}, Array{UInt32, 1}})
precompile(Tuple{typeof(CSV.normalizename), String})
precompile(Tuple{typeof(CSV.parsefilechunk!), CSV.Context, Int64, Int64, Int64, Int64, Array{CSV.Column, 1}, Type{Tuple{}}})
precompile(Tuple{typeof(CSV.readsplitline), Array{UInt8, 1}, Int64, Int64, Parsers.Options})
precompile(Tuple{typeof(CSV.skiptorow), Array{UInt8, 1}, Int64, Int64, UInt8, UInt8, UInt8, Any, Bool, Int64, Int64})
precompile(Tuple{typeof(CSV.trytopromote!), Type{Int64}, Type{Float64}, Array{UInt8, 1}, Int64, Int64, CSV.Column, Int64})
precompile(Tuple{typeof(CSV.trytopromote!), Type{Int64}, Type{Int128}, Array{UInt8, 1}, Int64, Int64, CSV.Column, Int64})
precompile(Tuple{typeof(Cairo.destroy), Cairo.CairoContext})
precompile(Tuple{typeof(Cairo.destroy), Cairo.CairoSurfaceIOStream{UInt32}})
precompile(Tuple{typeof(Cairo.set_text), Cairo.CairoContext, String, Bool})
precompile(Tuple{typeof(Cairo.write_to_stream_callback), Base.IOStream, Ptr{UInt8}, UInt32})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.HSL{Float32}}, Type{ColorTypes.HSL{T} where T<:AbstractFloat}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.LCHab{Float64}}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, ColorTypes.RGB{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.Lab{Float64}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, Type{ColorTypes.HSL{T} where T<:AbstractFloat}, ColorTypes.HSL{Float32}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.Lab{Float64}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, Type{ColorTypes.HSL{T} where T<:AbstractFloat}, ColorTypes.HSL{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.RGB{Float32}}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float32}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.RGB{Float32}}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.RGB{Float32}}, Type{ColorTypes.RGB{T} where T<:Union{AbstractFloat, FixedPointNumbers.FixedPoint{T, f} where f where T<:Integer}}, Type{ColorTypes.Lab{T} where T<:AbstractFloat}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.XYZ{Float32}}, Type{ColorTypes.XYZ{T} where T<:AbstractFloat}, Type{ColorTypes.LCHab{T} where T<:AbstractFloat}, ColorTypes.LCHab{Float32}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.XYZ{Float64}}, Type{ColorTypes.XYZ{T} where T<:AbstractFloat}, Type{ColorTypes.HSL{T} where T<:AbstractFloat}, ColorTypes.HSL{Float32}})
precompile(Tuple{typeof(ColorTypes._convert), Type{ColorTypes.XYZ{Float64}}, Type{ColorTypes.XYZ{T} where T<:AbstractFloat}, Type{ColorTypes.HSL{T} where T<:AbstractFloat}, ColorTypes.HSL{Float64}})
precompile(Tuple{typeof(ColorTypes._parameter_upper_bound), UnionAll, Int64})
precompile(Tuple{typeof(ColorTypes.cconvert), Type{ColorTypes.RGB{Float32}}, ColorTypes.LCHab{Float32}})
precompile(Tuple{typeof(ColorTypes.cconvert), Type{ColorTypes.RGB{Float32}}, ColorTypes.LCHab{Float64}})
precompile(Tuple{typeof(ColorTypes.cconvert), Type{ColorTypes.RGB{Float32}}, ColorTypes.Lab{Float64}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.HSL{Float32}}, ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Colors.distinguishable_colors), Int64, ColorTypes.HSL{Float32}})
precompile(Tuple{typeof(Colors.hex), ColorTypes.HSL{Float32}})
precompile(Tuple{typeof(Colors.hex), ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Colors.pow12_5), Float64})
precompile(Tuple{typeof(Compose.PDF), String, Vararg{Any, N} where N})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FillOpacityPrimitive})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FillPrimitive})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FontPrimitive})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FontSizePrimitive})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.LineWidthPrimitive})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.StrokeDashPrimitive})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.StrokePrimitive})
precompile(Tuple{typeof(Compose.circle), Array{Measures.Length{:cy, Float64}, 1}, Base.UnitRange{Int64}, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Compose.clip), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Context, Compose.Context})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Context})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}, Compose.Property{Compose.StrokePrimitive}, Compose.Property{Compose.FillPrimitive}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.FillOpacityPrimitive}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.SVGClassPrimitive}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Property{Compose.FillOpacityPrimitive}, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Property{Compose.FillOpacityPrimitive}, Compose.Property{Compose.StrokePrimitive}, Compose.Property{Compose.SVGClassPrimitive}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.FillOpacityPrimitive}, Compose.Property{Compose.StrokePrimitive}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.SVGClassPrimitive}, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Property{Compose.StrokePrimitive}, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Compose.Property{Compose.StrokePrimitive}, Compose.Property{Compose.SVGClassPrimitive}, Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Tuple{Compose.Context, Array{Compose.Context, 1}, Array{Compose.Context, 1}, Array{Compose.Context, 1}}, Tuple{Compose.Context, Array{Compose.Context, 1}, Array{Compose.Context, 1}, Array{Compose.Context, 1}}, Tuple{Compose.Context, Compose.Context}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Tuple{Compose.Context, Array{Compose.Context, 1}, Array{Compose.Context, 1}, Array{Compose.Context, 1}}, Tuple{Compose.Context, Compose.Context}, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Tuple{Compose.Context, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}, Tuple{Compose.Context, Compose.Form{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}, Compose.Property{Compose.LineWidthPrimitive}, Compose.Property{Compose.StrokePrimitive}}, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.StrokePrimitive}, Compose.Property{Compose.FillOpacityPrimitive}, Compose.Property{Compose.SVGAttributePrimitive}}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Tuple{Compose.Context, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Compose.Property{Compose.FontPrimitive}, Compose.Property{Compose.FontSizePrimitive}, Compose.Property{Compose.FillPrimitive}}, Tuple{Compose.Context, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.Property{Compose.FillPrimitive}}, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context})
precompile(Tuple{typeof(Compose.compose), Compose.Context, Compose.Context})
precompile(Tuple{typeof(Compose.context), Measures.Length{:mm, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Compose.context), Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Compose.context), Measures.Length{:w, Float64}, Measures.Length{:h, Float64}, Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.count_unique_primitives), Compose.Property{Compose.FillOpacityPrimitive}, Int64})
precompile(Tuple{typeof(Compose.count_unique_primitives), Compose.Property{Compose.FillPrimitive}, Int64})
precompile(Tuple{typeof(Compose.cyclezip), Array{Float64, 1}, Vararg{AbstractArray{T, N} where N where T, N} where N})
precompile(Tuple{typeof(Compose.cyclezip), IndirectArrays.IndirectArray{Int64, 1, UInt8, Array{UInt8, 1}, Array{Int64, 1}}, Vararg{AbstractArray{T, N} where N where T, N} where N})
precompile(Tuple{typeof(Compose.docfunc), Symbol, String})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Gadfly.Plot})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.AdhocContainerPromise, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.AdhocContainerPromise, Compose.IdentityTransform, Compose.UnitBox{Int64, Float64, Int64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.Context, Compose.IdentityTransform, Compose.UnitBox{Int64, Float64, Int64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.Context, Compose.IdentityTransform, Compose.UnitBox{Int64, Int64, Int64, Int64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.Table, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.fillopacity), Array{Float64, 1}})
precompile(Tuple{typeof(Compose.jscall), Array{String, 1}})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Any, Float64}, 1}, 1}})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Float64, Measures.Length{:h, Float64}}, 1}, 1}})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Int64, Float64}, 1}, 1}, Symbol})
precompile(Tuple{typeof(Compose.line), Array{Array{Tuple{Measures.Length{:w, Float64}, Float64}, 1}, 1}})
precompile(Tuple{typeof(Compose.link_cairo)})
precompile(Tuple{typeof(Compose.max_text_extents), String, Measures.Length{:mm, Float64}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Compose.max_text_extents), String, Measures.Length{:mm, Float64}, String})
precompile(Tuple{typeof(Compose.order), Compose.AdhocContainerPromise})
precompile(Tuple{typeof(Compose.order), Compose.Context})
precompile(Tuple{typeof(Compose.order), Compose.Table})
precompile(Tuple{typeof(Compose.pad_inner), Compose.Context, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.rectangle), Array{Float64, 1}, Array{Float64, 1}, Array{Measures.Add{Measures.Length{:cx, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{Measures.Add{Measures.Length{:cy, Float64}, Measures.Length{:mm, Float64}}, 1}, Symbol})
precompile(Tuple{typeof(Compose.rectangle), Array{Int64, 1}, Array{Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}, 1}, Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Compose.rectangle), Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.stroke), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Compose.stroke), Array{Nothing, 1}})
precompile(Tuple{typeof(Compose.stroke), ColorTypes.HSL{Float32}})
precompile(Tuple{typeof(Compose.strokedash), Array{Array{Any, 1}, 1}})
precompile(Tuple{typeof(Compose.strokedash), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Compose.svgattribute), String, Array{Float64, 1}})
precompile(Tuple{typeof(Compose.svgclass), Array{String, 1}})
precompile(Tuple{typeof(Compose.text), Array{Float64, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{AbstractString, 1}, Array{Compose.HCenter, 1}, Array{Compose.VBottom, 1}})
precompile(Tuple{typeof(Compose.text), Array{Float64, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{AbstractString, 1}, Array{Compose.HCenter, 1}, Array{Compose.VTop, 1}})
precompile(Tuple{typeof(Compose.text), Array{Int64, 1}, Array{Float64, 1}, Array{String, 1}, Array{Compose.HLeft, 1}, Array{Compose.VCenter, 1}})
precompile(Tuple{typeof(Compose.text), Array{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{Float64, 1}, Array{AbstractString, 1}, Array{Compose.HRight, 1}, Array{Compose.VCenter, 1}})
precompile(Tuple{typeof(Compose.text), Array{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{Int64, 1}, Array{AbstractString, 1}, Array{Compose.HRight, 1}, Array{Compose.VCenter, 1}})
precompile(Tuple{typeof(Compose.text), Array{Measures.Length{:mm, Float64}, 1}, Array{Measures.Length{:cy, Int64}, 1}, Array{AbstractString, 1}, Array{Compose.HLeft, 1}, Array{Compose.VCenter, 1}})
precompile(Tuple{typeof(Compose.text), Array{Measures.Length{:w, Float64}, 1}, Array{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, 1}, Array{String, 1}, Array{Compose.HCenter, 1}, Array{Compose.VCenter, 1}})
precompile(Tuple{typeof(Compose.text), Measures.Length{:w, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}, String, Compose.HCenter, Compose.VTop})
precompile(Tuple{typeof(Compose.text), Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}, String, Compose.HLeft, Compose.VBottom})
precompile(Tuple{typeof(Compose.text_extents), String, Measures.Length{:mm, Float64}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Compose.text_width), Base.Dict{String, Any}, Base.SubString{String}, Float64})
precompile(Tuple{typeof(Compose.visible), Array{Bool, 1}})
precompile(Tuple{typeof(Compose.x_measure), Int64})
precompile(Tuple{typeof(Compose.x_measure), Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Core.Compiler.abstract_call_builtin), Core.Compiler.NativeInterpreter, typeof(getfield), Nothing, Array{Any, 1}, Core.Compiler.InferenceState, Int64})
precompile(Tuple{typeof(Core.Compiler.abstract_call_builtin), Core.Compiler.NativeInterpreter, typeof(isa), Nothing, Array{Any, 1}, Core.Compiler.InferenceState, Int64})
precompile(Tuple{typeof(DataAPI.nrow), DataFrames.DataFrame})
precompile(Tuple{typeof(DataFrames._preprocess_column), Array{ColorTypes.Colorant{T, N} where N where T, 1}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), Array{Dates.Date, 1}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), Array{Float64, 1}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), Array{Int64, 1}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), Array{Number, 1}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), Array{String, 1}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), Array{Union{Base.Missing, Float64}, 1}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), Array{Union{Base.Missing, Int64}, 1}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), PooledArrays.PooledArray{Base.Missing, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), PooledArrays.PooledArray{InlineStrings.String15, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), PooledArrays.PooledArray{InlineStrings.String31, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), PooledArrays.PooledArray{InlineStrings.String63, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String15}, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String31}, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String3}, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), SentinelArrays.SentinelArray{Float64, 1, Float64, Base.Missing, Array{Float64, 1}}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._preprocess_column), SentinelArrays.SentinelArray{Int64, 1, Int64, Base.Missing, Array{Int64, 1}}, Int64, Bool})
precompile(Tuple{typeof(DataFrames._sortperm), DataFrames.DataFrame, Base.Sort.MergeSortAlg, Base.Order.Perm{Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Array{Number, 1}}})
precompile(Tuple{typeof(DataFrames.ordering), DataFrames.DataFrame, Symbol, Function, Function, Bool, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(DocStringExtensions.template_hook), LineNumberNode, Module, String, Symbol})
precompile(Tuple{typeof(Formatting.sprintf1), String, Int64})
precompile(Tuple{typeof(Gadfly.Guide.layout_guides), Compose.Context, Gadfly.Coord.Cartesian, Gadfly.Theme, Gadfly.Guide.PositionedGuide, Vararg{Gadfly.Guide.PositionedGuide, N} where N})
precompile(Tuple{typeof(Gadfly.Guide.render_continuous_color_key), Base.Dict{ColorTypes.Color{T, N} where N where T, Float64}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, Main.var"#48#61", Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.Guide.render_discrete_color_key), Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, Gadfly.Scale.var"#labeler#64"{Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.Guide.render_key_title), String, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.ContinuousColorScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.ContinuousScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.DiscreteColorScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.DiscreteLinestyleScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.DiscreteScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale_typed!), Array{ColorTypes.RGB{Float32}, 1}, Array{Union{Base.Missing, Float64}, 1}, Gadfly.Scale.ContinuousColorScale, Float64, Float64})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale_typed!), Array{ColorTypes.RGB{Float32}, 1}, Array{Union{Base.Missing, Int64}, 1}, Gadfly.Scale.ContinuousColorScale, Float64, Float64})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale_typed!), Array{Float64, 1}, Array{Union{Base.Missing, Float64}, 1}, Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale_typed!), Array{Int64, 1}, Array{Int64, 1}, Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale_typed!), Array{Int64, 1}, Array{Union{Base.Missing, Int64}, 1}, Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Gadfly.Scale.apply_scales), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.Scale.discretize), Array{InlineStrings.String31, 1}, Array{String, 1}})
precompile(Tuple{typeof(Gadfly.Scale.discretize), Array{InlineStrings.String63, 1}, Array{String, 1}})
precompile(Tuple{typeof(Gadfly.Scale.discretize), Array{String, 1}, Array{String, 1}})
precompile(Tuple{typeof(Gadfly.Scale.discretize), PooledArrays.PooledArray{Union{Base.Missing, InlineStrings.String63}, UInt32, 1, Array{UInt32, 1}}, Array{String, 1}, Nothing})
precompile(Tuple{typeof(Gadfly.Scale.lab_gradient), ColorTypes.HSL{Float64}, Vararg{ColorTypes.HSL{Float64}, N} where N})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistic), Gadfly.Stat.RectbinStatistic, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistic), Gadfly.Stat.SmoothStatistic, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistic), Gadfly.Stat.TickStatistic, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.Stat.apply_statistics), Array{Gadfly.StatisticElement, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Gadfly.Coord.Cartesian, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.Stat.barminmax), Array{Int64, 1}, Bool})
precompile(Tuple{typeof(Gadfly.Stat.barminmax), IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}, Bool})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Array{Gadfly.Layer, 1}})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Coord.Cartesian})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Guide.Title})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Guide.XLabel})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Guide.XTicks})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Guide.YLabel})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Guide.YTicks})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Scale.ContinuousColorScale})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Scale.DiscreteColorScale})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Scale.DiscreteScale})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.assert_aesthetics_equal_length), String, Gadfly.Aesthetics, Symbol, Vararg{Symbol, N} where N})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Function, Function})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, Array{Float64, 1}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, Array{Int64, 1}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, Base.Dict{ColorTypes.Color{T, N} where N where T, Float64}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, Base.Dict{Symbol, AbstractString}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, Bool})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, OrderedCollections.OrderedDict{Any, Any}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Nothing, String})
precompile(Tuple{typeof(Gadfly.concat), Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.concrete_length), Array{Float64, 1}})
precompile(Tuple{typeof(Gadfly.concrete_length), Array{Int64, 1}})
precompile(Tuple{typeof(Gadfly.concrete_length), IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}})
precompile(Tuple{typeof(Gadfly.concrete_minmax), Array{Float64, 1}, Float64, Float64})
precompile(Tuple{typeof(Gadfly.concrete_minmax), Array{Int64, 1}, Float64, Float64})
precompile(Tuple{typeof(Gadfly.concrete_minmax), Array{Int64, 1}, Int64, Int64})
precompile(Tuple{typeof(Gadfly.concrete_minmax), IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}, Float64, Float64})
precompile(Tuple{typeof(Gadfly.default_scales), Gadfly.Geom.LineGeometry, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.default_scales), Gadfly.Geom.RectangularBinGeometry, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.default_scales), Gadfly.Stat.RectbinStatistic, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.default_scales), Gadfly.Stat.SmoothStatistic, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Geom.RectangularBinGeometry})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{ColorTypes.RGB{Float32}, 1}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{Int64, 1}})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Geom.RectangularBinGeometry})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Scale.DiscreteColorScale})
precompile(Tuple{typeof(Gadfly.evalmapping!), Base.Dict{Symbol, Any}, DataFrames.DataFrame, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.evalmapping), DataFrames.DataFrame, Symbol})
precompile(Tuple{typeof(Gadfly.get_stroke_vector), Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Gadfly.isconcrete), Float64})
precompile(Tuple{typeof(Gadfly.plot), Array{Gadfly.Layer, 1}, Gadfly.Coord.Cartesian, Gadfly.Scale.ContinuousScale, Gadfly.Scale.ContinuousScale, Gadfly.Guide.YTicks, Gadfly.Scale.DiscreteColorScale, Vararg{Union{Array{Gadfly.Layer, 1}, Function, Gadfly.Element, Gadfly.Theme, Type}, N} where N})
precompile(Tuple{typeof(Gadfly.plot), Array{Gadfly.Layer, 1}, Gadfly.Coord.Cartesian, Gadfly.Scale.ContinuousScale, Gadfly.Scale.DiscreteScale, Gadfly.Scale.ContinuousColorScale, Gadfly.Theme, Vararg{Union{Array{Gadfly.Layer, 1}, Function, Gadfly.Element, Gadfly.Theme, Type}, N} where N})
precompile(Tuple{typeof(Gadfly.plot), Nothing, Base.Dict{Union{}, Union{}}, Array{Gadfly.Layer, 1}, Gadfly.Coord.Cartesian, Gadfly.Scale.ContinuousScale, Gadfly.Scale.ContinuousScale, Vararg{Union{Array{Gadfly.Layer, 1}, Function, Gadfly.Element, Gadfly.Theme, Type}, N} where N})
precompile(Tuple{typeof(Gadfly.plot), Nothing, Base.Dict{Union{}, Union{}}, Array{Gadfly.Layer, 1}, Gadfly.Coord.Cartesian, Gadfly.Scale.ContinuousScale, Gadfly.Scale.DiscreteScale, Vararg{Union{Array{Gadfly.Layer, 1}, Function, Gadfly.Element, Gadfly.Theme, Type}, N} where N})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Geom.LineGeometry, Gadfly.Theme, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Geom.RectangularBinGeometry, Gadfly.Theme, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.ColorKey, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.CrossHair, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.HelpScreen, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.PanelBackground, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.QuestionMark, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.Title, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.XLabel, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.XTicks, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.YLabel, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.YTicks, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Gadfly.render_prepared), Gadfly.Plot, Gadfly.Coord.Cartesian, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Array{Gadfly.GuideElement, 1}})
precompile(Tuple{typeof(Gadfly.trim_zip), Array{Gadfly.Layer, 1}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Gadfly.undefined_aesthetics), Gadfly.Aesthetics, Symbol, Vararg{Symbol, N} where N})
precompile(Tuple{typeof(IterTools.groupby), Gadfly.Guide.var"#30#39", Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}})
precompile(Tuple{typeof(IterTools.groupby), Gadfly.Guide.var"#49#58", Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Float64, 1}}}})
precompile(Tuple{typeof(IterTools.groupby), Gadfly.Guide.var"#49#58", Base.Iterators.Zip{Tuple{Array{Float64, 1}, Array{Int64, 1}}}})
precompile(Tuple{typeof(IterTools.takestrict), Base.Iterators.Zip{Tuple{Base.Iterators.Cycle{Array{Float64, 1}}, Base.Iterators.Cycle{Array{ColorTypes.RGB{Float32}, 1}}, Base.Iterators.Cycle{Array{Float64, 1}}}}, Int64})
precompile(Tuple{typeof(IterTools.takestrict), Base.Iterators.Zip{Tuple{Base.Iterators.Cycle{IndirectArrays.IndirectArray{Int64, 1, UInt8, Array{UInt8, 1}, Array{Int64, 1}}}, Base.Iterators.Cycle{IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Int64, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, Base.Iterators.Cycle{IndirectArrays.IndirectArray{Int64, 1, Int64, Array{Int64, 1}, Array{Int64, 1}}}}}, Int64})
precompile(Tuple{typeof(Loess.predict), Loess.LoessModel{Float64}, Array{Float64, 1}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.JSIncludePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.UnitBox{Int64, Float64, Int64, Float64}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.UnitBox{Int64, Int64, Int64, Int64}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:cx, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Add{Measures.Length{:cy, Float64}, Measures.Length{:mm, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:cx, Int64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Add{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Float64}, Measures.Length{:h, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Int64}, Measures.Add{Measures.Length{:cy, Int64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Length{:cy, Float64}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Float64, Int64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Float64, Int64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Float64, Int64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Float64, Int64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Float64, Int64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Float64, Int64, Float64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Float64, Int64, Float64}, Compose.IdentityTransform, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Tuple{Measures.Length{:cy, Float64}, Measures.Length{:cy, Int64}}})
precompile(Tuple{typeof(OrderedCollections.hashindex), ColorTypes.Lab{Float64}, Int64})
precompile(Tuple{typeof(OrderedCollections.hashindex), ColorTypes.RGB{Float32}, Int64})
precompile(Tuple{typeof(OrderedCollections.hashindex), InlineStrings.String31, Int64})
precompile(Tuple{typeof(OrderedCollections.hashindex), InlineStrings.String63, Int64})
precompile(Tuple{typeof(Parsers.xparse), Type{InlineStrings.String15}, Array{UInt8, 1}, Int64, Int64, Parsers.Options, Type{Any}})
precompile(Tuple{typeof(Parsers.xparse), Type{InlineStrings.String31}, Array{UInt8, 1}, Int64, Int64, Parsers.Options, Type{Any}})
precompile(Tuple{typeof(Parsers.xparse), Type{InlineStrings.String63}, Array{UInt8, 1}, Int64, Int64, Parsers.Options, Type{Any}})
precompile(Tuple{typeof(Printf.computelen), Array{Base.UnitRange{Int64}, 1}, Tuple{Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}}, Tuple{String, Symbol, Symbol, Symbol, Dates.Date, Dates.Date}})
precompile(Tuple{typeof(Printf.fmt), Array{UInt8, 1}, Int64, Dates.Date, Printf.Spec{Base.Val{Char(0x73000000)}}})
precompile(Tuple{typeof(Printf.fmt), Array{UInt8, 1}, Int64, Symbol, Printf.Spec{Base.Val{Char(0x73000000)}}})
precompile(Tuple{typeof(Printf.format), Array{UInt8, 1}, Int64, Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}}}, String, Vararg{Any, N} where N})
precompile(Tuple{typeof(Printf.format), Printf.Format{Base.CodeUnits{UInt8, String}, Tuple{Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}, Printf.Spec{Base.Val{Char(0x73000000)}}}}, String, Symbol, Symbol, Vararg{Any, N} where N})
precompile(Tuple{typeof(SentinelArrays.newsentinel), Type})
precompile(Tuple{typeof(StaticArrays.tuple_length), Type{Tuple{1}}})
precompile(Tuple{typeof(StaticArrays.tuple_minimum), Type{Tuple{1}}})
precompile(Tuple{typeof(StaticArrays.tuple_prod), Type{Tuple{1}}})
precompile(Tuple{typeof(Statistics.mean), Array{Float64, 1}})
precompile(Tuple{typeof(Statistics.quantile), Array{Int64, 1}, Float64})
precompile(Tuple{typeof(Statistics.quantile), Array{Union{Base.Missing, Float64}, 1}, Float64})
precompile(Tuple{typeof(Statistics.quantile), Array{Union{Base.Missing, Int64}, 1}, Float64})
precompile(Tuple{typeof(Statistics.quantile), Distributions.TDist{Float64}, Float64})
