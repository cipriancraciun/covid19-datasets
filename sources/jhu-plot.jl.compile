precompile(Tuple{typeof(Compose.docfunc), Symbol, String})
precompile(Tuple{getfield(Compose, Symbol("#118#124"))})
precompile(Tuple{typeof(Base._compute_eltype), Type{Tuple{String, Symbol, Symbol}}})
precompile(Tuple{typeof(Base.getindex), Tuple{String, Symbol, Symbol}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.Printf._printf), String, Expr, String, Tuple{Symbol, Symbol}})
precompile(Tuple{Type{Base.Set{AbstractString}}})
precompile(Tuple{typeof(Fontconfig.list), Fontconfig.Pattern})
precompile(Tuple{typeof(Fontconfig.list)})
precompile(Tuple{typeof(Base.iterate), Array{Fontconfig.Pattern, 1}})
precompile(Tuple{typeof(Fontconfig.format), Fontconfig.Pattern, String})
precompile(Tuple{typeof(Base.iterate), Array{Fontconfig.Pattern, 1}, Int64})
precompile(Tuple{typeof(Base.union!), Base.Set{String}, Array{String, 1}})
precompile(Tuple{Type{Base.Set{T} where T}, Array{String, 1}})
precompile(Tuple{typeof(Base._compute_eltype), Type{Tuple{Symbol, String, String}}})
precompile(Tuple{typeof(Base.getindex), Tuple{Symbol, String, String}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.Printf._printf), String, Expr, String, Tuple{String}})
precompile(Tuple{Type{Compose.PangoLayout}})
precompile(Tuple{typeof(Compose.link_fontconfig)})
precompile(Tuple{getfield(Main, Symbol("#3#4")), DataFrames.DataFrameRow{DataFrames.DataFrame, DataFrames.Index}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#3#4"))}}, Tuple{Base.OneTo{Int64}, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#3#4"))}}})
precompile(Tuple{typeof(Base.filter), getfield(Main, Symbol("#3#4")), DataFrames.DataFrame})
precompile(Tuple{getfield(Fontconfig, Symbol("#2#5")), Fontconfig.Pattern})
precompile(Tuple{typeof(Base.getindex), CSV.Column{Int64, Int64}, Int64})
precompile(Tuple{getfield(Main, Symbol("#5#6")), DataFrames.DataFrameRow{DataFrames.DataFrame, DataFrames.Index}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Bool, 1}, Bool, Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#5#6"))}}, Tuple{Base.OneTo{Int64}, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{DataFrames.DataFrameRows{DataFrames.DataFrame, DataFrames.Index}, getfield(DataFrames, Symbol("#64#65")){getfield(Main, Symbol("#5#6"))}}})
precompile(Tuple{typeof(Base.filter), getfield(Main, Symbol("#5#6")), DataFrames.DataFrame})
precompile(Tuple{Type{Base.Val{:dark}}})
precompile(Tuple{Type{NamedTuple{(:point_size, :line_width, :grid_line_width, :highlight_width, :major_label_font, :major_label_font_size, :minor_label_font, :minor_label_font_size, :point_label_font, :point_label_font_size, :key_title_font, :key_title_font_size, :key_label_font, :key_label_font_size, :key_position, :key_max_columns, :discrete_highlight_color, :plot_padding), T} where T<:Tuple}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, Symbol, Int64, getfield(Main, Symbol("#7#8")), Array{Measures.Length{:mm, Float64}, 1}}})
precompile(Tuple{typeof(Base._compute_eltype), Type{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, Symbol, Int64, getfield(Main, Symbol("#7#8")), Array{Measures.Length{:mm, Float64}, 1}}}})
precompile(Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:point_size, :line_width, :grid_line_width, :highlight_width, :major_label_font, :major_label_font_size, :minor_label_font, :minor_label_font_size, :point_label_font, :point_label_font_size, :key_title_font, :key_title_font_size, :key_label_font, :key_label_font_size, :key_position, :key_max_columns, :discrete_highlight_color, :plot_padding), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, Symbol, Int64, getfield(Main, Symbol("#7#8")), Array{Measures.Length{:mm, Float64}, 1}}}, Type{Gadfly.Theme}, Gadfly.Theme})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##style")), NamedTuple{(:point_size, :line_width, :grid_line_width, :highlight_width, :major_label_font, :major_label_font_size, :minor_label_font, :minor_label_font_size, :point_label_font, :point_label_font_size, :key_title_font, :key_title_font_size, :key_label_font, :key_label_font_size, :key_position, :key_max_columns, :discrete_highlight_color, :plot_padding), Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, Symbol, Int64, getfield(Main, Symbol("#7#8")), Array{Measures.Length{:mm, Float64}, 1}}}, typeof(Gadfly.style)})
precompile(Tuple{getfield(Gadfly, Symbol("##Theme#58")), ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Function, Function, Array{Function, 1}, Measures.Length{:mm, Float64}, Array{Symbol, 1}, Array{Float64, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Nothing, Float64, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Array{Measures.Length{:mm, Float64}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Measures.Length{:mm, Float64}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, String, Measures.Length{:mm, Float64}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Int64, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, typeof(Gadfly.default_stroke_color), Measures.Length{:mm, Float64}, getfield(Main, Symbol("#7#8")), typeof(Gadfly.default_continuous_highlight_color), getfield(Gadfly, Symbol("#lowlight_color#65")), typeof(Gadfly.default_middle_color), Measures.Length{:mm, Float64}, Symbol, Symbol, typeof(Gadfly.Shape.square), Nothing, Nothing, Symbol, Nothing, Measures.Length{:mm, Float64}, Int64, Float64, Float64, Float64, Measures.Length{:mm, Float64}, Int64, Gadfly.Scale.DiscreteColorScale, Gadfly.Scale.ContinuousColorScale, Type{Gadfly.Theme}, Gadfly.Theme})
precompile(Tuple{typeof(Base.getindex), Base.Iterators.Pairs{Symbol, Symbol, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:x, :y, :color), Tuple{Symbol, Symbol, Symbol}}}, Symbol})
precompile(Tuple{Type{Gadfly.Layer}, Gadfly.Layer})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Array{Gadfly.Layer, 1}, Gadfly.Geom.PointGeometry})
precompile(Tuple{getfield(Gadfly, Symbol("##layer#69")), Base.Iterators.Pairs{Symbol, Symbol, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:x, :y, :color), Tuple{Symbol, Symbol, Symbol}}}, typeof(Gadfly.layer), DataFrames.DataFrame, Type{Gadfly.Geom.PointGeometry}})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##layer")), NamedTuple{(:x, :y, :color), Tuple{Symbol, Symbol, Symbol}}, typeof(Gadfly.layer), DataFrames.DataFrame, Type{Gadfly.Geom.PointGeometry}})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Array{Gadfly.Layer, 1}, Gadfly.Geom.LineGeometry})
precompile(Tuple{getfield(Gadfly, Symbol("##layer#69")), Base.Iterators.Pairs{Symbol, Symbol, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:x, :y, :color), Tuple{Symbol, Symbol, Symbol}}}, typeof(Gadfly.layer), DataFrames.DataFrame, Gadfly.Geom.LineGeometry})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##layer")), NamedTuple{(:x, :y, :color), Tuple{Symbol, Symbol, Symbol}}, typeof(Gadfly.layer), DataFrames.DataFrame, Gadfly.Geom.LineGeometry})
precompile(Tuple{typeof(Base.minimum), Array{Int64, 1}})
precompile(Tuple{typeof(Base.vect), Int64, Vararg{Any, N} where N})
precompile(Tuple{Type{NamedTuple{(:format, :labels), T} where T<:Tuple}, Tuple{Symbol, getfield(Main, Symbol("#9#10"))}})
precompile(Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}})
precompile(Tuple{getfield(Gadfly.Scale, Symbol("#kw##31#33")), NamedTuple{(:format, :labels), Tuple{Symbol, getfield(Main, Symbol("#9#10"))}}, getfield(Gadfly.Scale, Symbol("#31#33")){getfield(Gadfly.Scale, Symbol("#31#32#34")){Array{Symbol, 1}, Gadfly.Scale.ContinuousScaleTransform}}})
precompile(Tuple{Type{NamedTuple{(:format,), T} where T<:Tuple}, Tuple{Symbol}})
precompile(Tuple{getfield(Gadfly.Scale, Symbol("#kw##31#33")), NamedTuple{(:format,), Tuple{Symbol}}, getfield(Gadfly.Scale, Symbol("#31#33")){getfield(Gadfly.Scale, Symbol("#31#32#34")){Array{Symbol, 1}, Gadfly.Scale.ContinuousScaleTransform}}})
precompile(Tuple{Type{Base.GenericIOBuffer{Array{UInt8, 1}}}})
precompile(Tuple{Type{Gadfly.Guide.Title}, String})
precompile(Tuple{Type{Gadfly.Guide.XLabel}, Nothing})
precompile(Tuple{Type{Gadfly.Guide.YLabel}, Nothing})
precompile(Tuple{typeof(Gadfly.plot), Array{Gadfly.Layer, 1}, Array{Gadfly.Layer, 1}, Gadfly.Coord.Cartesian, Gadfly.Scale.ContinuousScale, Gadfly.Scale.ContinuousScale, Gadfly.Guide.Title, Vararg{Union{Array{Gadfly.Layer, 1}, Function, Gadfly.Element, Gadfly.Theme, Type}, N} where N})
precompile(Tuple{Type{Base.Dict{Union{}, Union{}}}})
precompile(Tuple{Type{Base.Dict{K, V} where V where K}, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}})
precompile(Tuple{getfield(Gadfly, Symbol("##plot#74")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Gadfly.plot), Array{Gadfly.Layer, 1}, Vararg{Union{Array{Gadfly.Layer, 1}, Function, Gadfly.Element, Gadfly.Theme, Type}, N} where N})
precompile(Tuple{typeof(Gadfly._evalmapping!), Base.Dict{Symbol, Any}, Nothing, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.evalmapping!), Base.Dict{Symbol, Any}, Nothing, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.plot), Nothing, Base.Dict{Union{}, Union{}}, Array{Gadfly.Layer, 1}, Array{Gadfly.Layer, 1}, Gadfly.Coord.Cartesian, Gadfly.Scale.ContinuousScale, Vararg{Union{Array{Gadfly.Layer, 1}, Function, Gadfly.Element, Gadfly.Theme, Type}, N} where N})
precompile(Tuple{typeof(Base.allocatedinline), Type{Gadfly.Layer}})
precompile(Tuple{typeof(Base.copyto!), Array{Gadfly.Layer, 1}, Int64, Array{Gadfly.Layer, 1}, Int64, Int64})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Array{Gadfly.Layer, 1}})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Coord.Cartesian})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Guide.Title})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Guide.XLabel})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Guide.YLabel})
precompile(Tuple{typeof(Gadfly.add_plot_element!), Gadfly.Plot, Gadfly.Theme})
precompile(Tuple{typeof(Compose.PDF), String, Vararg{Any, N} where N})
precompile(Tuple{getfield(Compose, Symbol("##PDF#135")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Compose.PDF), String, Vararg{Any, N} where N})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), NamedTuple{(:width, :height, :owns_surface, :emit_on_finish, :ppmm, :ownedfile, :filename), Tuple{Float64, Float64, Bool, Bool, Float64, Bool, String}}, Type{Compose.Image{Compose.PDFBackend}}, Cairo.CairoSurfaceIOStream{UInt32}, Cairo.CairoContext, Base.IOStream})
precompile(Tuple{getfield(Compose, Symbol("##_#131")), Int64, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:ownedfile, :filename), Tuple{Bool, String}}}, Type{Compose.Image{Compose.PDFBackend}}, Base.IOStream, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Bool})
precompile(Tuple{Type{Compose.Image{Compose.PDFBackend}}, String, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}})
precompile(Tuple{getfield(Compose, Symbol("##_#130")), Float64, Float64, ColorTypes.RGBA{Float64}, ColorTypes.RGBA{Float64}, Array{Any, 1}, Compose.LineCapButt, Compose.LineJoinMiter, Bool, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Nothing, Bool, Array{Compose.ImagePropertyState, 1}, Array{Compose.ImagePropertyFrame, 1}, Base.Dict{Type, Union{Nothing, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Bool, Bool, String, Bool, Bool, Float64, Nothing, Nothing, Type{Compose.Image{Compose.PDFBackend}}, Cairo.CairoSurfaceIOStream{UInt32}, Cairo.CairoContext, Base.IOStream})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Plot})
precompile(Tuple{typeof(Measures.width), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Measures.height), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.root_box), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{Type{Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Base.Generator{Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, getfield(Compose, Symbol("#137#139"))}})
precompile(Tuple{Type{Base.Dict{Type, Compose.Property{P} where P<:Compose.PropertyPrimitive}}, Base.Generator{Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}, getfield(Compose, Symbol("#138#140"))}})
precompile(Tuple{typeof(Compose.save_property_state), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.push_property_frame), Compose.Image{Compose.PDFBackend}, Array{Compose.Property{P} where P<:Compose.PropertyPrimitive, 1}})
precompile(Tuple{typeof(Compose.canbatch), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, Nothing})
precompile(Tuple{typeof(Compose.restore_property_state), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.pop_property_frame), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.Context, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.finish), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Context})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Gadfly.Plot})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Gadfly.Col.GroupedColumn, 1}, getfield(Gadfly, Symbol("#116#118")){Base.Set{Symbol}}}})
precompile(Tuple{typeof(Gadfly.meltdata), DataFrames.DataFrame, Array{Gadfly.Col.GroupedColumn, 1}})
precompile(Tuple{typeof(Gadfly._evalmapping!), Base.Dict{Symbol, Any}, DataFrames.DataFrame, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.evalmapping!), Base.Dict{Symbol, Any}, DataFrames.DataFrame, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.evalmapping), DataFrames.DataFrame, Symbol})
precompile(Tuple{typeof(Base.copy), Array{Int64, 1}})
precompile(Tuple{typeof(Gadfly.element_coordinate_type), Gadfly.Geom.PointGeometry})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Geom.PointGeometry})
precompile(Tuple{typeof(Base.vect), Gadfly.Stat.Identity})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Gadfly.StatisticElement, 1}, Base.IndexLinear, Array{Gadfly.Stat.Identity, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Gadfly.Stat.Identity, 1}, Int64})
precompile(Tuple{typeof(Gadfly.element_aesthetics), Gadfly.Geom.PointGeometry})
precompile(Tuple{typeof(Gadfly.input_aesthetics), Gadfly.Stat.Identity})
precompile(Tuple{typeof(Base._similar_for), Array{Gadfly.StatisticElement, 1}, Type{Tuple{Gadfly.Stat.Identity, Gadfly.Theme}}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Gadfly.Stat.Identity, Gadfly.Theme}, 1}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Gadfly.Stat.Identity, Gadfly.Theme}, 1}, Tuple{Gadfly.Stat.Identity, Gadfly.Theme}, Base.Generator{Array{Gadfly.StatisticElement, 1}, getfield(Gadfly, Symbol("#88#101")){Gadfly.Layer, Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64})
precompile(Tuple{typeof(Base._array_for), Type{Array{Tuple{Gadfly.Stat.Identity, Gadfly.Theme}, 1}}, Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Tuple{Gadfly.Stat.Identity, Gadfly.Theme}, 1}, 1}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, getfield(Base, Symbol("#3#4")){getfield(Gadfly, Symbol("#87#100")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}}, Int64, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Tuple{Gadfly.Stat.Identity, Gadfly.Theme}, 1}, 1}, Array{Tuple{Gadfly.Stat.Identity, Gadfly.Theme}, 1}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, getfield(Base, Symbol("#3#4")){getfield(Gadfly, Symbol("#87#100")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.copyto!), Array{Array{T, 1} where T, 1}, Int64, Array{Array{Tuple{Gadfly.Stat.Identity, Gadfly.Theme}, 1}, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.setindex_widen_up_to), Array{Array{Tuple{Gadfly.Stat.Identity, Gadfly.Theme}, 1}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{T, 1} where T, 1}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}}}, getfield(Base, Symbol("#3#4")){getfield(Gadfly, Symbol("#87#100")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}}, Int64, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base._array_for), Type{Tuple{Gadfly.Geom.PointGeometry, Gadfly.Theme}}, Array{Gadfly.Layer, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Gadfly.Geom.PointGeometry, Gadfly.Theme}, 1}, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#90#103")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Gadfly.Geom.PointGeometry, Gadfly.Theme}, 1}, Tuple{Gadfly.Geom.PointGeometry, Gadfly.Theme}, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#90#103")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Tuple{Gadfly.GeometryElement, Gadfly.Theme}, 1}, Int64, Array{Tuple{Gadfly.Geom.PointGeometry, Gadfly.Theme}, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.setindex_widen_up_to), Array{Tuple{Gadfly.Geom.PointGeometry, Gadfly.Theme}, 1}, Tuple{Gadfly.Geom.LineGeometry, Gadfly.Theme}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Gadfly.GeometryElement, Gadfly.Theme}, 1}, Base.Generator{Array{Gadfly.Layer, 1}, getfield(Gadfly, Symbol("#90#103")){Gadfly.Plot, getfield(Gadfly, Symbol("#_theme#99"))}}, Int64, Int64})
precompile(Tuple{typeof(Base.Iterators.flatten), Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.GeometryElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.Identity, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.GeometryElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.Identity, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Tuple{}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Gadfly.GeometryElement, Gadfly.Theme}, 1}, Int64})
precompile(Tuple{typeof(Gadfly.default_scales), Gadfly.Geom.PointGeometry, Gadfly.Theme})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.GeometryElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.Identity, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Tuple{Int64, Array{Tuple{Gadfly.GeometryElement, Gadfly.Theme}, 1}, Int64}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Gadfly.Stat.Identity, Gadfly.Theme}, 1}, Int64})
precompile(Tuple{typeof(Gadfly.default_scales), Gadfly.Stat.Identity, Gadfly.Theme})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.GeometryElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.Identity, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Tuple{Int64, Array{Tuple{Gadfly.Stat.Identity, Gadfly.Theme}, 1}, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Flatten{Tuple{Array{Tuple{Gadfly.StatisticElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.GeometryElement, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.Identity, Gadfly.Theme}, 1}, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}}}, Tuple{Int64, Array{Tuple{Gadfly.Stat.SmoothStatistic, Gadfly.Theme}, 1}, Int64}})
precompile(Tuple{Type{Base.Val{:shape}}})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:categorical}, Base.Val{:shape}, Gadfly.Theme})
precompile(Tuple{Type{Base.Val{:alpha}}})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:categorical}, Base.Val{:alpha}, Gadfly.Theme})
precompile(Tuple{Type{Base.Val{:size}}})
precompile(Tuple{typeof(Gadfly.get_scale), Base.Val{:categorical}, Base.Val{:size}, Gadfly.Theme})
precompile(Tuple{typeof(Base.push!), Base.Set{Any}, Type{T} where T})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Nothing}, Type{T} where T})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Nothing}, Nothing, Type{Gadfly.Guide.Title}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Nothing}, Nothing, Type{Gadfly.Guide.XLabel}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Nothing}, Nothing, Type{Gadfly.Guide.YLabel}})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.Title})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.XLabel})
precompile(Tuple{typeof(Gadfly.default_statistic), Gadfly.Guide.YLabel})
precompile(Tuple{typeof(Gadfly.Scale.apply_scales), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Gadfly.Data, Gadfly.Data})
precompile(Tuple{typeof(Gadfly.Scale.apply_scales), IterTools.Distinct{Base.ValueIterator{Base.Dict{Symbol, Gadfly.ScaleElement}}, Gadfly.ScaleElement}, Array{Gadfly.Aesthetics, 1}, Gadfly.Data, Vararg{Gadfly.Data, N} where N})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.DiscreteScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data, Vararg{Gadfly.Data, N} where N})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Array{Gadfly.Aesthetics, 1}, Tuple{Gadfly.Data, Gadfly.Data}}})
precompile(Tuple{typeof(Base.Iterators._zip_iterate_all), Tuple{Array{Gadfly.Aesthetics, 1}, Tuple{Gadfly.Data, Gadfly.Data}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Gadfly.Aesthetics, Gadfly.Data}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Gadfly.Aesthetics, Gadfly.Data}, Int64, Int64})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{Array{Gadfly.Aesthetics, 1}, Tuple{Gadfly.Data, Gadfly.Data}}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.ContinuousScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data, Vararg{Gadfly.Data, N} where N})
precompile(Tuple{typeof(Base.any), Function, Array{Int64, 1}})
precompile(Tuple{getfield(Base, Symbol("##any#596")), Function, typeof(Base.any), Function, Array{Int64, 1}})
precompile(Tuple{typeof(Base._any), typeof(Base.ismissing), Array{Int64, 1}, Base.Colon})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale_typed!), Array{Int64, 1}, Array{Int64, 1}, Gadfly.Scale.ContinuousScale})
precompile(Tuple{typeof(Gadfly.Scale.apply_scale), Gadfly.Scale.DiscreteColorScale, Array{Gadfly.Aesthetics, 1}, Gadfly.Data, Vararg{Gadfly.Data, N} where N})
precompile(Tuple{typeof(Base.getproperty), Gadfly.Data, Symbol})
precompile(Tuple{typeof(ColorTypes.issupported), Type{ColorTypes.LMS{T} where T<:AbstractFloat}, Type{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Base.getindex), Type{Float64}, Int64, Int64, Float64, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Colors.cnvt), Type{ColorTypes.XYZ{Float32}}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Colors.deuteranopic), ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Float64, ColorTypes.LMS{Float32}})
precompile(Tuple{getfield(Colors, Symbol("##distinguishable_colors#11")), Bool, getfield(Gadfly, Symbol("#60#64")), Array{Float64, 1}, Array{Float64, 1}, Array{Int64, 1}, typeof(Colors.distinguishable_colors), Int64, Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{ColorTypes.Color{T, N} where N where T, 1}, Base.IndexLinear, Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}})
precompile(Tuple{getfield(Gadfly, Symbol("#gen_dark_colors#63")){ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{ColorTypes.RGB{Float32}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Int64})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, Function})
precompile(Tuple{typeof(Base.convert), Type{Function}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Base.AbstractDict{K, V} where V where K}}, OrderedCollections.OrderedDict{Any, Any}})
precompile(Tuple{typeof(Base.getproperty), Gadfly.Aesthetics, Symbol})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Base.Dict{Symbol, AbstractString}}}, Base.Dict{Symbol, AbstractString}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Nothing, 1}, Nothing})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(!=)), Tuple{Array{Nothing, 1}, Base.RefValue{Nothing}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{Nothing, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(getfield), Tuple{Array{Gadfly.Data, 1}, Base.RefValue{Symbol}}}}}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, AbstractArray{T, 2} where T, AbstractArray{T, 1} where T, Distributions.Distribution{F, S} where S<:Distributions.ValueSupport where F<:Distributions.VariateForm, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float64, 1}, Float64})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Float64, Array{Float64, 1}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Float64, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(*)), Tuple{Float64, Array{Float64, 1}}}})
precompile(Tuple{typeof(Gadfly.concat), Gadfly.Aesthetics, Vararg{Gadfly.Aesthetics, N} where N})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Array{Int64, 1}, Array{Float64, 1}})
precompile(Tuple{typeof(Base.:(==)), Array{ColorTypes.RGB{Float32}, 1}, Array{ColorTypes.RGB{Float32}, 1}})
precompile(Tuple{typeof(Base.push!), Array{Int64, 1}, Nothing})
precompile(Tuple{typeof(Base.append!), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), OrderedCollections.OrderedDict{Any, Any}, OrderedCollections.OrderedDict{Any, Any}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), String, String})
precompile(Tuple{typeof(Base.merge!), Base.Dict{Symbol, AbstractString}, Base.Dict{Symbol, AbstractString}})
precompile(Tuple{typeof(Gadfly.cat_aes_var!), Base.Dict{Symbol, AbstractString}, Base.Dict{Symbol, AbstractString}})
precompile(Tuple{Type{Symbol}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Gadfly.render_prepared), Gadfly.Plot, Gadfly.Coord.Cartesian, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Array{Gadfly.GuideElement, 1}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.XTicks, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.YTicks, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{getfield(Gadfly, Symbol("##render_prepared#107")), Bool, Bool, typeof(Gadfly.render_prepared), Gadfly.Plot, Gadfly.Coord.Cartesian, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Array{Gadfly.GuideElement, 1}})
precompile(Tuple{typeof(Gadfly.concrete_minmax), Array{Int64, 1}, Float64, Float64})
precompile(Tuple{getfield(Gadfly, Symbol("#kw##render_prepared")), NamedTuple{(:table_only,), Tuple{Bool}}, typeof(Gadfly.render_prepared), Gadfly.Plot, Gadfly.Coord.Cartesian, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.StatisticElement, 1}, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}, Array{Gadfly.GuideElement, 1}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Geom.SubplotGrid, Gadfly.Theme, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}})
precompile(Tuple{getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}, Tuple{Gadfly.Layer, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}, Gadfly.Theme}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.Context, 1}, Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}}, getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}}, Int64, Tuple{Int64, Int64, Int64, Int64, Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Zip{Tuple{Array{Gadfly.Layer, 1}, Array{Gadfly.Aesthetics, 1}, Array{Array{Gadfly.Aesthetics, 1}, 1}, Array{Array{Gadfly.Data, 1}, 1}, Array{Gadfly.Theme, 1}}}, getfield(Gadfly, Symbol("#108#109")){Base.Dict{Symbol, Gadfly.ScaleElement}}}})
precompile(Tuple{typeof(ColorTypes.eltypes_supported), Type{ColorTypes.RGBA{Float32}}})
precompile(Tuple{typeof(Base.convert), Type{ColorTypes.RGBA{Float32}}, Nothing})
precompile(Tuple{typeof(Base.setindex!), Array{ColorTypes.RGBA{Float32}, 1}, Nothing, Int64})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGBA{Float32}, Nothing}}})
precompile(Tuple{typeof(Base.hash), ColorTypes.RGBA{Float32}, UInt64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.RGBA{Float32}, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.RGBA{Float32}, Nothing}, ColorTypes.RGBA{Float32}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{ColorTypes.RGBA{Float32}, Nothing}, Nothing, ColorTypes.RGBA{Float32}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{ColorTypes.RGBA{Float32}, Nothing}, ColorTypes.RGBA{Float32}})
precompile(Tuple{typeof(Base.unique), Array{ColorTypes.RGBA{Float32}, 1}})
precompile(Tuple{Type{Base.Dict{ColorTypes.RGBA{Float32}, Int64}}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{ColorTypes.RGBA{Float32}, Int64}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{ColorTypes.RGBA{Float32}, Int64}, ColorTypes.RGBA{Float32}})
precompile(Tuple{typeof(Base.get!), getfield(Base, Symbol("#243#244")){Int64}, Base.Dict{ColorTypes.RGBA{Float32}, Int64}, ColorTypes.RGBA{Float32}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{ColorTypes.RGBA{Float32}, Int64}, ColorTypes.RGBA{Float32}})
precompile(Tuple{typeof(Base.indexin), Array{ColorTypes.RGBA{Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{ColorTypes.RGBA{Float32}, 1}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Gadfly.discretize_make_ia), Array{ColorTypes.RGBA{Float32}, 1}, Array{ColorTypes.RGBA{Float32}, 1}})
precompile(Tuple{typeof(Base._extrema_itr), typeof(Base.identity), Nothing})
precompile(Tuple{typeof(Base.extrema), Nothing})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Geom.PointGeometry, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Geom.PointGeometry, Gadfly.Theme, Gadfly.Aesthetics, Array{Gadfly.Aesthetics, 1}, Array{Gadfly.Data, 1}, Base.Dict{Symbol, Gadfly.ScaleElement}})
precompile(Tuple{typeof(Base.getindex), Type{ColorTypes.RGBA{Float32}}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{getfield(Gadfly, Symbol("##Aesthetics#45")), Array{Int64, 1}, Array{Int64, 1}, Nothing, Nothing, Nothing, Nothing, Nothing, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, OrderedCollections.OrderedDict{Any, Any}, String, Nothing, Nothing, Base.Dict{Symbol, AbstractString}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, getfield(Gadfly.Scale, Symbol("#27#29")){Gadfly.Scale.ContinuousScale}, getfield(Gadfly.Scale, Symbol("#28#30")){Gadfly.Scale.ContinuousScale}, typeof(Showoff.showoff), typeof(Showoff.showoff), getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, typeof(Showoff.showoff), typeof(Showoff.showoff), typeof(Showoff.showoff), typeof(Showoff.showoff), Base.Missing, Base.Missing, Type{Gadfly.Aesthetics}, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.eltype), Array{Measures.Measure, 1}})
precompile(Tuple{typeof(Compose.cyclezip), Array{Int64, 1}, Vararg{AbstractArray{T, N} where N where T, N} where N})
precompile(Tuple{typeof(Base.map), typeof(Base.isempty), Tuple{Array{Int64, 1}, Array{Int64, 1}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Array{Measures.Measure, 1}, Array{Function, 1}, Array{Float64, 1}}})
precompile(Tuple{typeof(Base.any), Tuple{Bool, Bool, Bool, Bool, Bool, Bool}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, typeof(Base.length), Tuple{Array{Int64, 1}, Array{Int64, 1}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Array{Measures.Measure, 1}, Array{Function, 1}, Array{Float64, 1}}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Tuple{Array{Int64, 1}, Array{Int64, 1}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Array{Measures.Measure, 1}, Array{Function, 1}, Array{Float64, 1}}, typeof(Base.length)}, Int64, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{Array{Int64, 1}, Array{Int64, 1}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Array{Measures.Measure, 1}, Array{Function, 1}, Array{Float64, 1}}, typeof(Base.length)}})
precompile(Tuple{typeof(Base.length), Array{Measures.Measure, 1}})
precompile(Tuple{typeof(Base.length), Array{Function, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, typeof(Base.Iterators.cycle), Tuple{Array{Int64, 1}, Array{Int64, 1}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Array{Measures.Measure, 1}, Array{Function, 1}, Array{Float64, 1}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{Array{Int64, 1}, Array{Int64, 1}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Array{Measures.Measure, 1}, Array{Function, 1}, Array{Float64, 1}}, typeof(Base.Iterators.cycle)}})
precompile(Tuple{typeof(Base.Iterators.cycle), Array{Int64, 1}})
precompile(Tuple{typeof(Base._array_for), Type{Base.Iterators.Cycle{Array{Int64, 1}}}, Tuple{Array{Int64, 1}, Array{Int64, 1}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Array{Measures.Measure, 1}, Array{Function, 1}, Array{Float64, 1}}, Base.HasLength})
precompile(Tuple{typeof(Base.collect_to!), Array{Base.Iterators.Cycle{Array{Int64, 1}}, 1}, Base.Generator{Tuple{Array{Int64, 1}, Array{Int64, 1}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Array{Measures.Measure, 1}, Array{Function, 1}, Array{Float64, 1}}, typeof(Base.Iterators.cycle)}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Base.Iterators.Cycle{Array{Int64, 1}}, 1}, Base.Iterators.Cycle{Array{Int64, 1}}, Base.Generator{Tuple{Array{Int64, 1}, Array{Int64, 1}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Array{Measures.Measure, 1}, Array{Function, 1}, Array{Float64, 1}}, typeof(Base.Iterators.cycle)}, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Base.Iterators.Cycle{I} where I, 1}, Int64, Array{Base.Iterators.Cycle{Array{Int64, 1}}, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.setindex_widen_up_to), Array{Base.Iterators.Cycle{Array{Int64, 1}}, 1}, Base.Iterators.Cycle{IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Base.Iterators.Cycle{I} where I, 1}, Base.Generator{Tuple{Array{Int64, 1}, Array{Int64, 1}, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Array{Measures.Measure, 1}, Array{Function, 1}, Array{Float64, 1}}, typeof(Base.Iterators.cycle)}, Int64, Int64})
precompile(Tuple{typeof(Base.Iterators.cycle), Array{Measures.Measure, 1}})
precompile(Tuple{typeof(Base.Iterators.cycle), Array{Function, 1}})
precompile(Tuple{typeof(Base.Iterators.cycle), Array{Float64, 1}})
precompile(Tuple{typeof(Base.Iterators.zip), Base.Iterators.Cycle{Array{Int64, 1}}, Vararg{Any, N} where N})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{Base.Iterators.Cycle{Array{Int64, 1}}, Base.Iterators.Cycle{Array{Int64, 1}}, Base.Iterators.Cycle{IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, Base.Iterators.Cycle{Array{Measures.Measure, 1}}, Base.Iterators.Cycle{Array{Function, 1}}, Base.Iterators.Cycle{Array{Float64, 1}}}})
precompile(Tuple{typeof(IterTools.takestrict), Base.Iterators.Zip{Tuple{Base.Iterators.Cycle{Array{Int64, 1}}, Base.Iterators.Cycle{Array{Int64, 1}}, Base.Iterators.Cycle{IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, Base.Iterators.Cycle{Array{Measures.Measure, 1}}, Base.Iterators.Cycle{Array{Function, 1}}, Base.Iterators.Cycle{Array{Float64, 1}}}}, Int64})
precompile(Tuple{typeof(Base.iterate), IterTools.TakeStrict{Base.Iterators.Zip{Tuple{Base.Iterators.Cycle{Array{Int64, 1}}, Base.Iterators.Cycle{Array{Int64, 1}}, Base.Iterators.Cycle{IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, Base.Iterators.Cycle{Array{Measures.Measure, 1}}, Base.Iterators.Cycle{Array{Function, 1}}, Base.Iterators.Cycle{Array{Float64, 1}}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), IterTools.TakeStrict{Base.Iterators.Zip{Tuple{Base.Iterators.Cycle{Array{Int64, 1}}, Base.Iterators.Cycle{Array{Int64, 1}}, Base.Iterators.Cycle{IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, Base.Iterators.Cycle{Array{Measures.Measure, 1}}, Base.Iterators.Cycle{Array{Function, 1}}, Base.Iterators.Cycle{Array{Float64, 1}}}}}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int64, Int64, ColorTypes.RGB{Float32}, Measures.Length{:mm, Float64}, typeof(Compose.circle), Float64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int64, Int64, ColorTypes.RGB{Float32}, Measures.Length{:mm, Float64}, typeof(Compose.circle), Float64}, Int64, Int64})
precompile(Tuple{getfield(Main, Symbol("#7#8")), ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Base.vect), ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Compose.circle), Array{Int64, 1}, Array{Int64, 1}, Array{Measures.Length{:mm, Float64}, 1}, Symbol})
precompile(Tuple{typeof(Compose.circle), Array{Int64, 1}, Array{Int64, 1}, Array{Measures.Length{:mm, Float64}, 1}})
precompile(Tuple{typeof(Base.fill), ColorTypes.RGB{Float32}})
precompile(Tuple{typeof(Compose.compose!), Compose.Context, Tuple{Compose.Context, Tuple{Compose.Context, Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}, Compose.Property{Compose.SVGClassPrimitive}}, Compose.Property{Compose.FillPrimitive}, Compose.Property{Compose.StrokePrimitive}, Compose.Property{Compose.FillOpacityPrimitive}, Compose.Property{Compose.SVGClassPrimitive}}})
precompile(Tuple{typeof(Base.iterate), IterTools.TakeStrict{Base.Iterators.Zip{Tuple{Base.Iterators.Cycle{Array{Int64, 1}}, Base.Iterators.Cycle{Array{Int64, 1}}, Base.Iterators.Cycle{IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}}, Base.Iterators.Cycle{Array{Measures.Measure, 1}}, Base.Iterators.Cycle{Array{Function, 1}}, Base.Iterators.Cycle{Array{Float64, 1}}}}}, Tuple{Int64, Tuple{Int64, Int64, Tuple{Base.OneTo{Int64}, Int64}, Int64, Int64, Int64}}})
precompile(Tuple{Type{IndirectArrays.IndirectArray{UInt8, N, A, V} where V<:AbstractArray{UInt8, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N}, Array{Int64, 1}})
precompile(Tuple{Type{IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.fill!), Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}, ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}})
precompile(Tuple{typeof(Base.fill), ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Int64})
precompile(Tuple{typeof(Base.setproperty!), Gadfly.Aesthetics, Symbol, Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, Array{ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, 1}})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Array{T, 1} where T, IndirectArrays.IndirectArray{T, N, A, V} where V<:AbstractArray{T, 1} where A<:(AbstractArray{#s12, N} where #s12<:Integer) where N where T}}, Array{Int64, 1}})
precompile(Tuple{getfield(Gadfly, Symbol("##Aesthetics#45")), Array{Int64, 1}, Array{Float64, 1}, Nothing, Nothing, Nothing, Nothing, Nothing, IndirectArrays.IndirectArray{ColorTypes.RGB{Float32}, 1, Array{Int64, 1}, Array{ColorTypes.RGB{Float32}, 1}}, Nothing, IndirectArrays.IndirectArray{Int64, 1, Array{Int64, 1}, Array{Int64, 1}}, Nothing, Nothing, Nothing, Nothing, Array{Float64, 1}, Array{Float64, 1}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, OrderedCollections.OrderedDict{Any, Any}, String, Nothing, Nothing, Base.Dict{Symbol, AbstractString}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, getfield(Gadfly.Scale, Symbol("#27#29")){Gadfly.Scale.ContinuousScale}, getfield(Gadfly.Scale, Symbol("#28#30")){Gadfly.Scale.ContinuousScale}, typeof(Showoff.showoff), typeof(Showoff.showoff), getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, typeof(Showoff.showoff), typeof(Showoff.showoff), typeof(Showoff.showoff), typeof(Showoff.showoff), Base.Missing, Base.Missing, Type{Gadfly.Aesthetics}, Gadfly.Aesthetics})
precompile(Tuple{typeof(Base.vect), Array{Int64, 1}, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Int64, 1}}}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Gadfly.isconcrete), Tuple{Array{Float64, 1}}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), Function, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}, Array{Tuple{Int64, ColorTypes.RGB{Float32}, Int64, Int64}, 1}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.Title, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.Title, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{getfield(Compose, Symbol("#143#144")), Base.SubString{String}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{Base.SubString{String}, 1}, getfield(Compose, Symbol("#143#144"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Base.SubString{String}, 1}, getfield(Compose, Symbol("#143#144"))}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{AbstractString, Nothing}, String})
precompile(Tuple{getfield(Fontconfig, Symbol("#Pattern#1#4")), Base.Iterators.Pairs{Symbol, String, Tuple{Symbol}, NamedTuple{(:family,), Tuple{String}}}, Type{Fontconfig.Pattern}})
precompile(Tuple{typeof(Base.match), Fontconfig.Pattern, Bool})
precompile(Tuple{typeof(Compose.match_font), String, Float64})
precompile(Tuple{typeof(Compose.max_text_extents), String, Measures.Length{:mm, Float64}, String})
precompile(Tuple{typeof(Base.:(-)), Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.text), Measures.Length{:w, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}, String, Compose.HCenter, Compose.VTop})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.XLabel, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.XLabel, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.YLabel, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.YLabel, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.HelpScreen, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.HelpScreen, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Compose.max_text_extents), String, Measures.Length{:mm, Float64}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Compose.max_text_extents), String, Float64, String, Vararg{String, N} where N})
precompile(Tuple{getfield(Gadfly.Scale, Symbol("#27#29")){Gadfly.Scale.ContinuousScale}, Array{Float64, 1}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Main, Symbol("#9#10")), Array{Float64, 1}})
precompile(Tuple{getfield(Main, Symbol("#9#10")), Float64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{String, 1}, String, Base.Generator{Array{Float64, 1}, getfield(Main, Symbol("#9#10"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Float64, 1}, getfield(Main, Symbol("#9#10"))}})
precompile(Tuple{typeof(Compose.text_extents), String, Measures.Length{:mm, Float64}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Compose.text_extents), String, Float64, String, Vararg{String, N} where N})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Compose, Symbol("#145#146")), Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}, getfield(Compose, Symbol("#145#146"))}})
precompile(Tuple{typeof(Base._array_for), Type{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}, Base.HasLength})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Base.Generator{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}, getfield(Compose, Symbol("#145#146"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Base.Generator{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}, getfield(Compose, Symbol("#145#146"))}, Int64})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#33#42")), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, getfield(Gadfly.Guide, Symbol("#33#42"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, getfield(Gadfly.Guide, Symbol("#33#42"))}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#34#43")), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, getfield(Gadfly.Guide, Symbol("#34#43"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, getfield(Gadfly.Guide, Symbol("#34#43"))}})
precompile(Tuple{getfield(Gadfly.Scale, Symbol("#28#30")){Gadfly.Scale.ContinuousScale}, Array{Float64, 1}})
precompile(Tuple{typeof(Gadfly.Scale.identity_formatter), Array{Float64, 1}, Symbol})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Compose, Symbol("#145#146")), Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}, getfield(Compose, Symbol("#145#146"))}})
precompile(Tuple{typeof(Base._array_for), Type{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}, Base.HasLength})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Base.Generator{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}, getfield(Compose, Symbol("#145#146"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Base.Generator{Tuple{String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String}, getfield(Compose, Symbol("#145#146"))}, Int64})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#52#61")), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, getfield(Gadfly.Guide, Symbol("#52#61"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, getfield(Gadfly.Guide, Symbol("#52#61"))}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#53#62")), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, getfield(Gadfly.Guide, Symbol("#53#62"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, getfield(Gadfly.Guide, Symbol("#53#62"))}})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.ColorKey, Gadfly.Theme, Gadfly.Aesthetics})
precompile(Tuple{typeof(Gadfly.render), Gadfly.Guide.ColorKey, Gadfly.Theme, Gadfly.Aesthetics, Bool})
precompile(Tuple{typeof(Gadfly.Guide.render_key_title), String, Gadfly.Theme})
precompile(Tuple{typeof(Gadfly.Guide.render_discrete_color_key), Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Compose, Symbol("#145#146")), Tuple{String, String, String, String, String, String, String}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Tuple{String, String, String, String, String, String, String}, getfield(Compose, Symbol("#145#146"))}})
precompile(Tuple{typeof(Base._array_for), Type{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{String, String, String, String, String, String, String}, Base.HasLength})
precompile(Tuple{typeof(Base.collect_to!), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Base.Generator{Tuple{String, String, String, String, String, String, String}, getfield(Compose, Symbol("#145#146"))}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Base.Generator{Tuple{String, String, String, String, String, String, String}, getfield(Compose, Symbol("#145#146"))}, Int64})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#4#11")), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, getfield(Gadfly.Guide, Symbol("#4#11"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, getfield(Gadfly.Guide, Symbol("#4#11"))}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Base.UnitRange{Int64}})
precompile(Tuple{getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.Context, 1}, Compose.Context, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Int64})
precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_similar), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(Gadfly.Guide, Symbol("#make_layout#12")){Array{ColorTypes.Color{T, N} where N where T, 1}, OrderedCollections.OrderedDict{ColorTypes.Color{T, N} where N where T, AbstractString}, getfield(Gadfly.Scale, Symbol("#labeler#66")){Base.Dict{ColorTypes.RGB{Float32}, String}}, Compose.Context, Measures.Length{:mm, Float64}, Gadfly.Theme, Int64, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.getindex), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, Base.UnitRange{Int64}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Gadfly.Guide, Symbol("#5#13")), Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Measures.Length{:mm, Float64}, 1}, Measures.Length{:mm, Float64}, Base.Generator{Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, getfield(Gadfly.Guide, Symbol("#5#13"))}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}, getfield(Gadfly.Guide, Symbol("#5#13"))}})
precompile(Tuple{typeof(Base.getindex), DataStructures.DefaultDict{Any, Any, getfield(Gadfly.Guide, Symbol("#81#86"))}, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.convert), Type{Any}, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.TopGuidePosition, Gadfly.Guide.LeftGuidePosition})
precompile(Tuple{typeof(Base.:(==)), Gadfly.Guide.TopGuidePosition, Gadfly.Guide.TopGuidePosition})
precompile(Tuple{typeof(Base.:(!=)), ColorTypes.RGB{FixedPointNumbers.Normed{UInt8, 8}}, Nothing})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{Type{Compose.ImagePropertyState}, ColorTypes.RGBA{Float64}, ColorTypes.RGBA{Float64}, Array{Float64, 1}, Compose.LineCapButt, Compose.LineJoinMiter, Bool, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Nothing, Bool})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.StrokePrimitive})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FillPrimitive})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}})
precompile(Tuple{typeof(Compose.vector_properties_require_push_pop), Compose.Image{Compose.PDFBackend}})
precompile(Tuple{typeof(Compose.push_vector_properties), Compose.Image{Compose.PDFBackend}, Int64})
precompile(Tuple{typeof(Compose.fillstroke), Compose.Image{Compose.PDFBackend}, Bool})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, String})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.JSIncludePrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.JSIncludePrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.SVGClassPrimitive})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.JSIncludePrimitive})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.Table, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{Type{Base.Iterators.ProductIterator{T} where T<:Tuple}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}})
precompile(Tuple{typeof(Base.Iterators.enumerate), Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{Int64, Int64}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Enumerate{Tuple{Int64, Int64}}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.ProductIterator{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, Tuple{Tuple{Int64, Int64}, Tuple{Int64, Int64}}})
precompile(Tuple{Type{Compose.Context}, Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Compose.UnitBox{Int64, Float64, Float64, Float64}, Nothing, Nothing, Nothing, Compose.ListNull{Compose.Container}, Compose.ListNode{Compose.Form{P} where P<:Compose.FormPrimitive}, Compose.ListNode{Compose.Property{P} where P<:Compose.PropertyPrimitive}, Int64, Bool, Bool, Bool, Bool, Float64, Float64, Float64, Symbol})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.AdhocContainerPromise, Compose.IdentityTransform, Compose.UnitBox{Float64, Float64, Float64, Float64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FontSizePrimitive})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FontPrimitive})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Compose.rotate), Compose.Image{Compose.PDFBackend}, Float64, Float64, Float64})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Axes, F, Args} where Args<:Tuple where F where Axes}, getfield(Main, Symbol("#7#8")), Tuple{Array{ColorTypes.Color{T, N} where N where T, 1}}})
precompile(Tuple{typeof(Base.throw_boundserror), Base.Broadcast.Broadcasted{Nothing, Tuple{Base.OneTo{Int64}}, getfield(Main, Symbol("#7#8")), Tuple{Base.Broadcast.Extruded{Array{ColorTypes.Color{T, N} where N where T, 1}, Tuple{Bool}, Tuple{Int64}}}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, getfield(Main, Symbol("#7#8")), Tuple{Array{ColorTypes.Color{T, N} where N where T, 1}}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.StrokePrimitive, 1}, Compose.StrokePrimitive, Base.Generator{Array{Nothing, 1}, getfield(Compose, Symbol("#42#43"))}, Int64})
precompile(Tuple{typeof(Compose.stroke), Array{Nothing, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.JSCallPrimitive})
precompile(Tuple{typeof(Compose.drawpart), Compose.Image{Compose.PDFBackend}, Compose.Context, Compose.IdentityTransform, Compose.UnitBox{Int64, Int64, Int64, Int64}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.JSCallPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.SVGClassPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontSizePrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FontPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:cy, Int64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.FillPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.StrokePrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Int64, Int64, Int64, Int64}, Compose.IdentityTransform, Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure, Measures.Measure}}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.FillOpacityPrimitive})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.ClipPrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.SVGAttributePrimitive}})
precompile(Tuple{Type{Compose.ImagePropertyState}, ColorTypes.RGBA{Float64}, ColorTypes.RGBA{Float64}, Array{Float64, 1}, Compose.LineCapButt, Compose.LineJoinMiter, Bool, Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}, String, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Bool})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.SVGAttributePrimitive})
precompile(Tuple{typeof(Base.setproperty!), Compose.Image{Compose.PDFBackend}, Symbol, Compose.ClipPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{getfield(Compose, Symbol("#137#139")), Compose.Property{Compose.LineWidthPrimitive}})
precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#141#142")){Compose.Image{Compose.PDFBackend}}}, Int64, Int64})
precompile(Tuple{typeof(Base._collect), Array{Measures.Measure, 1}, Base.Generator{Array{Measures.Measure, 1}, getfield(Compose, Symbol("#141#142")){Compose.Image{Compose.PDFBackend}}}, Base.EltypeUnknown, Base.HasShape{1}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.StrokeDashPrimitive})
precompile(Tuple{getfield(Compose, Symbol("#141#142")){Compose.Image{Compose.PDFBackend}}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Compose.apply_property), Compose.Image{Compose.PDFBackend}, Compose.LineWidthPrimitive})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.LinePrimitive{P} where P<:(Tuple{Vararg{Measures.Measure, N}} where N)}})
precompile(Tuple{typeof(Compose.arrowhead), Compose.Image{Compose.PDFBackend}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Float64, Float64})
precompile(Tuple{typeof(Compose.arrow), Compose.Image{Compose.PDFBackend}, Array{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.LinePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{getfield(Compose, Symbol("#138#140")), Compose.Property{Compose.StrokeDashPrimitive}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.FillOpacityPrimitive, 1}, Compose.FillOpacityPrimitive, Base.Generator{Array{Compose.FillOpacityPrimitive, 1}, getfield(Compose, Symbol("#40#41")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Property{Compose.FillOpacityPrimitive}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.CirclePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}, 1}, Compose.CirclePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}, Base.Generator{Array{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Int64}}})
precompile(Tuple{Type{Compose.CirclePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Symbol})
precompile(Tuple{typeof(Base.isempty), Array{Compose.CirclePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}, 1}})
precompile(Tuple{typeof(Compose.batch), Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.draw), Compose.Image{Compose.PDFBackend}, Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Add{Measures.Length{:w, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Base.getproperty), Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Symbol})
precompile(Tuple{typeof(Base.length), Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}})
precompile(Tuple{typeof(Compose.register_coords), Compose.Image{Compose.PDFBackend}, Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}})
precompile(Tuple{typeof(Measures.resolve), Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform, Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}})
precompile(Tuple{typeof(Base._array_for), Type{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}}, Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.HasShape{1}})
precompile(Tuple{typeof(Base.collect_to!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, Compose.TextPrimitive{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Compose.Rotation{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Base.Generator{Array{Compose.TextPrimitive{Tuple{Measures.Length{:w, Float64}, Measures.Add{Measures.Add{Measures.Length{:h, Float64}, Measures.Length{:mm, Float64}}, Measures.Length{:mm, Float64}}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, 1}, getfield(Compose, Symbol("#9#10")){Measures.BoundingBox{Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}, Tuple{Measures.Length{:mm, Float64}, Measures.Length{:mm, Float64}}}, Compose.UnitBox{Float64, Float64, Float64, Float64}, Compose.IdentityTransform}}, Int64})
